/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


#define SWIG_VERSION 0x040200
#define SWIGJAVASCRIPT
/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif

#if __cplusplus >=201103L
# define SWIG_NULLPTR nullptr
#else
# define SWIG_NULLPTR NULL
#endif 


/* C99 and C++11 should provide snprintf, but define SWIG_NO_SNPRINTF
 * if you're missing it.
 */
#if ((defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L) || \
     (defined __cplusplus && __cplusplus >= 201103L) || \
     defined SWIG_HAVE_SNPRINTF) && \
    !defined SWIG_NO_SNPRINTF
# define SWIG_snprintf(O,S,F,A) snprintf(O,S,F,A)
# define SWIG_snprintf2(O,S,F,A,B) snprintf(O,S,F,A,B)
#else
/* Fallback versions ignore the buffer size, but most of our uses either have a
 * fixed maximum possible size or dynamically allocate a buffer that's large
 * enough.
 */
# define SWIG_snprintf(O,S,F,A) sprintf(O,F,A)
# define SWIG_snprintf2(O,S,F,A,B) sprintf(O,F,A,B)
#endif




#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) do { if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } } while (0) 



#include <node.h>
//Older version of node.h does not include this
#include <node_version.h>


#include <v8.h>

#undef SWIG_V8_VERSION
#define SWIG_V8_VERSION ((V8_MAJOR_VERSION / 10) * 4096 + \
                         (V8_MAJOR_VERSION % 10) * 256 + \
                         (V8_MINOR_VERSION / 10) * 16 + \
                         (V8_MINOR_VERSION % 10))

#include <errno.h>
#include <limits.h>
#include <stdlib.h>
#include <assert.h>

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.

  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2
#define SWIG_POINTER_NO_NULL       0x4
#define SWIG_POINTER_CLEAR         0x8
#define SWIG_POINTER_RELEASE       (SWIG_POINTER_CLEAR | SWIG_POINTER_DISOWN)

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/*
   Flags/methods for returning states.

   The SWIG conversion methods, as ConvertPtr, return an integer
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).

   Use the following macros/flags to set or process the returning
   states.

   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }

   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {
        if (<obj is ok>) {
          if (<need new object>) {
            *ptr = <ptr to new allocated object>;
            return SWIG_NEWOBJ;
          } else {
            *ptr = <ptr to old object>;
            return SWIG_OLDOBJ;
          }
        } else {
          return SWIG_BADOBJ;
        }
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows returning the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call

      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0)
/* Runtime errors are < 0 */
#define SWIG_ERROR                 (-1)
/* Errors in range -1 to -99 are in swigerrors.swg (errors for all languages including those not using the runtime) */
/* Errors in range -100 to -199 are language specific errors defined in *errors.swg */
/* Errors < -200 are generic runtime specific errors */
#define SWIG_ERROR_RELEASE_NOT_OWNED (-200)

#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporary objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del object mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) {
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) {
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0;
}
#else /* no cast-rank mode */
#  define SWIG_AddCast(r) (r)
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/*
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCmp(const char *nb, const char *tb) {
  int equiv = 1;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (equiv != 0 && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te);
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  return SWIG_TypeCmp(nb, tb) == 0 ? 1 : 0;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(const swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/*
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  Choose the last
     name. It should be the most specific; a fully resolved name
     but not necessarily with default template parameters expanded. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;

  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start,
                            swig_module_info *end,
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      size_t l = 0;
      size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	size_t i = (l + r) >> 1;
	const char *iname = iter->types[i]->name;
	if (iname) {
	  int compare = strcmp(name, iname);
	  if (compare == 0) {
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start,
                     swig_module_info *end,
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }

  /* neither found a match */
  return 0;
}

/*
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  const unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/*
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    char d = *(c++);
    unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = (unsigned char)((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = (unsigned char)((d - ('a'-10)) << 4);
    else
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (unsigned char)(d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (unsigned char)(d - ('a'-10));
    else
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/* SWIG Errors applicable to all language modules, values are reserved from -1 to -99 */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13


/* ---------------------------------------------------------------------------
 * These typedefs and defines are used to deal with v8 API changes
 *
 * Useful table of versions: https://nodejs.org/en/download/releases/
 * ---------------------------------------------------------------------------*/

#if (SWIG_V8_VERSION < 0x0704)
#define SWIGV8_STRING_NEW2(cstr, len) v8::String::NewFromUtf8(v8::Isolate::GetCurrent(), cstr, v8::String::kNormalString, len)
#else
#define SWIGV8_STRING_NEW2(cstr, len) (v8::String::NewFromUtf8(v8::Isolate::GetCurrent(), cstr, v8::NewStringType::kNormal, len)).ToLocalChecked()
#endif

typedef void SwigV8ReturnValue;
typedef v8::FunctionCallbackInfo<v8::Value> SwigV8Arguments;
typedef v8::PropertyCallbackInfo<v8::Value> SwigV8PropertyCallbackInfo;
#define SWIGV8_RETURN(val) args.GetReturnValue().Set(val); return
#define SWIGV8_RETURN_INFO(val, info) info.GetReturnValue().Set(val); return

#define SWIGV8_HANDLESCOPE() v8::HandleScope scope(v8::Isolate::GetCurrent());
#define SWIGV8_HANDLESCOPE_ESC() v8::EscapableHandleScope scope(v8::Isolate::GetCurrent());
#define SWIGV8_ESCAPE(val) return scope.Escape(val)

#define SWIGV8_ADJUST_MEMORY(size) v8::Isolate::GetCurrent()->AdjustAmountOfExternalAllocatedMemory(size)
#define SWIGV8_CURRENT_CONTEXT() v8::Isolate::GetCurrent()->GetCurrentContext()
#define SWIGV8_THROW_EXCEPTION(err) v8::Isolate::GetCurrent()->ThrowException(err)

#if (SWIG_V8_VERSION < 0x0704)
#define SWIGV8_STRING_NEW(str) v8::String::NewFromUtf8(v8::Isolate::GetCurrent(), str, v8::String::kNormalString)
#define SWIGV8_SYMBOL_NEW(sym) v8::String::NewFromUtf8(v8::Isolate::GetCurrent(), sym, v8::String::kNormalString)
#else
#define SWIGV8_STRING_NEW(str) (v8::String::NewFromUtf8(v8::Isolate::GetCurrent(), str, v8::NewStringType::kNormal)).ToLocalChecked()
#define SWIGV8_SYMBOL_NEW(sym) (v8::String::NewFromUtf8(v8::Isolate::GetCurrent(), sym, v8::NewStringType::kNormal)).ToLocalChecked()
#endif

#if (SWIG_V8_VERSION < 0x0704)
#define SWIGV8_MAYBE_CHECK(maybe) maybe.FromJust()
#else
#define SWIGV8_MAYBE_CHECK(maybe) maybe.Check()
#endif

#define SWIGV8_ARRAY_NEW(size) v8::Array::New(v8::Isolate::GetCurrent(), size)
#define SWIGV8_BOOLEAN_NEW(bool) v8::Boolean::New(v8::Isolate::GetCurrent(), bool)
#define SWIGV8_EXTERNAL_NEW(val) v8::External::New(v8::Isolate::GetCurrent(), val)
#define SWIGV8_FUNCTEMPLATE_NEW(func) v8::FunctionTemplate::New(v8::Isolate::GetCurrent(), func)
#define SWIGV8_FUNCTEMPLATE_NEW_VOID() v8::FunctionTemplate::New(v8::Isolate::GetCurrent())
#define SWIGV8_INT32_NEW(num) v8::Int32::New(v8::Isolate::GetCurrent(), num)
#define SWIGV8_INTEGER_NEW(num) v8::Integer::New(v8::Isolate::GetCurrent(), num)
#define SWIGV8_INTEGER_NEW_UNS(num) v8::Integer::NewFromUnsigned(v8::Isolate::GetCurrent(), num)
#define SWIGV8_NUMBER_NEW(num) v8::Number::New(v8::Isolate::GetCurrent(), num)
#define SWIGV8_OBJECT_NEW() v8::Object::New(v8::Isolate::GetCurrent())
#define SWIGV8_UNDEFINED() v8::Undefined(v8::Isolate::GetCurrent())
#define SWIGV8_ARRAY v8::Local<v8::Array>
#define SWIGV8_FUNCTION_TEMPLATE v8::Local<v8::FunctionTemplate>
#define SWIGV8_OBJECT v8::Local<v8::Object>
#define SWIGV8_OBJECT_TEMPLATE v8::Local<v8::ObjectTemplate>
#define SWIGV8_OBJECT_TEMPLATE_NEW() v8::ObjectTemplate::New(v8::Isolate::GetCurrent())
#define SWIGV8_VALUE v8::Local<v8::Value>
#define SWIGV8_NULL() v8::Null(v8::Isolate::GetCurrent())
#define SWIGV8_ARRAY_GET(array, index) (array)->Get(SWIGV8_CURRENT_CONTEXT(), index).ToLocalChecked()
#define SWIGV8_ARRAY_SET(array, index, value) SWIGV8_MAYBE_CHECK((array)->Set(SWIGV8_CURRENT_CONTEXT(), index, value))

#define SWIGV8_SET_CLASS_TEMPL(class_templ, class) class_templ.Reset(v8::Isolate::GetCurrent(), class);

#if SWIG_V8_VERSION < 0x0608
#define SWIGV8_TO_OBJECT(handle) (handle)->ToObject()
#define SWIGV8_TO_STRING(handle) (handle)->ToString()
#define SWIGV8_NUMBER_VALUE(handle) (handle)->NumberValue()
#define SWIGV8_INTEGER_VALUE(handle) (handle)->IntegerValue()
#define SWIGV8_BOOLEAN_VALUE(handle) (handle)->BooleanValue()
#define SWIGV8_WRITE_UTF8(handle, buffer, len) (handle)->WriteUtf8(buffer, len)
#define SWIGV8_UTF8_LENGTH(handle) (handle)->Utf8Length()
#define SWIGV8_OBJECT_TEMPLATE_INSTACE(tmpl) tmpl->NewInstance();
#else
#define SWIGV8_TO_OBJECT(handle) (handle)->ToObject(SWIGV8_CURRENT_CONTEXT()).ToLocalChecked()
#define SWIGV8_TO_STRING(handle) (handle)->ToString(SWIGV8_CURRENT_CONTEXT()).ToLocalChecked()
#define SWIGV8_NUMBER_VALUE(handle) (handle)->NumberValue(SWIGV8_CURRENT_CONTEXT()).ToChecked()
#define SWIGV8_INTEGER_VALUE(handle) (handle)->IntegerValue(SWIGV8_CURRENT_CONTEXT()).ToChecked()
#define SWIGV8_WRITE_UTF8(handle, buffer, len) (handle)->WriteUtf8(v8::Isolate::GetCurrent(), buffer, len)
#define SWIGV8_UTF8_LENGTH(handle) (handle)->Utf8Length(v8::Isolate::GetCurrent())
#define SWIGV8_OBJECT_TEMPLATE_INSTACE(tmpl) tmpl->NewInstance(SWIGV8_CURRENT_CONTEXT()).ToLocalChecked();
#if (SWIG_V8_VERSION < 0x0704)
#define SWIGV8_BOOLEAN_VALUE(handle) (handle)->BooleanValue(SWIGV8_CURRENT_CONTEXT()).ToChecked()
#else
#define SWIGV8_BOOLEAN_VALUE(handle) (handle)->BooleanValue(v8::Isolate::GetCurrent())
#endif
#endif

/* ---------------------------------------------------------------------------
 * Error handling
 *
 * ---------------------------------------------------------------------------*/

#define SWIG_Error(code, msg)     SWIGV8_ErrorHandler.error(code, msg)
#define SWIG_exception(code, msg) do { SWIGV8_ErrorHandler.error(code, msg); SWIG_fail; } while (0)
#define SWIG_fail                 goto fail
#define SWIGV8_OVERLOAD false

SWIGINTERN void SWIG_V8_Raise(const char *msg) {
  SWIGV8_THROW_EXCEPTION(v8::Exception::Error(SWIGV8_STRING_NEW(msg)));
}

SWIGINTERN void SWIG_V8_Raise(SWIGV8_VALUE obj, const char *msg) {
  SWIGV8_THROW_EXCEPTION(v8::Exception::Error(SWIGV8_TO_STRING(obj)));
}


/*
  Note: There are two contexts for handling errors.
  A static V8ErrorHandler is used in not overloaded methods.
  For overloaded methods the throwing type checking mechanism is used
  during dispatching. As V8 exceptions can not be reset properly
  the trick is to use a dynamic ErrorHandler with same local name as the global
  one.

  - See definition of SWIG_Error above.
  - See code templates 'JS_function_dispatcher', 'JS_functionwrapper_overload',
    and 'JS_function_dispatch_case' in javascriptcode.swg

*/
class V8ErrorHandler {
public:
  virtual ~V8ErrorHandler() {}
  virtual void error(int code, const char *msg) {
    SWIG_V8_Raise(msg);
  }
};
// this is used in usually
SWIGRUNTIME V8ErrorHandler SWIGV8_ErrorHandler;

// instances of this are used in overloaded functions
class OverloadErrorHandler: public V8ErrorHandler {
public:
  virtual void error(int code, const char *msg) {
    err = v8::Exception::Error(SWIGV8_STRING_NEW(msg));
    if(code != SWIG_TypeError) {
        SWIGV8_THROW_EXCEPTION(err);
    }
  }
  SWIGV8_VALUE err;
};

/* ---------------------------------------------------------------------------
 * Basic Proxy object
 *
 * ---------------------------------------------------------------------------*/

// Note: to trigger the v8 gc more often one can tell v8 about the memory consumption
// TODO: we could add a v8 specific parameter to control this value
#define SWIGV8_AVG_OBJ_SIZE 1000

class SWIGV8_Proxy {
public:
  SWIGV8_Proxy(): swigCMemOwn(false), swigCObject(0), info(0) {
    SWIGV8_ADJUST_MEMORY(SWIGV8_AVG_OBJ_SIZE);
  };

  ~SWIGV8_Proxy() {
    handle.ClearWeak();
    handle.Reset();

    SWIGV8_ADJUST_MEMORY(-SWIGV8_AVG_OBJ_SIZE);
  }

  bool swigCMemOwn;
  void *swigCObject;
  swig_type_info *info;
  v8::Persistent<v8::Object> handle;
};

class SWIGV8_ClientData {
public:
  v8::Persistent<v8::FunctionTemplate> class_templ;

  void (*dtor) (const v8::WeakCallbackInfo<SWIGV8_Proxy> &data);
};

SWIGRUNTIME v8::Persistent<v8::FunctionTemplate> SWIGV8_SWIGTYPE_Proxy_class_templ;

SWIGRUNTIME int SWIG_V8_ConvertInstancePtr(SWIGV8_OBJECT objRef, void **ptr, swig_type_info *info, int flags) {
  SWIGV8_HANDLESCOPE();

  if(objRef->InternalFieldCount() < 1) return SWIG_ERROR;

  SWIGV8_Proxy *cdata = static_cast<SWIGV8_Proxy *>(objRef->GetAlignedPointerFromInternalField(0));

  if(cdata == NULL) {
    return SWIG_ERROR;
  }
  if(info && cdata->info != info) {
    swig_cast_info *tc = SWIG_TypeCheckStruct(cdata->info, info);
    if (!tc && cdata->info->name) {
      tc = SWIG_TypeCheck(cdata->info->name, info);
    }
    bool type_valid = tc != 0;
    if(!type_valid) {
      return SWIG_TypeError;
    }
    int newmemory = 0;
    *ptr = SWIG_TypeCast(tc, cdata->swigCObject, &newmemory);
    assert(!newmemory); /* newmemory handling not yet implemented */
  } else {
    *ptr = cdata->swigCObject;
  }

  if (((flags & SWIG_POINTER_RELEASE) == SWIG_POINTER_RELEASE) && !cdata->swigCMemOwn) {
    return SWIG_ERROR_RELEASE_NOT_OWNED;
  } else {
    if (flags & SWIG_POINTER_DISOWN) {
      cdata->swigCMemOwn = false;
    }
    if (flags & SWIG_POINTER_CLEAR) {
      cdata->swigCObject = 0;
    }
  }
  return SWIG_OK;
}


SWIGRUNTIME void SWIGV8_Proxy_DefaultDtor(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  delete proxy;
}

SWIGRUNTIME int SWIG_V8_GetInstancePtr(SWIGV8_VALUE valRef, void **ptr) {
  if(!valRef->IsObject()) {
    return SWIG_TypeError;
  }
  SWIGV8_OBJECT objRef = SWIGV8_OBJECT::Cast(valRef);

  if(objRef->InternalFieldCount() < 1) return SWIG_ERROR;

  SWIGV8_Proxy *cdata = static_cast<SWIGV8_Proxy *>(objRef->GetAlignedPointerFromInternalField(0));

  if(cdata == NULL) {
    return SWIG_ERROR;
  }

  *ptr = cdata->swigCObject;

  return SWIG_OK;
}

SWIGRUNTIME void SWIGV8_SetPrivateData(SWIGV8_OBJECT obj, void *ptr, swig_type_info *info, int flags) {
  SWIGV8_Proxy *cdata = new SWIGV8_Proxy();
  cdata->swigCObject = ptr;
  cdata->swigCMemOwn = (flags & SWIG_POINTER_OWN) ? 1 : 0;
  cdata->info = info;

  obj->SetAlignedPointerInInternalField(0, cdata);

  cdata->handle.Reset(v8::Isolate::GetCurrent(), obj);

  if(cdata->swigCMemOwn && (SWIGV8_ClientData*)info->clientdata) {
    cdata->handle.SetWeak(cdata, ((SWIGV8_ClientData*)info->clientdata)->dtor, v8::WeakCallbackType::kParameter);
  } else {
    cdata->handle.SetWeak(cdata, SWIGV8_Proxy_DefaultDtor, v8::WeakCallbackType::kParameter);
  }

#if (SWIG_V8_VERSION < 0x0704)
  cdata->handle.MarkIndependent();
// Looks like future versions do not require that anymore:
// https://monorail-prod.appspot.com/p/chromium/issues/detail?id=923361#c11
#endif
}

SWIGRUNTIME int SWIG_V8_ConvertPtr(SWIGV8_VALUE valRef, void **ptr, swig_type_info *info, int flags) {
  SWIGV8_HANDLESCOPE();
  
  /* special case: JavaScript null => C NULL pointer */
  if(valRef->IsNull()) {
    *ptr=0;
    return (flags & SWIG_POINTER_NO_NULL) ? SWIG_NullReferenceError : SWIG_OK;
  }
  if(!valRef->IsObject()) {
    return SWIG_TypeError;
  }
  SWIGV8_OBJECT objRef = SWIGV8_OBJECT::Cast(valRef);
  return SWIG_V8_ConvertInstancePtr(objRef, ptr, info, flags);
}

SWIGRUNTIME SWIGV8_VALUE SWIG_V8_NewPointerObj(void *ptr, swig_type_info *info, int flags) {
  SWIGV8_HANDLESCOPE_ESC();
  
  SWIGV8_FUNCTION_TEMPLATE class_templ;

  if (ptr == NULL) {
    v8::Local<v8::Primitive> result = SWIGV8_NULL();
    SWIGV8_ESCAPE(result);
  }

  v8::Isolate *isolate = v8::Isolate::GetCurrent();

  if(info->clientdata != 0) {
    class_templ = v8::Local<v8::FunctionTemplate>::New(isolate, ((SWIGV8_ClientData*) info->clientdata)->class_templ);
  } else {
    class_templ = v8::Local<v8::FunctionTemplate>::New(isolate, SWIGV8_SWIGTYPE_Proxy_class_templ);
  }

  v8::Local<v8::Object> result = class_templ->InstanceTemplate()->NewInstance(SWIGV8_CURRENT_CONTEXT()).ToLocalChecked();

  SWIGV8_SetPrivateData(result, ptr, info, flags);

  SWIGV8_ESCAPE(result);
}

#define SWIG_ConvertPtr(obj, ptr, info, flags)    SWIG_V8_ConvertPtr(obj, ptr, info, flags)
#define SWIG_NewPointerObj(ptr, info, flags)      SWIG_V8_NewPointerObj(ptr, info, flags)

#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_V8_ConvertInstancePtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(thisvalue, type, flags)     SWIG_V8_NewPointerObj(thisvalue, type, flags)

#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_V8_ConvertPtr(obj, pptr, type, 0)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_V8_NewPointerObj(ptr, type, 0)

#define SWIG_GetInstancePtr(obj, ptr)    SWIG_V8_GetInstancePtr(obj, ptr)

SWIGRUNTIME SwigV8ReturnValue _SWIGV8_wrap_equals(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  bool result;
  int res1;
  int res2;

  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for equals.");

  res1 = SWIG_GetInstancePtr(args.Holder(), &arg1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ERROR, "Could not get pointer from 'this' object for equals.");
  }
  res2 = SWIG_GetInstancePtr(args[0], &arg2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "equals" "', argument " "1"" of type '" "void *""'");
  }

  result = (bool)(arg1 == arg2);
  jsresult =  SWIGV8_BOOLEAN_NEW(result);

  SWIGV8_RETURN(jsresult);
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}

SWIGRUNTIME SwigV8ReturnValue _wrap_getCPtr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  void *arg1 = (void *) 0 ;
  long result;
  int res1;

  res1 = SWIG_GetInstancePtr(args.Holder(), &arg1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getCPtr" "', argument " "1"" of type '" "void *""'");
  }

  result = (long)arg1;
  jsresult = SWIGV8_NUMBER_NEW(result);

  SWIGV8_RETURN(jsresult);
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}

/* ---------------------------------------------------------------------------
 * PackedData object
 *
 * ---------------------------------------------------------------------------*/

class SwigV8PackedData {
public:
  SwigV8PackedData(void *data, size_t size, swig_type_info *type): data(nullptr), size(size), type(type) {
    this->data = malloc(size);
    if (this->data != nullptr)
      memcpy(this->data, data, size);
  };

  ~SwigV8PackedData() {
    free(this->data);
  };

  void *data;
  size_t size;
  swig_type_info *type;

  v8::Persistent<v8::Object> handle;
};

SWIGRUNTIMEINLINE
int SwigV8Packed_Check(SWIGV8_VALUE valRef) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT objRef = SWIGV8_TO_OBJECT(valRef);
  if(objRef->InternalFieldCount() < 1) return false;
  v8::Local<v8::Private> privateKey = v8::Private::ForApi(v8::Isolate::GetCurrent(), SWIGV8_STRING_NEW("__swig__packed_data__"));
  v8::Local<v8::Value> flag;
  if (!objRef->GetPrivate(SWIGV8_CURRENT_CONTEXT(), privateKey).ToLocal(&flag))
    return false;
  return (flag->IsBoolean() && SWIGV8_BOOLEAN_VALUE(flag));
}

SWIGRUNTIME
swig_type_info *SwigV8Packed_UnpackData(SWIGV8_VALUE valRef, void *ptr, size_t size) {
  if (SwigV8Packed_Check(valRef)) {
    SWIGV8_HANDLESCOPE();
    
    SwigV8PackedData *sobj;

    SWIGV8_OBJECT objRef = SWIGV8_TO_OBJECT(valRef);

    sobj = static_cast<SwigV8PackedData*>(objRef->GetAlignedPointerFromInternalField(0));
    if (sobj == NULL || sobj->size != size) return 0;
    memcpy(ptr, sobj->data, size);
    return sobj->type;
  } else {
    return 0;
  }
}

SWIGRUNTIME
int SWIGV8_ConvertPacked(SWIGV8_VALUE valRef, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigV8Packed_UnpackData(valRef, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}

SWIGRUNTIME void _wrap_SwigV8PackedData_delete(const v8::WeakCallbackInfo<SwigV8PackedData> &data) {
  SwigV8PackedData *cdata = data.GetParameter();
  cdata->handle.Reset();
  delete cdata;
}

SWIGRUNTIME
SWIGV8_VALUE SWIGV8_NewPackedObj(void *data, size_t size, swig_type_info *type) {
  SWIGV8_HANDLESCOPE_ESC();

  SwigV8PackedData *cdata = new SwigV8PackedData(data, size, type);
  SWIGV8_OBJECT_TEMPLATE tmpl = SWIGV8_OBJECT_TEMPLATE_NEW();
  tmpl->SetInternalFieldCount(1);
  v8::Local<v8::Object> obj = SWIGV8_OBJECT_TEMPLATE_INSTACE(tmpl);

  v8::Local<v8::Private> privateKey = v8::Private::ForApi(v8::Isolate::GetCurrent(), SWIGV8_STRING_NEW("__swig__packed_data__"));
  obj->SetPrivate(SWIGV8_CURRENT_CONTEXT(), privateKey, SWIGV8_BOOLEAN_NEW(true));

  obj->SetAlignedPointerInInternalField(0, cdata);

  cdata->handle.Reset(v8::Isolate::GetCurrent(), obj);

  cdata->handle.SetWeak(cdata, _wrap_SwigV8PackedData_delete, v8::WeakCallbackType::kParameter);

#if (SWIG_V8_VERSION < 0x0704)
  cdata->handle.MarkIndependent();
// Looks like future versions do not require that anymore:
// https://monorail-prod.appspot.com/p/chromium/issues/detail?id=923361#c11
#endif

  SWIGV8_ESCAPE(obj);

}

#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIGV8_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIGV8_NewPackedObj(ptr, sz, type)


/* ---------------------------------------------------------------------------
 * Support for IN/OUTPUT typemaps (see Lib/typemaps/inoutlist.swg)
 *
 * ---------------------------------------------------------------------------*/

SWIGRUNTIME

SWIGV8_VALUE SWIGV8_AppendOutput(SWIGV8_VALUE result, SWIGV8_VALUE obj) {
  SWIGV8_HANDLESCOPE_ESC();
  
  if (result->IsUndefined()) {
    result = SWIGV8_ARRAY_NEW(0);
  } else if (!result->IsArray()) {
    SWIGV8_ARRAY tmparr = SWIGV8_ARRAY_NEW(0);
    SWIGV8_ARRAY_SET(tmparr, 0, result);
    result = tmparr;
  }

  SWIGV8_ARRAY arr = SWIGV8_ARRAY::Cast(result);
  SWIGV8_ARRAY_SET(arr, arr->Length(), obj);
  SWIGV8_ESCAPE(arr);
}



typedef v8::FunctionCallback            SwigV8FunctionCallback;
typedef v8::AccessorNameGetterCallback  SwigV8AccessorGetterCallback;
typedef v8::AccessorNameSetterCallback  SwigV8AccessorSetterCallback;
typedef v8::PropertyCallbackInfo<void>  SwigV8PropertyCallbackInfoVoid;

/**
 * Creates a class template for a class with specified initialization function.
 */
SWIGRUNTIME SWIGV8_FUNCTION_TEMPLATE SWIGV8_CreateClassTemplate(const char* symbol) {
    SWIGV8_HANDLESCOPE_ESC();
    
    v8::Local<v8::FunctionTemplate> class_templ = SWIGV8_FUNCTEMPLATE_NEW_VOID();
    class_templ->SetClassName(SWIGV8_SYMBOL_NEW(symbol));

    SWIGV8_OBJECT_TEMPLATE inst_templ = class_templ->InstanceTemplate();
    inst_templ->SetInternalFieldCount(1);

    SWIGV8_OBJECT_TEMPLATE equals_templ = class_templ->PrototypeTemplate();
    equals_templ->Set(SWIGV8_SYMBOL_NEW("equals"), SWIGV8_FUNCTEMPLATE_NEW(_SWIGV8_wrap_equals));

    SWIGV8_OBJECT_TEMPLATE cptr_templ = class_templ->PrototypeTemplate();
    cptr_templ->Set(SWIGV8_SYMBOL_NEW("getCPtr"), SWIGV8_FUNCTEMPLATE_NEW(_wrap_getCPtr));

    SWIGV8_ESCAPE(class_templ);
}

/**
 * Registers a class method with given name for a given class template.
 */
SWIGRUNTIME void SWIGV8_AddMemberFunction(SWIGV8_FUNCTION_TEMPLATE class_templ, const char* symbol,
  SwigV8FunctionCallback _func) {
    SWIGV8_OBJECT_TEMPLATE proto_templ = class_templ->PrototypeTemplate();
    proto_templ->Set(SWIGV8_SYMBOL_NEW(symbol), SWIGV8_FUNCTEMPLATE_NEW(_func));
}

/**
 * Registers a class property with given name for a given class template.
 */
SWIGRUNTIME void SWIGV8_AddMemberVariable(SWIGV8_FUNCTION_TEMPLATE class_templ, const char* symbol,
  SwigV8AccessorGetterCallback getter, SwigV8AccessorSetterCallback setter) {
  SWIGV8_OBJECT_TEMPLATE proto_templ = class_templ->InstanceTemplate();
  proto_templ->SetAccessor(SWIGV8_SYMBOL_NEW(symbol), getter, setter);
}

/**
 * Registers a class method with given name for a given object.
 */
SWIGRUNTIME void SWIGV8_AddStaticFunction(SWIGV8_OBJECT obj, const char* symbol,
  const SwigV8FunctionCallback& _func, v8::Local<v8::Context> context) {
  SWIGV8_MAYBE_CHECK(obj->Set(context, SWIGV8_SYMBOL_NEW(symbol), SWIGV8_FUNCTEMPLATE_NEW(_func)->GetFunction(context).ToLocalChecked()));
}

/**
 * Registers a class method with given name for a given object.
 */
SWIGRUNTIME void SWIGV8_AddStaticVariable(SWIGV8_OBJECT obj, const char* symbol,
  SwigV8AccessorGetterCallback getter, SwigV8AccessorSetterCallback setter,
  v8::Local<v8::Context> context) {
  SWIGV8_MAYBE_CHECK(obj->SetAccessor(context, SWIGV8_SYMBOL_NEW(symbol), getter, setter));
}

SWIGRUNTIME void JS_veto_set_variable(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid& info)
{
    char buffer[256];
    char msg[512];
    int res;

    v8::Local<v8::String> sproperty;
    if (property->ToString(SWIGV8_CURRENT_CONTEXT()).ToLocal(&sproperty)) {
      SWIGV8_WRITE_UTF8(sproperty, buffer, 256);
      res = SWIG_snprintf(msg, sizeof(msg), "Tried to write read-only variable: %s.", buffer);
    }
    else {
      res = -1;
    }

    if(res<0) {
      SWIG_exception(SWIG_ERROR, "Tried to write read-only variable.");
    } else {
      SWIG_exception(SWIG_ERROR, msg);
    }
fail: ;
}



/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_ACSIClass swig_types[0]
#define SWIGTYPE_p_AccessPolicy swig_types[1]
#define SWIGTYPE_p_AcseAuthenticationMechanism swig_types[2]
#define SWIGTYPE_p_CheckHandlerResult swig_types[3]
#define SWIGTYPE_p_ControlActionType swig_types[4]
#define SWIGTYPE_p_ControlAddCause swig_types[5]
#define SWIGTYPE_p_ControlHandlerResult swig_types[6]
#define SWIGTYPE_p_ControlLastApplError swig_types[7]
#define SWIGTYPE_p_ControlModel swig_types[8]
#define SWIGTYPE_p_DataAttributeType swig_types[9]
#define SWIGTYPE_p_Dbpos swig_types[10]
#define SWIGTYPE_p_EthernetSocket swig_types[11]
#define SWIGTYPE_p_FileHandle swig_types[12]
#define SWIGTYPE_p_GooseParseError swig_types[13]
#define SWIGTYPE_p_IedClientError swig_types[14]
#define SWIGTYPE_p_IedConnectionState swig_types[15]
#define SWIGTYPE_p_IedServer_RCBEventType swig_types[16]
#define SWIGTYPE_p_IsoApplicationReference swig_types[17]
#define SWIGTYPE_p_ItuObjectIdentifier swig_types[18]
#define SWIGTYPE_p_LastApplError swig_types[19]
#define SWIGTYPE_p_LogStorage swig_types[20]
#define SWIGTYPE_p_MmsConnectionState swig_types[21]
#define SWIGTYPE_p_MmsDataAccessError swig_types[22]
#define SWIGTYPE_p_MmsError swig_types[23]
#define SWIGTYPE_p_MmsServer swig_types[24]
#define SWIGTYPE_p_MmsServerIdentity swig_types[25]
#define SWIGTYPE_p_MmsType swig_types[26]
#define SWIGTYPE_p_MmsVariableAccessSpecification swig_types[27]
#define SWIGTYPE_p_MmsVariableSpecification swig_types[28]
#define SWIGTYPE_p_ModelNodeType swig_types[29]
#define SWIGTYPE_p_PSelector swig_types[30]
#define SWIGTYPE_p_PhyComAddress swig_types[31]
#define SWIGTYPE_p_SSelector swig_types[32]
#define SWIGTYPE_p_SelectStateChangedReason swig_types[33]
#define SWIGTYPE_p_TLSConfiguration swig_types[34]
#define SWIGTYPE_p_TSelector swig_types[35]
#define SWIGTYPE_p_Timestamp swig_types[36]
#define SWIGTYPE_p_bool swig_types[37]
#define SWIGTYPE_p_char swig_types[38]
#define SWIGTYPE_p_eFunctionalConstraint swig_types[39]
#define SWIGTYPE_p_f_p_sDataAttribute_p_sMmsValue_p_sClientConnection_p_void__MmsDataAccessError swig_types[40]
#define SWIGTYPE_p_f_p_sGooseSubscriber_p_void__void swig_types[41]
#define SWIGTYPE_p_f_p_sIedServer_p_sClientConnection_bool_p_void__void swig_types[42]
#define SWIGTYPE_p_f_p_sLogicalDevice_p_sLogicalNode_p_sDataObject_enum_eFunctionalConstraint_p_sClientConnection_p_void__MmsDataAccessError swig_types[43]
#define SWIGTYPE_p_f_p_sMmsConnection_p_void__void swig_types[44]
#define SWIGTYPE_p_f_p_sMmsConnection_p_void_enum_MmsConnectionState__void swig_types[45]
#define SWIGTYPE_p_f_p_sMmsGooseControlBlock_int_p_void__void swig_types[46]
#define SWIGTYPE_p_f_p_sSVControlBlock_int_p_void__void swig_types[47]
#define SWIGTYPE_p_f_p_void__void swig_types[48]
#define SWIGTYPE_p_f_p_void_enum_MmsError_bool__void swig_types[49]
#define SWIGTYPE_p_f_p_void_int_p_unsigned_char_unsigned_int__void swig_types[50]
#define SWIGTYPE_p_f_p_void_p_char_p_char_p_sMmsValue_bool__void swig_types[51]
#define SWIGTYPE_p_f_p_void_p_char_unsigned_int_unsigned_long_long__void swig_types[52]
#define SWIGTYPE_p_f_p_void_p_sAcseAuthenticationParameter_p_p_void_p_IsoApplicationReference__bool swig_types[53]
#define SWIGTYPE_p_f_p_void_p_sClientReport__void swig_types[54]
#define SWIGTYPE_p_f_p_void_p_sControlObjectClient__void swig_types[55]
#define SWIGTYPE_p_f_p_void_p_sIedConnection__void swig_types[56]
#define SWIGTYPE_p_f_p_void_p_sIedConnection_enum_IedConnectionState__void swig_types[57]
#define SWIGTYPE_p_f_p_void_p_sReportControlBlock_p_sClientConnection_enum_IedServer_RCBEventType_p_q_const__char_enum_MmsDataAccessError__void swig_types[58]
#define SWIGTYPE_p_f_p_void_p_sSettingGroupControlBlock_unsigned_char__void swig_types[59]
#define SWIGTYPE_p_f_p_void_p_sSettingGroupControlBlock_unsigned_char_p_sClientConnection__bool swig_types[60]
#define SWIGTYPE_p_f_p_void_p_unsigned_char_int_bool__void swig_types[61]
#define SWIGTYPE_p_f_p_void_p_unsigned_char_unsigned_int__bool swig_types[62]
#define SWIGTYPE_p_f_p_void_p_void_bool_enum_SelectStateChangedReason__void swig_types[63]
#define SWIGTYPE_p_f_p_void_p_void_p_sMmsValue_bool__ControlHandlerResult swig_types[64]
#define SWIGTYPE_p_f_p_void_p_void_p_sMmsValue_bool_bool__CheckHandlerResult swig_types[65]
#define SWIGTYPE_p_f_p_void_p_void_p_sMmsValue_bool_bool__ControlHandlerResult swig_types[66]
#define SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError__void swig_types[67]
#define SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError_enum_ControlActionType_bool__void swig_types[68]
#define SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError_p_MmsVariableSpecification__void swig_types[69]
#define SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError_p_char_unsigned_int_unsigned_long_long_bool__bool swig_types[70]
#define SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError_p_sClientDataSet__void swig_types[71]
#define SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError_p_sClientReportControlBlock__void swig_types[72]
#define SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError_p_sLinkedList__void swig_types[73]
#define SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError_p_sLinkedList_bool__void swig_types[74]
#define SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError_p_sMmsValue__void swig_types[75]
#define SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError_unsigned_int_p_unsigned_char_unsigned_int_bool__bool swig_types[76]
#define SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_bool__void swig_types[77]
#define SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_enum_MmsDataAccessError__void swig_types[78]
#define SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_int_int__void swig_types[79]
#define SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_int_p_unsigned_char_unsigned_int_bool__void swig_types[80]
#define SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_int_unsigned_int_unsigned_long_long__void swig_types[81]
#define SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_MmsVariableSpecification__void swig_types[82]
#define SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_char_p_char_p_char__void swig_types[83]
#define SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_char_unsigned_int_unsigned_long_long_bool__void swig_types[84]
#define SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_sLinkedList__void swig_types[85]
#define SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_sLinkedList_bool__void swig_types[86]
#define SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_sMmsValue__void swig_types[87]
#define SWIGTYPE_p_f_void__void swig_types[88]
#define SWIGTYPE_p_int swig_types[89]
#define SWIGTYPE_p_long_long swig_types[90]
#define SWIGTYPE_p_p_sLinkedList swig_types[91]
#define SWIGTYPE_p_sAcseAuthenticationParameter swig_types[92]
#define SWIGTYPE_p_sClientConnection swig_types[93]
#define SWIGTYPE_p_sClientDataSet swig_types[94]
#define SWIGTYPE_p_sClientGooseControlBlock swig_types[95]
#define SWIGTYPE_p_sClientReport swig_types[96]
#define SWIGTYPE_p_sClientReportControlBlock swig_types[97]
#define SWIGTYPE_p_sClientSVControlBlock swig_types[98]
#define SWIGTYPE_p_sCommParameters swig_types[99]
#define SWIGTYPE_p_sControlObjectClient swig_types[100]
#define SWIGTYPE_p_sDataAttribute swig_types[101]
#define SWIGTYPE_p_sDataObject swig_types[102]
#define SWIGTYPE_p_sDataSet swig_types[103]
#define SWIGTYPE_p_sDataSetEntry swig_types[104]
#define SWIGTYPE_p_sFileDirectoryEntry swig_types[105]
#define SWIGTYPE_p_sGSEControlBlock swig_types[106]
#define SWIGTYPE_p_sGoosePublisher swig_types[107]
#define SWIGTYPE_p_sGooseReceiver swig_types[108]
#define SWIGTYPE_p_sGooseSubscriber swig_types[109]
#define SWIGTYPE_p_sIedConnection swig_types[110]
#define SWIGTYPE_p_sIedModel swig_types[111]
#define SWIGTYPE_p_sIedServer swig_types[112]
#define SWIGTYPE_p_sIedServerConfig swig_types[113]
#define SWIGTYPE_p_sIsoConnectionParameters swig_types[114]
#define SWIGTYPE_p_sLinkedList swig_types[115]
#define SWIGTYPE_p_sLog swig_types[116]
#define SWIGTYPE_p_sLogControlBlock swig_types[117]
#define SWIGTYPE_p_sLogicalDevice swig_types[118]
#define SWIGTYPE_p_sLogicalNode swig_types[119]
#define SWIGTYPE_p_sMmsAccessSpecifier swig_types[120]
#define SWIGTYPE_p_sMmsConnection swig_types[121]
#define SWIGTYPE_p_sMmsConnectionParameters swig_types[122]
#define SWIGTYPE_p_sMmsDomain swig_types[123]
#define SWIGTYPE_p_sMmsGooseControlBlock swig_types[124]
#define SWIGTYPE_p_sMmsJournalEntry swig_types[125]
#define SWIGTYPE_p_sMmsJournalVariable swig_types[126]
#define SWIGTYPE_p_sMmsValue swig_types[127]
#define SWIGTYPE_p_sModelNode swig_types[128]
#define SWIGTYPE_p_sReportControlBlock swig_types[129]
#define SWIGTYPE_p_sSVControlBlock swig_types[130]
#define SWIGTYPE_p_sSettingGroupControlBlock swig_types[131]
#define SWIGTYPE_p_short swig_types[132]
#define SWIGTYPE_p_signed_char swig_types[133]
#define SWIGTYPE_p_unsigned_char swig_types[134]
#define SWIGTYPE_p_unsigned_int swig_types[135]
#define SWIGTYPE_p_unsigned_long_long swig_types[136]
#define SWIGTYPE_p_unsigned_short swig_types[137]
#define SWIGTYPE_p_void swig_types[138]
static swig_type_info *swig_types[140];
static swig_module_info swig_module = {swig_types, 139, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */



#ifdef __cplusplus
#include <utility>
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigSmartPointer {
    T *ptr;
    SwigSmartPointer(T *p) : ptr(p) { }
    ~SwigSmartPointer() { delete ptr; }
    SwigSmartPointer& operator=(SwigSmartPointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
    void reset(T *p) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = p; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigSmartPointer tmp(new T(t)); pointer = tmp; return *this; }
#if __cplusplus >=201103L
  SwigValueWrapper& operator=(T&& t) { SwigSmartPointer tmp(new T(std::move(t))); pointer = tmp; return *this; }
  operator T&&() const { return std::move(*pointer.ptr); }
#else
  operator T&() const { return *pointer.ptr; }
#endif
  T *operator&() const { return pointer.ptr; }
  static void reset(SwigValueWrapper& t, T *p) { t.pointer.reset(p); }
};

/*
 * SwigValueInit() is a generic initialisation solution as the following approach:
 * 
 *       T c_result = T();
 * 
 * doesn't compile for all types for example:
 * 
 *       unsigned int c_result = unsigned int();
 */
template <typename T> T SwigValueInit() {
  return T();
}

#if __cplusplus >=201103L
# define SWIG_STD_MOVE(OBJ) std::move(OBJ)
#else
# define SWIG_STD_MOVE(OBJ) OBJ
#endif

#endif


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


#include <assert.h>


#include <stdint.h>		// Use the C99 official header


#include <iec61850_client.h>
#include <iec61850_model.h>
#include <iec61850_server.h>
ModelNode* toModelNode(LogicalNode * ln)
{
    return (ModelNode*) ln;
}
ModelNode* toModelNode(DataObject * DO)
{
    return (ModelNode*) DO;
}
char* toCharP(void * v)
{
    return (char *) v;
}
DataAttribute* toDataAttribute(DataObject * DO)
{ return (DataAttribute*)DO;}
DataAttribute* toDataAttribute(ModelNode * MN)
{ return (DataAttribute*)MN;}


SWIGINTERN
int SWIG_AsVal_int (SWIGV8_VALUE valRef, int* val)
{
  if (!valRef->IsNumber()) {
    return SWIG_TypeError;
  }
  if(val) *val = SWIGV8_INTEGER_VALUE(valRef);

  return SWIG_OK;
}


SWIGINTERNINLINE
SWIGV8_VALUE SWIG_From_int  (int value)
{
  return SWIGV8_INT32_NEW(value);
}


SWIGINTERN
int SWIG_AsVal_double (SWIGV8_VALUE obj, double *val)
{
  if(!obj->IsNumber()) {
    return SWIG_TypeError;
  }
  if(val) *val = SWIGV8_NUMBER_VALUE(obj);

  return SWIG_OK;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx, cx, rd;
   errno = 0;
   fx = floor(x);
   cx = ceil(x);
   rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN
int SWIG_AsVal_long (SWIGV8_VALUE obj, long* val)
{
  if (!obj->IsNumber()) {
    return SWIG_TypeError;
  }
  if(val) *val = (long) SWIGV8_INTEGER_VALUE(obj);

  return SWIG_OK;
}


SWIGINTERN
int SWIG_AsVal_bool (SWIGV8_VALUE obj, bool *val)
{
  if(!obj->IsBoolean()) {
    return SWIG_ERROR;
  }

  if (val) *val = SWIGV8_BOOLEAN_VALUE(obj);
  return SWIG_OK;
}


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERN
int SWIG_AsVal_unsigned_SS_long (SWIGV8_VALUE obj, unsigned long *val)
{
  if(!obj->IsNumber()) {
    return SWIG_TypeError;
  }

  long longVal = (long) SWIGV8_NUMBER_VALUE(obj);

  if(longVal < 0) {
      return SWIG_OverflowError;
  }

  if(val) *val = longVal;

  return SWIG_OK;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int (SWIGV8_VALUE obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE
SWIGV8_VALUE SWIG_From_long  (long value)
{
  return SWIGV8_NUMBER_NEW(value);
}


SWIGINTERNINLINE
SWIGV8_VALUE SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return value <= UINT32_MAX ? (SWIGV8_VALUE)SWIGV8_INTEGER_NEW_UNS(value) : (SWIGV8_VALUE)SWIGV8_NUMBER_NEW(static_cast<double>(value));
}


SWIGINTERNINLINE SWIGV8_VALUE
SWIG_From_unsigned_SS_int  (unsigned int value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}


SWIGINTERNINLINE
SWIGV8_VALUE
SWIG_From_bool  (bool value)
{
  return SWIGV8_BOOLEAN_NEW(value);
}


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(SWIGV8_VALUE valRef, char** cptr, size_t* psize, int *alloc)
{
  if(valRef->IsString()) {
    v8::Local<v8::String> js_str = v8::Local<v8::String>::Cast(valRef);

    size_t len = SWIGV8_UTF8_LENGTH(js_str) + 1;
    char* cstr = (char*) (new char[len]());
    SWIGV8_WRITE_UTF8(js_str, cstr, len);
    
    if(alloc) *alloc = SWIG_NEWOBJ;
    if(psize) *psize = len;
    if(cptr) *cptr = cstr;
    
    return SWIG_OK;
  } else {
    if(valRef->IsObject()) {
      SWIGV8_OBJECT obj = SWIGV8_OBJECT::Cast(valRef);
      // try if the object is a wrapped char[]
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      if (pchar_descriptor) {
        void* vptr = 0;
        if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
          if (cptr) *cptr = (char *) vptr;
          if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
          if (alloc) *alloc = SWIG_OLDOBJ;
          return SWIG_OK;
        }
      }
      return SWIG_TypeError;
    } else {
      return SWIG_TypeError;
    }
  }
}





SWIGINTERNINLINE SWIGV8_VALUE
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      // TODO: handle extra long strings
      return SWIGV8_UNDEFINED();
    } else {
      v8::Local<v8::String> js_str = SWIGV8_STRING_NEW2(carray, size);
      return js_str;
    }
  } else {
    return SWIGV8_UNDEFINED();
  }
}


SWIGINTERNINLINE SWIGV8_VALUE 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}


SWIGINTERNINLINE SWIGV8_VALUE
SWIG_From_unsigned_SS_short  (unsigned short value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}


SWIGINTERNINLINE SWIGV8_VALUE
SWIG_From_unsigned_SS_char  (unsigned char value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_char (SWIGV8_VALUE obj, unsigned char *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UCHAR_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned char >(v);
    }
  }  
  return res;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_short (SWIGV8_VALUE obj, unsigned short *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > USHRT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned short >(v);
    }
  }  
  return res;
}


SWIGINTERN
SWIGV8_VALUE SWIG_From_double   (double val)
{
  return SWIGV8_NUMBER_NEW(val);
}


SWIGINTERNINLINE SWIGV8_VALUE
SWIG_From_float  (float value)
{    
  return SWIG_From_double  (value);
}


#if defined(LLONG_MAX) && !defined(SWIG_LONG_LONG_AVAILABLE)
#  define SWIG_LONG_LONG_AVAILABLE
#endif


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERNINLINE
SWIGV8_VALUE SWIG_From_long_SS_long  (long long value)
{
  return SWIGV8_NUMBER_NEW(value);
}
#endif


/* Getting isfinite working pre C99 across multiple platforms is non-trivial. Users can provide SWIG_isfinite on older platforms. */
#ifndef SWIG_isfinite
/* isfinite() is a macro for C99 */
# if defined(isfinite)
#  define SWIG_isfinite(X) (isfinite(X))
# elif defined(__cplusplus) && __cplusplus >= 201103L
/* Use a template so that this works whether isfinite() is std::isfinite() or
 * in the global namespace.  The reality seems to vary between compiler
 * versions.
 *
 * Make sure namespace std exists to avoid compiler warnings.
 *
 * extern "C++" is required as this fragment can end up inside an extern "C" { } block
 */
namespace std { }
extern "C++" template<typename T>
inline int SWIG_isfinite_func(T x) {
  using namespace std;
  return isfinite(x);
}
#  define SWIG_isfinite(X) (SWIG_isfinite_func(X))
# elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 2))
#  define SWIG_isfinite(X) (__builtin_isfinite(X))
# elif defined(_MSC_VER)
#  define SWIG_isfinite(X) (_finite(X))
# elif defined(__sun) && defined(__SVR4)
#  include <ieeefp.h>
#  define SWIG_isfinite(X) (finite(X))
# endif
#endif


/* Accept infinite as a valid float value unless we are unable to check if a value is finite */
#ifdef SWIG_isfinite
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX) && SWIG_isfinite(X))
#else
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX))
#endif


SWIGINTERN int
SWIG_AsVal_float (SWIGV8_VALUE obj, float *val)
{
  double v;
  int res = SWIG_AsVal_double (obj, &v);
  if (SWIG_IsOK(res)) {
    if (SWIG_Float_Overflow_Check(v)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< float >(v);
    }
  }  
  return res;
}


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERNINLINE
SWIGV8_VALUE SWIG_From_unsigned_SS_long_SS_long  (unsigned long long value)
{
  return value <= UINT32_MAX ? (SWIGV8_VALUE)SWIGV8_INTEGER_NEW_UNS(value) : (SWIGV8_VALUE)SWIGV8_NUMBER_NEW(static_cast<double>(value));
}
#endif


SWIGINTERNINLINE SWIGV8_VALUE
SWIG_From_short  (short value)
{    
  return SWIG_From_long  (value);
}


SWIGINTERN int
SWIG_AsVal_short (SWIGV8_VALUE obj, short *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < SHRT_MIN || v > SHRT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< short >(v);
    }
  }  
  return res;
}


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERN
int SWIG_AsVal_unsigned_SS_long_SS_long (SWIGV8_VALUE obj, unsigned long long *val)
{
  if(!obj->IsNumber()) {
    return SWIG_TypeError;
  }

  long long longVal = (long long) SWIGV8_NUMBER_VALUE(obj);

  if(longVal < 0) {
      return SWIG_OverflowError;
  }

  if(val) *val = longVal;

  return SWIG_OK;
}
#endif


SWIGINTERN int
SWIG_AsVal_signed_SS_char (SWIGV8_VALUE obj, signed char *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < SCHAR_MIN || v > SCHAR_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< signed char >(v);
    }
  }  
  return res;
}


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERN
int SWIG_AsVal_long_SS_long (SWIGV8_VALUE obj, long long* val)
{
  if (!obj->IsNumber()) {
    return SWIG_TypeError;
  }
  if(val) *val = (long long) SWIGV8_INTEGER_VALUE(obj);

  return SWIG_OK;
}
#endif


struct sGooseSubscriber;
typedef struct sGooseSubscriber* GooseSubscriber;
#include "goose_subscriber.h"
#include "goose_receiver.h"

void GooseSubscriber_setDstMac(GooseSubscriber subscriber,
                               uint8_t dst_mac_0,
                               uint8_t dst_mac_1,
                               uint8_t dst_mac_2,
                               uint8_t dst_mac_3,
                               uint8_t dst_mac_4,
                               uint8_t dst_mac_5)
{
    uint8_t dst_mac[6];
    dst_mac[0] = dst_mac_0;
    dst_mac[1] = dst_mac_1;
    dst_mac[2] = dst_mac_2;
    dst_mac[3] = dst_mac_3;
    dst_mac[4] = dst_mac_4;
    dst_mac[5] = dst_mac_5;

    GooseSubscriber_setDstMac(subscriber, dst_mac);
}


#include "goose_publisher.h"

void LinkedList_destroyDeep_MmsValueDelete(LinkedList dataSetValues)
{
    LinkedList_destroyDeep(dataSetValues, (LinkedListValueDeleteFunction) MmsValue_delete);
}
void CommParameters_setDstAddress(CommParameters *gooseCommParameters,
                                  uint8_t dst_mac_0,
                                  uint8_t dst_mac_1,
                                  uint8_t dst_mac_2,
                                  uint8_t dst_mac_3,
                                  uint8_t dst_mac_4,
                                  uint8_t dst_mac_5)
{
    gooseCommParameters->dstAddress[0] = dst_mac_0;
    gooseCommParameters->dstAddress[1] = dst_mac_1;
    gooseCommParameters->dstAddress[2] = dst_mac_2;
    gooseCommParameters->dstAddress[3] = dst_mac_3;
    gooseCommParameters->dstAddress[4] = dst_mac_4;
    gooseCommParameters->dstAddress[5] = dst_mac_5;
}


#define SWIGV8_INIT iec61850_initialize


SWIGV8_ClientData _exports_LastApplError_clientData;
SWIGV8_ClientData _exports_sAcseAuthenticationParameter_clientData;
SWIGV8_ClientData _exports_TSelector_clientData;
SWIGV8_ClientData _exports_SSelector_clientData;
SWIGV8_ClientData _exports_PSelector_clientData;
SWIGV8_ClientData _exports_sIsoConnectionParameters_clientData;
SWIGV8_ClientData _exports_MmsConnectionParameters_clientData;
SWIGV8_ClientData _exports_MmsServerIdentity_clientData;
SWIGV8_ClientData _exports_sMmsJournalEntry_clientData;
SWIGV8_ClientData _exports_sMmsJournalVariable_clientData;
SWIGV8_ClientData _exports_PhyComAddress_clientData;
SWIGV8_ClientData _exports_Timestamp_clientData;
SWIGV8_ClientData _exports_MmsAccessSpecifier_clientData;
SWIGV8_ClientData _exports_MmsVariableAccessSpecification_clientData;
SWIGV8_ClientData _exports_ItuObjectIdentifier_clientData;
SWIGV8_ClientData _exports_IsoApplicationReference_clientData;
SWIGV8_ClientData _exports_sIedModel_clientData;
SWIGV8_ClientData _exports_sLogicalDevice_clientData;
SWIGV8_ClientData _exports_sModelNode_clientData;
SWIGV8_ClientData _exports_sLogicalNode_clientData;
SWIGV8_ClientData _exports_sDataObject_clientData;
SWIGV8_ClientData _exports_sDataAttribute_clientData;
SWIGV8_ClientData _exports_DataSetEntry_clientData;
SWIGV8_ClientData _exports_sDataSet_clientData;
SWIGV8_ClientData _exports_sReportControlBlock_clientData;
SWIGV8_ClientData _exports_sLogControlBlock_clientData;
SWIGV8_ClientData _exports_sLog_clientData;
SWIGV8_ClientData _exports_sSettingGroupControlBlock_clientData;
SWIGV8_ClientData _exports_sGSEControlBlock_clientData;
SWIGV8_ClientData _exports_sSVControlBlock_clientData;
SWIGV8_ClientData _exports_sIedServerConfig_clientData;
SWIGV8_ClientData _exports_sLinkedList_clientData;
SWIGV8_ClientData _exports_CommParameters_clientData;


static void _wrap_LastApplError_ctlNum_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  LastApplError *arg1 = (LastApplError *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_LastApplError, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LastApplError_ctlNum_set" "', argument " "1"" of type '" "LastApplError *""'"); 
  }
  arg1 = reinterpret_cast< LastApplError * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LastApplError_ctlNum_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);if (arg1) (arg1)->ctlNum = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_LastApplError_ctlNum_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  LastApplError *arg1 = (LastApplError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_LastApplError, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LastApplError_ctlNum_get" "', argument " "1"" of type '" "LastApplError *""'"); 
  }
  arg1 = reinterpret_cast< LastApplError * >(argp1);result = (int) ((arg1)->ctlNum);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_LastApplError_error_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  LastApplError *arg1 = (LastApplError *) 0 ;
  ControlLastApplError arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_LastApplError, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LastApplError_error_set" "', argument " "1"" of type '" "LastApplError *""'"); 
  }
  arg1 = reinterpret_cast< LastApplError * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LastApplError_error_set" "', argument " "2"" of type '" "ControlLastApplError""'");
  } 
  arg2 = static_cast< ControlLastApplError >(val2);if (arg1) (arg1)->error = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_LastApplError_error_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  LastApplError *arg1 = (LastApplError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ControlLastApplError result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_LastApplError, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LastApplError_error_get" "', argument " "1"" of type '" "LastApplError *""'"); 
  }
  arg1 = reinterpret_cast< LastApplError * >(argp1);result = (ControlLastApplError) ((arg1)->error);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_LastApplError_addCause_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  LastApplError *arg1 = (LastApplError *) 0 ;
  ControlAddCause arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_LastApplError, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LastApplError_addCause_set" "', argument " "1"" of type '" "LastApplError *""'"); 
  }
  arg1 = reinterpret_cast< LastApplError * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LastApplError_addCause_set" "', argument " "2"" of type '" "ControlAddCause""'");
  } 
  arg2 = static_cast< ControlAddCause >(val2);if (arg1) (arg1)->addCause = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_LastApplError_addCause_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  LastApplError *arg1 = (LastApplError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ControlAddCause result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_LastApplError, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LastApplError_addCause_get" "', argument " "1"" of type '" "LastApplError *""'"); 
  }
  arg1 = reinterpret_cast< LastApplError * >(argp1);result = (ControlAddCause) ((arg1)->addCause);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_LastApplError(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  LastApplError *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_LastApplError.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_LastApplError.");
  result = (LastApplError *)new LastApplError();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_LastApplError, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_LastApplError(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    LastApplError * arg1 = (LastApplError *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue exports_IED_STATE_CLOSED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_STATE_CLOSED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_STATE_CONNECTING_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_STATE_CONNECTING));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_STATE_CONNECTED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_STATE_CONNECTED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_STATE_CLOSING_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_STATE_CLOSING));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_OK_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_OK));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_NOT_CONNECTED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_NOT_CONNECTED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_ALREADY_CONNECTED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_ALREADY_CONNECTED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_CONNECTION_LOST_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_CONNECTION_LOST));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_SERVICE_NOT_SUPPORTED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_SERVICE_NOT_SUPPORTED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_CONNECTION_REJECTED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_CONNECTION_REJECTED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_OUTSTANDING_CALL_LIMIT_REACHED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_OUTSTANDING_CALL_LIMIT_REACHED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_USER_PROVIDED_INVALID_ARGUMENT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_USER_PROVIDED_INVALID_ARGUMENT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_ENABLE_REPORT_FAILED_DATASET_MISMATCH_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_ENABLE_REPORT_FAILED_DATASET_MISMATCH));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_OBJECT_REFERENCE_INVALID_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_OBJECT_REFERENCE_INVALID));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_UNEXPECTED_VALUE_RECEIVED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_UNEXPECTED_VALUE_RECEIVED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_TIMEOUT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_TIMEOUT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_ACCESS_DENIED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_ACCESS_DENIED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_OBJECT_DOES_NOT_EXIST_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_OBJECT_DOES_NOT_EXIST));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_OBJECT_EXISTS_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_OBJECT_EXISTS));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_OBJECT_ACCESS_UNSUPPORTED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_OBJECT_ACCESS_UNSUPPORTED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_TYPE_INCONSISTENT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_TYPE_INCONSISTENT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_TEMPORARILY_UNAVAILABLE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_TEMPORARILY_UNAVAILABLE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_OBJECT_UNDEFINED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_OBJECT_UNDEFINED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_INVALID_ADDRESS_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_INVALID_ADDRESS));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_HARDWARE_FAULT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_HARDWARE_FAULT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_TYPE_UNSUPPORTED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_TYPE_UNSUPPORTED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_OBJECT_ATTRIBUTE_INCONSISTENT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_OBJECT_ATTRIBUTE_INCONSISTENT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_OBJECT_VALUE_INVALID_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_OBJECT_VALUE_INVALID));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_OBJECT_INVALIDATED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_OBJECT_INVALIDATED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_MALFORMED_MESSAGE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_MALFORMED_MESSAGE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_SERVICE_NOT_IMPLEMENTED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_SERVICE_NOT_IMPLEMENTED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IED_ERROR_UNKNOWN_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IED_ERROR_UNKNOWN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_IedConnection_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection result;
  
  if (args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_create.");
  
  result = (IedConnection)IedConnection_create();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sIedConnection, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_createEx(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  TLSConfiguration arg1 ;
  bool arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  IedConnection result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_createEx.");
  
  {
    {
      res1 = SWIG_ConvertPtr(args[0], &argp1, SWIGTYPE_p_TLSConfiguration,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_createEx" "', argument " "1"" of type '" "TLSConfiguration""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IedConnection_createEx" "', argument " "1"" of type '" "TLSConfiguration""'");
      } else {
        arg1 = *(reinterpret_cast< TLSConfiguration * >(argp1));
      }
    }
  }
  ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IedConnection_createEx" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);result = (IedConnection)IedConnection_createEx(SWIG_STD_MOVE(arg1),arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sIedConnection, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_createWithTlsSupport(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  TLSConfiguration arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  IedConnection result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_createWithTlsSupport.");
  
  {
    {
      res1 = SWIG_ConvertPtr(args[0], &argp1, SWIGTYPE_p_TLSConfiguration,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_createWithTlsSupport" "', argument " "1"" of type '" "TLSConfiguration""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IedConnection_createWithTlsSupport" "', argument " "1"" of type '" "TLSConfiguration""'");
      } else {
        arg1 = *(reinterpret_cast< TLSConfiguration * >(argp1));
      }
    }
  }
  result = (IedConnection)IedConnection_createWithTlsSupport(SWIG_STD_MOVE(arg1));
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sIedConnection, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_destroy(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_destroy.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_destroy" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);IedConnection_destroy(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_setConnectTimeout(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_setConnectTimeout.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_setConnectTimeout" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IedConnection_setConnectTimeout" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = static_cast< uint32_t >(val2);IedConnection_setConnectTimeout(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_setRequestTimeout(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_setRequestTimeout.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_setRequestTimeout" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IedConnection_setRequestTimeout" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = static_cast< uint32_t >(val2);IedConnection_setRequestTimeout(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getRequestTimeout(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getRequestTimeout.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getRequestTimeout" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);result = (uint32_t)IedConnection_getRequestTimeout(arg1);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_setTimeQuality(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  bool arg2 ;
  bool arg3 ;
  bool arg4 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_setTimeQuality.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_setTimeQuality" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IedConnection_setTimeQuality" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);ecode3 = SWIG_AsVal_bool(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IedConnection_setTimeQuality" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);ecode4 = SWIG_AsVal_bool(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_setTimeQuality" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);ecode5 = SWIG_AsVal_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "IedConnection_setTimeQuality" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);IedConnection_setTimeQuality(arg1,arg2,arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_tick(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_tick.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_tick" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);result = (bool)IedConnection_tick(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_connect(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_connect.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_connect" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_connect" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_connect" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);IedConnection_connect(arg1,arg2,(char const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_connectAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_connectAsync.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_connectAsync" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_connectAsync" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_connectAsync" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);IedConnection_connectAsync(arg1,arg2,(char const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_abort(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_abort.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_abort" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);IedConnection_abort(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_abortAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_abortAsync.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_abortAsync" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);IedConnection_abortAsync(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_release(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_release.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_release" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);IedConnection_release(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_releaseAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_releaseAsync.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_releaseAsync" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);IedConnection_releaseAsync(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_close(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_close.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_close" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);IedConnection_close(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getState(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedConnectionState result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getState.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getState" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);result = (IedConnectionState)IedConnection_getState(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getLastApplError(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  LastApplError result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getLastApplError.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getLastApplError" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);result = IedConnection_getLastApplError(arg1);
  jsresult = SWIG_NewPointerObj((new LastApplError(result)), SWIGTYPE_p_LastApplError, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_installConnectionClosedHandler(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedConnectionClosedHandler arg2 = (IedConnectionClosedHandler) 0 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_installConnectionClosedHandler.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_installConnectionClosedHandler" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);{
    {
      int res = SWIG_ConvertFunctionPtr(args[1], (void**)(&arg2), SWIGTYPE_p_f_p_void_p_sIedConnection__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedConnection_installConnectionClosedHandler" "', argument " "2"" of type '" "IedConnectionClosedHandler""'"); 
      }
    }
  }
  res3 = SWIG_ConvertPtr(args[2],SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_installConnectionClosedHandler" "', argument " "3"" of type '" "void *""'"); 
  }IedConnection_installConnectionClosedHandler(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_installStateChangedHandler(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedConnection_StateChangedHandler arg2 = (IedConnection_StateChangedHandler) 0 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_installStateChangedHandler.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_installStateChangedHandler" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);{
    {
      int res = SWIG_ConvertFunctionPtr(args[1], (void**)(&arg2), SWIGTYPE_p_f_p_void_p_sIedConnection_enum_IedConnectionState__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedConnection_installStateChangedHandler" "', argument " "2"" of type '" "IedConnection_StateChangedHandler""'"); 
      }
    }
  }
  res3 = SWIG_ConvertPtr(args[2],SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_installStateChangedHandler" "', argument " "3"" of type '" "void *""'"); 
  }IedConnection_installStateChangedHandler(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getMmsConnection(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsConnection result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getMmsConnection.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getMmsConnection" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);result = (MmsConnection)IedConnection_getMmsConnection(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsConnection, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue exports_IEC61850_SV_OPT_REFRESH_TIME_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_SV_OPT_SAMPLE_SYNC_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_SV_OPT_SAMPLE_RATE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(4));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_SV_OPT_DATA_SET_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(8));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_SV_OPT_SECURITY_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(16));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_SV_SMPMOD_SAMPLES_PER_PERIOD_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_SV_SMPMOD_SAMPLES_PER_SECOND_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_SV_SMPMOD_SECONDS_PER_SAMPLE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_ClientSVControlBlock_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  ClientSVControlBlock result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientSVControlBlock_create.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientSVControlBlock_create" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ClientSVControlBlock_create" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);result = (ClientSVControlBlock)ClientSVControlBlock_create(arg1,(char const *)arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sClientSVControlBlock, 0 |  0 );
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientSVControlBlock_destroy(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientSVControlBlock arg1 = (ClientSVControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientSVControlBlock_destroy.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientSVControlBlock_destroy" "', argument " "1"" of type '" "ClientSVControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientSVControlBlock >(argp1);ClientSVControlBlock_destroy(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientSVControlBlock_isMulticast(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientSVControlBlock arg1 = (ClientSVControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientSVControlBlock_isMulticast.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientSVControlBlock_isMulticast" "', argument " "1"" of type '" "ClientSVControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientSVControlBlock >(argp1);result = (bool)ClientSVControlBlock_isMulticast(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientSVControlBlock_getLastComError(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientSVControlBlock arg1 = (ClientSVControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientSVControlBlock_getLastComError.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientSVControlBlock_getLastComError" "', argument " "1"" of type '" "ClientSVControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientSVControlBlock >(argp1);result = (IedClientError)ClientSVControlBlock_getLastComError(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientSVControlBlock_setSvEna(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientSVControlBlock arg1 = (ClientSVControlBlock) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientSVControlBlock_setSvEna.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientSVControlBlock_setSvEna" "', argument " "1"" of type '" "ClientSVControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientSVControlBlock >(argp1);ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ClientSVControlBlock_setSvEna" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);result = (bool)ClientSVControlBlock_setSvEna(arg1,arg2);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientSVControlBlock_getSvEna(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientSVControlBlock arg1 = (ClientSVControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientSVControlBlock_getSvEna.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientSVControlBlock_getSvEna" "', argument " "1"" of type '" "ClientSVControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientSVControlBlock >(argp1);result = (bool)ClientSVControlBlock_getSvEna(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientSVControlBlock_setResv(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientSVControlBlock arg1 = (ClientSVControlBlock) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientSVControlBlock_setResv.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientSVControlBlock_setResv" "', argument " "1"" of type '" "ClientSVControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientSVControlBlock >(argp1);ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ClientSVControlBlock_setResv" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);result = (bool)ClientSVControlBlock_setResv(arg1,arg2);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientSVControlBlock_getResv(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientSVControlBlock arg1 = (ClientSVControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientSVControlBlock_getResv.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientSVControlBlock_getResv" "', argument " "1"" of type '" "ClientSVControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientSVControlBlock >(argp1);result = (bool)ClientSVControlBlock_getResv(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientSVControlBlock_getMsvID(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientSVControlBlock arg1 = (ClientSVControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientSVControlBlock_getMsvID.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientSVControlBlock_getMsvID" "', argument " "1"" of type '" "ClientSVControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientSVControlBlock >(argp1);result = (char *)ClientSVControlBlock_getMsvID(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientSVControlBlock_getDatSet(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientSVControlBlock arg1 = (ClientSVControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientSVControlBlock_getDatSet.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientSVControlBlock_getDatSet" "', argument " "1"" of type '" "ClientSVControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientSVControlBlock >(argp1);result = (char *)ClientSVControlBlock_getDatSet(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientSVControlBlock_getConfRev(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientSVControlBlock arg1 = (ClientSVControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientSVControlBlock_getConfRev.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientSVControlBlock_getConfRev" "', argument " "1"" of type '" "ClientSVControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientSVControlBlock >(argp1);result = (uint32_t)ClientSVControlBlock_getConfRev(arg1);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientSVControlBlock_getSmpRate(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientSVControlBlock arg1 = (ClientSVControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint16_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientSVControlBlock_getSmpRate.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientSVControlBlock_getSmpRate" "', argument " "1"" of type '" "ClientSVControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientSVControlBlock >(argp1);result = (uint16_t)ClientSVControlBlock_getSmpRate(arg1);
  jsresult = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientSVControlBlock_getDstAddress(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientSVControlBlock arg1 = (ClientSVControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PhyComAddress result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientSVControlBlock_getDstAddress.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientSVControlBlock_getDstAddress" "', argument " "1"" of type '" "ClientSVControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientSVControlBlock >(argp1);result = ClientSVControlBlock_getDstAddress(arg1);
  jsresult = SWIG_NewPointerObj((new PhyComAddress(result)), SWIGTYPE_p_PhyComAddress, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientSVControlBlock_getOptFlds(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientSVControlBlock arg1 = (ClientSVControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientSVControlBlock_getOptFlds.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientSVControlBlock_getOptFlds" "', argument " "1"" of type '" "ClientSVControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientSVControlBlock >(argp1);result = (int)ClientSVControlBlock_getOptFlds(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientSVControlBlock_getSmpMod(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientSVControlBlock arg1 = (ClientSVControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientSVControlBlock_getSmpMod.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientSVControlBlock_getSmpMod" "', argument " "1"" of type '" "ClientSVControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientSVControlBlock >(argp1);result = (uint8_t)ClientSVControlBlock_getSmpMod(arg1);
  jsresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientSVControlBlock_getNoASDU(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientSVControlBlock arg1 = (ClientSVControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientSVControlBlock_getNoASDU.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientSVControlBlock_getNoASDU" "', argument " "1"" of type '" "ClientSVControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientSVControlBlock >(argp1);result = (int)ClientSVControlBlock_getNoASDU(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue exports_GOCB_ELEMENT_GO_ENA_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_GOCB_ELEMENT_GO_ID_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_GOCB_ELEMENT_DATSET_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(4));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_GOCB_ELEMENT_CONF_REV_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(8));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_GOCB_ELEMENT_NDS_COMM_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(16));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_GOCB_ELEMENT_DST_ADDRESS_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(32));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_GOCB_ELEMENT_MIN_TIME_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(64));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_GOCB_ELEMENT_MAX_TIME_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(128));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_GOCB_ELEMENT_FIXED_OFFS_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(256));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_GOCB_ELEMENT_ALL_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(511));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_ClientGooseControlBlock_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  ClientGooseControlBlock result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientGooseControlBlock_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientGooseControlBlock_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);result = (ClientGooseControlBlock)ClientGooseControlBlock_create((char const *)arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sClientGooseControlBlock, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientGooseControlBlock_destroy(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientGooseControlBlock arg1 = (ClientGooseControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientGooseControlBlock_destroy.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientGooseControlBlock_destroy" "', argument " "1"" of type '" "ClientGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientGooseControlBlock >(argp1);ClientGooseControlBlock_destroy(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientGooseControlBlock_getGoEna(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientGooseControlBlock arg1 = (ClientGooseControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientGooseControlBlock_getGoEna.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientGooseControlBlock_getGoEna" "', argument " "1"" of type '" "ClientGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientGooseControlBlock >(argp1);result = (bool)ClientGooseControlBlock_getGoEna(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientGooseControlBlock_setGoEna(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientGooseControlBlock arg1 = (ClientGooseControlBlock) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientGooseControlBlock_setGoEna.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientGooseControlBlock_setGoEna" "', argument " "1"" of type '" "ClientGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientGooseControlBlock >(argp1);ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ClientGooseControlBlock_setGoEna" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);ClientGooseControlBlock_setGoEna(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientGooseControlBlock_getGoID(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientGooseControlBlock arg1 = (ClientGooseControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientGooseControlBlock_getGoID.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientGooseControlBlock_getGoID" "', argument " "1"" of type '" "ClientGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientGooseControlBlock >(argp1);result = (char *)ClientGooseControlBlock_getGoID(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientGooseControlBlock_setGoID(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientGooseControlBlock arg1 = (ClientGooseControlBlock) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientGooseControlBlock_setGoID.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientGooseControlBlock_setGoID" "', argument " "1"" of type '" "ClientGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientGooseControlBlock >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ClientGooseControlBlock_setGoID" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);ClientGooseControlBlock_setGoID(arg1,(char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientGooseControlBlock_getDatSet(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientGooseControlBlock arg1 = (ClientGooseControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientGooseControlBlock_getDatSet.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientGooseControlBlock_getDatSet" "', argument " "1"" of type '" "ClientGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientGooseControlBlock >(argp1);result = (char *)ClientGooseControlBlock_getDatSet(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientGooseControlBlock_setDatSet(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientGooseControlBlock arg1 = (ClientGooseControlBlock) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientGooseControlBlock_setDatSet.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientGooseControlBlock_setDatSet" "', argument " "1"" of type '" "ClientGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientGooseControlBlock >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ClientGooseControlBlock_setDatSet" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);ClientGooseControlBlock_setDatSet(arg1,(char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientGooseControlBlock_getConfRev(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientGooseControlBlock arg1 = (ClientGooseControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientGooseControlBlock_getConfRev.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientGooseControlBlock_getConfRev" "', argument " "1"" of type '" "ClientGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientGooseControlBlock >(argp1);result = (uint32_t)ClientGooseControlBlock_getConfRev(arg1);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientGooseControlBlock_getNdsComm(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientGooseControlBlock arg1 = (ClientGooseControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientGooseControlBlock_getNdsComm.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientGooseControlBlock_getNdsComm" "', argument " "1"" of type '" "ClientGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientGooseControlBlock >(argp1);result = (bool)ClientGooseControlBlock_getNdsComm(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientGooseControlBlock_getMinTime(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientGooseControlBlock arg1 = (ClientGooseControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientGooseControlBlock_getMinTime.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientGooseControlBlock_getMinTime" "', argument " "1"" of type '" "ClientGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientGooseControlBlock >(argp1);result = (uint32_t)ClientGooseControlBlock_getMinTime(arg1);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientGooseControlBlock_getMaxTime(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientGooseControlBlock arg1 = (ClientGooseControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientGooseControlBlock_getMaxTime.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientGooseControlBlock_getMaxTime" "', argument " "1"" of type '" "ClientGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientGooseControlBlock >(argp1);result = (uint32_t)ClientGooseControlBlock_getMaxTime(arg1);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientGooseControlBlock_getFixedOffs(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientGooseControlBlock arg1 = (ClientGooseControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientGooseControlBlock_getFixedOffs.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientGooseControlBlock_getFixedOffs" "', argument " "1"" of type '" "ClientGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientGooseControlBlock >(argp1);result = (bool)ClientGooseControlBlock_getFixedOffs(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientGooseControlBlock_getDstAddress(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientGooseControlBlock arg1 = (ClientGooseControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PhyComAddress result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientGooseControlBlock_getDstAddress.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientGooseControlBlock_getDstAddress" "', argument " "1"" of type '" "ClientGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientGooseControlBlock >(argp1);result = ClientGooseControlBlock_getDstAddress(arg1);
  jsresult = SWIG_NewPointerObj((new PhyComAddress(result)), SWIGTYPE_p_PhyComAddress, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientGooseControlBlock_setDstAddress(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientGooseControlBlock arg1 = (ClientGooseControlBlock) 0 ;
  PhyComAddress arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientGooseControlBlock_setDstAddress.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientGooseControlBlock_setDstAddress" "', argument " "1"" of type '" "ClientGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientGooseControlBlock >(argp1);{
    {
      res2 = SWIG_ConvertPtr(args[1], &argp2, SWIGTYPE_p_PhyComAddress,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ClientGooseControlBlock_setDstAddress" "', argument " "2"" of type '" "PhyComAddress""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ClientGooseControlBlock_setDstAddress" "', argument " "2"" of type '" "PhyComAddress""'");
      } else {
        arg2 = *(reinterpret_cast< PhyComAddress * >(argp2));
      }
    }
  }
  ClientGooseControlBlock_setDstAddress(arg1,SWIG_STD_MOVE(arg2));
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientGooseControlBlock_getDstAddress_addr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientGooseControlBlock arg1 = (ClientGooseControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientGooseControlBlock_getDstAddress_addr.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientGooseControlBlock_getDstAddress_addr" "', argument " "1"" of type '" "ClientGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientGooseControlBlock >(argp1);result = (MmsValue *)ClientGooseControlBlock_getDstAddress_addr(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientGooseControlBlock_setDstAddress_addr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientGooseControlBlock arg1 = (ClientGooseControlBlock) 0 ;
  MmsValue *arg2 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientGooseControlBlock_setDstAddress_addr.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientGooseControlBlock_setDstAddress_addr" "', argument " "1"" of type '" "ClientGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientGooseControlBlock >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ClientGooseControlBlock_setDstAddress_addr" "', argument " "2"" of type '" "MmsValue *""'"); 
  }
  arg2 = reinterpret_cast< MmsValue * >(argp2);ClientGooseControlBlock_setDstAddress_addr(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientGooseControlBlock_getDstAddress_priority(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientGooseControlBlock arg1 = (ClientGooseControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientGooseControlBlock_getDstAddress_priority.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientGooseControlBlock_getDstAddress_priority" "', argument " "1"" of type '" "ClientGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientGooseControlBlock >(argp1);result = (uint8_t)ClientGooseControlBlock_getDstAddress_priority(arg1);
  jsresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientGooseControlBlock_setDstAddress_priority(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientGooseControlBlock arg1 = (ClientGooseControlBlock) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientGooseControlBlock_setDstAddress_priority.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientGooseControlBlock_setDstAddress_priority" "', argument " "1"" of type '" "ClientGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientGooseControlBlock >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_char(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ClientGooseControlBlock_setDstAddress_priority" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = static_cast< uint8_t >(val2);ClientGooseControlBlock_setDstAddress_priority(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientGooseControlBlock_getDstAddress_vid(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientGooseControlBlock arg1 = (ClientGooseControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint16_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientGooseControlBlock_getDstAddress_vid.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientGooseControlBlock_getDstAddress_vid" "', argument " "1"" of type '" "ClientGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientGooseControlBlock >(argp1);result = (uint16_t)ClientGooseControlBlock_getDstAddress_vid(arg1);
  jsresult = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientGooseControlBlock_setDstAddress_vid(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientGooseControlBlock arg1 = (ClientGooseControlBlock) 0 ;
  uint16_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientGooseControlBlock_setDstAddress_vid.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientGooseControlBlock_setDstAddress_vid" "', argument " "1"" of type '" "ClientGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientGooseControlBlock >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_short(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ClientGooseControlBlock_setDstAddress_vid" "', argument " "2"" of type '" "uint16_t""'");
  } 
  arg2 = static_cast< uint16_t >(val2);ClientGooseControlBlock_setDstAddress_vid(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientGooseControlBlock_getDstAddress_appid(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientGooseControlBlock arg1 = (ClientGooseControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint16_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientGooseControlBlock_getDstAddress_appid.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientGooseControlBlock_getDstAddress_appid" "', argument " "1"" of type '" "ClientGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientGooseControlBlock >(argp1);result = (uint16_t)ClientGooseControlBlock_getDstAddress_appid(arg1);
  jsresult = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientGooseControlBlock_setDstAddress_appid(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientGooseControlBlock arg1 = (ClientGooseControlBlock) 0 ;
  uint16_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientGooseControlBlock_setDstAddress_appid.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientGooseControlBlock_setDstAddress_appid" "', argument " "1"" of type '" "ClientGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientGooseControlBlock >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_short(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ClientGooseControlBlock_setDstAddress_appid" "', argument " "2"" of type '" "uint16_t""'");
  } 
  arg2 = static_cast< uint16_t >(val2);ClientGooseControlBlock_setDstAddress_appid(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getGoCBValues(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  ClientGooseControlBlock arg4 = (ClientGooseControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  ClientGooseControlBlock result;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getGoCBValues.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getGoCBValues" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_getGoCBValues" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_ConvertPtr(args[2], &argp4,SWIGTYPE_p_sClientGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedConnection_getGoCBValues" "', argument " "4"" of type '" "ClientGooseControlBlock""'"); 
  }
  arg4 = reinterpret_cast< ClientGooseControlBlock >(argp4);result = (ClientGooseControlBlock)IedConnection_getGoCBValues(arg1,arg2,(char const *)arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sClientGooseControlBlock, 0 |  0 );
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_setGoCBValues(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  ClientGooseControlBlock arg3 = (ClientGooseControlBlock) 0 ;
  uint32_t arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_setGoCBValues.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_setGoCBValues" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_sClientGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_setGoCBValues" "', argument " "3"" of type '" "ClientGooseControlBlock""'"); 
  }
  arg3 = reinterpret_cast< ClientGooseControlBlock >(argp3);ecode4 = SWIG_AsVal_unsigned_SS_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_setGoCBValues" "', argument " "4"" of type '" "uint32_t""'");
  } 
  arg4 = static_cast< uint32_t >(val4);ecode5 = SWIG_AsVal_bool(args[3], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "IedConnection_setGoCBValues" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);IedConnection_setGoCBValues(arg1,arg2,arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_readObject(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  FunctionalConstraint arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_readObject.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_readObject" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_readObject" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_readObject" "', argument " "4"" of type '" "FunctionalConstraint""'");
  } 
  arg4 = static_cast< FunctionalConstraint >(val4);result = (MmsValue *)IedConnection_readObject(arg1,arg2,(char const *)arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_readObjectAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  FunctionalConstraint arg4 ;
  IedConnection_ReadObjectHandler arg5 = (IedConnection_ReadObjectHandler) 0 ;
  void *arg6 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int res6 ;
  uint32_t result;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_readObjectAsync.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_readObjectAsync" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_readObjectAsync" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_readObjectAsync" "', argument " "4"" of type '" "FunctionalConstraint""'");
  } 
  arg4 = static_cast< FunctionalConstraint >(val4);{
    {
      int res = SWIG_ConvertFunctionPtr(args[3], (void**)(&arg5), SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError_p_sMmsValue__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedConnection_readObjectAsync" "', argument " "5"" of type '" "IedConnection_ReadObjectHandler""'"); 
      }
    }
  }
  res6 = SWIG_ConvertPtr(args[4],SWIG_as_voidptrptr(&arg6), 0, 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "IedConnection_readObjectAsync" "', argument " "6"" of type '" "void *""'"); 
  }result = (uint32_t)IedConnection_readObjectAsync(arg1,arg2,(char const *)arg3,arg4,arg5,arg6);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_writeObject(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  FunctionalConstraint arg4 ;
  MmsValue *arg5 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_writeObject.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_writeObject" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_writeObject" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_writeObject" "', argument " "4"" of type '" "FunctionalConstraint""'");
  } 
  arg4 = static_cast< FunctionalConstraint >(val4);res5 = SWIG_ConvertPtr(args[3], &argp5,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "IedConnection_writeObject" "', argument " "5"" of type '" "MmsValue *""'"); 
  }
  arg5 = reinterpret_cast< MmsValue * >(argp5);IedConnection_writeObject(arg1,arg2,(char const *)arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_writeObjectAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  FunctionalConstraint arg4 ;
  MmsValue *arg5 = (MmsValue *) 0 ;
  IedConnection_GenericServiceHandler arg6 = (IedConnection_GenericServiceHandler) 0 ;
  void *arg7 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  int res7 ;
  uint32_t result;
  
  if (args.Length() < 6 || args.Length() > 6) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_writeObjectAsync.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_writeObjectAsync" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_writeObjectAsync" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_writeObjectAsync" "', argument " "4"" of type '" "FunctionalConstraint""'");
  } 
  arg4 = static_cast< FunctionalConstraint >(val4);res5 = SWIG_ConvertPtr(args[3], &argp5,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "IedConnection_writeObjectAsync" "', argument " "5"" of type '" "MmsValue *""'"); 
  }
  arg5 = reinterpret_cast< MmsValue * >(argp5);{
    {
      int res = SWIG_ConvertFunctionPtr(args[4], (void**)(&arg6), SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedConnection_writeObjectAsync" "', argument " "6"" of type '" "IedConnection_GenericServiceHandler""'"); 
      }
    }
  }
  res7 = SWIG_ConvertPtr(args[5],SWIG_as_voidptrptr(&arg7), 0, 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "IedConnection_writeObjectAsync" "', argument " "7"" of type '" "void *""'"); 
  }result = (uint32_t)IedConnection_writeObjectAsync(arg1,arg2,(char const *)arg3,arg4,arg5,arg6,arg7);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_readBooleanValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  FunctionalConstraint arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  bool result;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_readBooleanValue.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_readBooleanValue" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_readBooleanValue" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_readBooleanValue" "', argument " "4"" of type '" "FunctionalConstraint""'");
  } 
  arg4 = static_cast< FunctionalConstraint >(val4);result = (bool)IedConnection_readBooleanValue(arg1,arg2,(char const *)arg3,arg4);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_readFloatValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  FunctionalConstraint arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  float result;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_readFloatValue.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_readFloatValue" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_readFloatValue" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_readFloatValue" "', argument " "4"" of type '" "FunctionalConstraint""'");
  } 
  arg4 = static_cast< FunctionalConstraint >(val4);result = (float)IedConnection_readFloatValue(arg1,arg2,(char const *)arg3,arg4);
  jsresult = SWIG_From_float(static_cast< float >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_readStringValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  FunctionalConstraint arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_readStringValue.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_readStringValue" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_readStringValue" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_readStringValue" "', argument " "4"" of type '" "FunctionalConstraint""'");
  } 
  arg4 = static_cast< FunctionalConstraint >(val4);result = (char *)IedConnection_readStringValue(arg1,arg2,(char const *)arg3,arg4);
  jsresult = SWIG_FromCharPtr((const char *)result);
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_readInt32Value(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  FunctionalConstraint arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int32_t result;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_readInt32Value.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_readInt32Value" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_readInt32Value" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_readInt32Value" "', argument " "4"" of type '" "FunctionalConstraint""'");
  } 
  arg4 = static_cast< FunctionalConstraint >(val4);result = (int32_t)IedConnection_readInt32Value(arg1,arg2,(char const *)arg3,arg4);
  jsresult = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_readInt64Value(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  FunctionalConstraint arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int64_t result;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_readInt64Value.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_readInt64Value" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_readInt64Value" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_readInt64Value" "', argument " "4"" of type '" "FunctionalConstraint""'");
  } 
  arg4 = static_cast< FunctionalConstraint >(val4);result = (int64_t)IedConnection_readInt64Value(arg1,arg2,(char const *)arg3,arg4);
  jsresult = SWIG_From_long_SS_long(static_cast< long long >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_readUnsigned32Value(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  FunctionalConstraint arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  uint32_t result;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_readUnsigned32Value.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_readUnsigned32Value" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_readUnsigned32Value" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_readUnsigned32Value" "', argument " "4"" of type '" "FunctionalConstraint""'");
  } 
  arg4 = static_cast< FunctionalConstraint >(val4);result = (uint32_t)IedConnection_readUnsigned32Value(arg1,arg2,(char const *)arg3,arg4);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_readTimestampValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  FunctionalConstraint arg4 ;
  Timestamp *arg5 = (Timestamp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  Timestamp *result = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_readTimestampValue.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_readTimestampValue" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_readTimestampValue" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_readTimestampValue" "', argument " "4"" of type '" "FunctionalConstraint""'");
  } 
  arg4 = static_cast< FunctionalConstraint >(val4);res5 = SWIG_ConvertPtr(args[3], &argp5,SWIGTYPE_p_Timestamp, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "IedConnection_readTimestampValue" "', argument " "5"" of type '" "Timestamp *""'"); 
  }
  arg5 = reinterpret_cast< Timestamp * >(argp5);result = (Timestamp *)IedConnection_readTimestampValue(arg1,arg2,(char const *)arg3,arg4,arg5);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Timestamp, 0 |  0 );
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_readQualityValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  FunctionalConstraint arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  Quality result;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_readQualityValue.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_readQualityValue" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_readQualityValue" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_readQualityValue" "', argument " "4"" of type '" "FunctionalConstraint""'");
  } 
  arg4 = static_cast< FunctionalConstraint >(val4);result = (Quality)IedConnection_readQualityValue(arg1,arg2,(char const *)arg3,arg4);
  jsresult = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_writeBooleanValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  FunctionalConstraint arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_writeBooleanValue.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_writeBooleanValue" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_writeBooleanValue" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_writeBooleanValue" "', argument " "4"" of type '" "FunctionalConstraint""'");
  } 
  arg4 = static_cast< FunctionalConstraint >(val4);ecode5 = SWIG_AsVal_bool(args[3], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "IedConnection_writeBooleanValue" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);IedConnection_writeBooleanValue(arg1,arg2,(char const *)arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_writeInt32Value(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  FunctionalConstraint arg4 ;
  int32_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_writeInt32Value.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_writeInt32Value" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_writeInt32Value" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_writeInt32Value" "', argument " "4"" of type '" "FunctionalConstraint""'");
  } 
  arg4 = static_cast< FunctionalConstraint >(val4);ecode5 = SWIG_AsVal_int(args[3], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "IedConnection_writeInt32Value" "', argument " "5"" of type '" "int32_t""'");
  } 
  arg5 = static_cast< int32_t >(val5);IedConnection_writeInt32Value(arg1,arg2,(char const *)arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_writeUnsigned32Value(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  FunctionalConstraint arg4 ;
  uint32_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_writeUnsigned32Value.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_writeUnsigned32Value" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_writeUnsigned32Value" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_writeUnsigned32Value" "', argument " "4"" of type '" "FunctionalConstraint""'");
  } 
  arg4 = static_cast< FunctionalConstraint >(val4);ecode5 = SWIG_AsVal_unsigned_SS_int(args[3], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "IedConnection_writeUnsigned32Value" "', argument " "5"" of type '" "uint32_t""'");
  } 
  arg5 = static_cast< uint32_t >(val5);IedConnection_writeUnsigned32Value(arg1,arg2,(char const *)arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_writeFloatValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  FunctionalConstraint arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_writeFloatValue.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_writeFloatValue" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_writeFloatValue" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_writeFloatValue" "', argument " "4"" of type '" "FunctionalConstraint""'");
  } 
  arg4 = static_cast< FunctionalConstraint >(val4);ecode5 = SWIG_AsVal_float(args[3], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "IedConnection_writeFloatValue" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);IedConnection_writeFloatValue(arg1,arg2,(char const *)arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_writeVisibleStringValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  FunctionalConstraint arg4 ;
  char *arg5 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_writeVisibleStringValue.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_writeVisibleStringValue" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_writeVisibleStringValue" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_writeVisibleStringValue" "', argument " "4"" of type '" "FunctionalConstraint""'");
  } 
  arg4 = static_cast< FunctionalConstraint >(val4);res5 = SWIG_AsCharPtrAndSize(args[3], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "IedConnection_writeVisibleStringValue" "', argument " "5"" of type '" "char *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);IedConnection_writeVisibleStringValue(arg1,arg2,(char const *)arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_writeOctetString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  FunctionalConstraint arg4 ;
  uint8_t *arg5 = (uint8_t *) 0 ;
  int arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_writeOctetString.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_writeOctetString" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_writeOctetString" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_writeOctetString" "', argument " "4"" of type '" "FunctionalConstraint""'");
  } 
  arg4 = static_cast< FunctionalConstraint >(val4);res5 = SWIG_ConvertPtr(args[3], &argp5,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "IedConnection_writeOctetString" "', argument " "5"" of type '" "uint8_t *""'"); 
  }
  arg5 = reinterpret_cast< uint8_t * >(argp5);ecode6 = SWIG_AsVal_int(args[4], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "IedConnection_writeOctetString" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);IedConnection_writeOctetString(arg1,arg2,(char const *)arg3,arg4,arg5,arg6);
  jsresult = SWIGV8_UNDEFINED();
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getRCBValues(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  ClientReportControlBlock arg4 = (ClientReportControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  ClientReportControlBlock result;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getRCBValues.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getRCBValues" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_getRCBValues" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_ConvertPtr(args[2], &argp4,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedConnection_getRCBValues" "', argument " "4"" of type '" "ClientReportControlBlock""'"); 
  }
  arg4 = reinterpret_cast< ClientReportControlBlock >(argp4);result = (ClientReportControlBlock)IedConnection_getRCBValues(arg1,arg2,(char const *)arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getRCBValuesAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  ClientReportControlBlock arg4 = (ClientReportControlBlock) 0 ;
  IedConnection_GetRCBValuesHandler arg5 = (IedConnection_GetRCBValuesHandler) 0 ;
  void *arg6 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int res6 ;
  uint32_t result;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getRCBValuesAsync.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getRCBValuesAsync" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_getRCBValuesAsync" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_ConvertPtr(args[2], &argp4,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedConnection_getRCBValuesAsync" "', argument " "4"" of type '" "ClientReportControlBlock""'"); 
  }
  arg4 = reinterpret_cast< ClientReportControlBlock >(argp4);{
    {
      int res = SWIG_ConvertFunctionPtr(args[3], (void**)(&arg5), SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError_p_sClientReportControlBlock__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedConnection_getRCBValuesAsync" "', argument " "5"" of type '" "IedConnection_GetRCBValuesHandler""'"); 
      }
    }
  }
  res6 = SWIG_ConvertPtr(args[4],SWIG_as_voidptrptr(&arg6), 0, 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "IedConnection_getRCBValuesAsync" "', argument " "6"" of type '" "void *""'"); 
  }result = (uint32_t)IedConnection_getRCBValuesAsync(arg1,arg2,(char const *)arg3,arg4,arg5,arg6);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue exports_IEC61850_REASON_NOT_INCLUDED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_REASON_DATA_CHANGE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_REASON_QUALITY_CHANGE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_REASON_DATA_UPDATE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(4));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_REASON_INTEGRITY_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(8));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_REASON_GI_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(16));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_REASON_UNKNOWN_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(32));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_REASON_NOT_INCLUDED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_REASON_DATA_CHANGE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_REASON_QUALITY_CHANGE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_REASON_DATA_UPDATE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(4));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_REASON_INTEGRITY_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(8));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_REASON_GI_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(16));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_REASON_UNKNOWN_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(32));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RCB_ELEMENT_RPT_ID_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RCB_ELEMENT_RPT_ENA_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RCB_ELEMENT_RESV_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(4));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RCB_ELEMENT_DATSET_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(8));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RCB_ELEMENT_CONF_REV_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(16));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RCB_ELEMENT_OPT_FLDS_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(32));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RCB_ELEMENT_BUF_TM_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(64));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RCB_ELEMENT_SQ_NUM_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(128));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RCB_ELEMENT_TRG_OPS_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(256));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RCB_ELEMENT_INTG_PD_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(512));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RCB_ELEMENT_GI_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1024));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RCB_ELEMENT_PURGE_BUF_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(2048));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RCB_ELEMENT_ENTRY_ID_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(4096));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RCB_ELEMENT_TIME_OF_ENTRY_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(8192));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RCB_ELEMENT_RESV_TMS_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(16384));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RCB_ELEMENT_OWNER_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(32768));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_IedConnection_setRCBValues(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  ClientReportControlBlock arg3 = (ClientReportControlBlock) 0 ;
  uint32_t arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_setRCBValues.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_setRCBValues" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_setRCBValues" "', argument " "3"" of type '" "ClientReportControlBlock""'"); 
  }
  arg3 = reinterpret_cast< ClientReportControlBlock >(argp3);ecode4 = SWIG_AsVal_unsigned_SS_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_setRCBValues" "', argument " "4"" of type '" "uint32_t""'");
  } 
  arg4 = static_cast< uint32_t >(val4);ecode5 = SWIG_AsVal_bool(args[3], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "IedConnection_setRCBValues" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);IedConnection_setRCBValues(arg1,arg2,arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_setRCBValuesAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  ClientReportControlBlock arg3 = (ClientReportControlBlock) 0 ;
  uint32_t arg4 ;
  bool arg5 ;
  IedConnection_GenericServiceHandler arg6 = (IedConnection_GenericServiceHandler) 0 ;
  void *arg7 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  int res7 ;
  uint32_t result;
  
  if (args.Length() < 6 || args.Length() > 6) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_setRCBValuesAsync.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_setRCBValuesAsync" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_ConvertPtr(args[1], &argp3,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_setRCBValuesAsync" "', argument " "3"" of type '" "ClientReportControlBlock""'"); 
  }
  arg3 = reinterpret_cast< ClientReportControlBlock >(argp3);ecode4 = SWIG_AsVal_unsigned_SS_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_setRCBValuesAsync" "', argument " "4"" of type '" "uint32_t""'");
  } 
  arg4 = static_cast< uint32_t >(val4);ecode5 = SWIG_AsVal_bool(args[3], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "IedConnection_setRCBValuesAsync" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);{
    {
      int res = SWIG_ConvertFunctionPtr(args[4], (void**)(&arg6), SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedConnection_setRCBValuesAsync" "', argument " "6"" of type '" "IedConnection_GenericServiceHandler""'"); 
      }
    }
  }
  res7 = SWIG_ConvertPtr(args[5],SWIG_as_voidptrptr(&arg7), 0, 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "IedConnection_setRCBValuesAsync" "', argument " "7"" of type '" "void *""'"); 
  }result = (uint32_t)IedConnection_setRCBValuesAsync(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_installReportHandler(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  ReportCallbackFunction arg4 = (ReportCallbackFunction) 0 ;
  void *arg5 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res5 ;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_installReportHandler.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_installReportHandler" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedConnection_installReportHandler" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_installReportHandler" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);{
    {
      int res = SWIG_ConvertFunctionPtr(args[3], (void**)(&arg4), SWIGTYPE_p_f_p_void_p_sClientReport__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedConnection_installReportHandler" "', argument " "4"" of type '" "ReportCallbackFunction""'"); 
      }
    }
  }
  res5 = SWIG_ConvertPtr(args[4],SWIG_as_voidptrptr(&arg5), 0, 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "IedConnection_installReportHandler" "', argument " "5"" of type '" "void *""'"); 
  }IedConnection_installReportHandler(arg1,(char const *)arg2,(char const *)arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_uninstallReportHandler(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_uninstallReportHandler.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_uninstallReportHandler" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedConnection_uninstallReportHandler" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);IedConnection_uninstallReportHandler(arg1,(char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_triggerGIReport(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_triggerGIReport.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_triggerGIReport" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_triggerGIReport" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);IedConnection_triggerGIReport(arg1,arg2,(char const *)arg3);
  jsresult = SWIGV8_UNDEFINED();
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReport_getDataSetName(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReport arg1 = (ClientReport) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReport_getDataSetName.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReport, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReport_getDataSetName" "', argument " "1"" of type '" "ClientReport""'"); 
  }
  arg1 = reinterpret_cast< ClientReport >(argp1);result = (char *)ClientReport_getDataSetName(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReport_getDataSetValues(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReport arg1 = (ClientReport) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReport_getDataSetValues.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReport, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReport_getDataSetValues" "', argument " "1"" of type '" "ClientReport""'"); 
  }
  arg1 = reinterpret_cast< ClientReport >(argp1);result = (MmsValue *)ClientReport_getDataSetValues(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReport_getRcbReference(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReport arg1 = (ClientReport) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReport_getRcbReference.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReport, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReport_getRcbReference" "', argument " "1"" of type '" "ClientReport""'"); 
  }
  arg1 = reinterpret_cast< ClientReport >(argp1);result = (char *)ClientReport_getRcbReference(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReport_getRptId(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReport arg1 = (ClientReport) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReport_getRptId.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReport, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReport_getRptId" "', argument " "1"" of type '" "ClientReport""'"); 
  }
  arg1 = reinterpret_cast< ClientReport >(argp1);result = (char *)ClientReport_getRptId(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReport_getReasonForInclusion(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReport arg1 = (ClientReport) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  ReasonForInclusion result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReport_getReasonForInclusion.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReport, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReport_getReasonForInclusion" "', argument " "1"" of type '" "ClientReport""'"); 
  }
  arg1 = reinterpret_cast< ClientReport >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ClientReport_getReasonForInclusion" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);result = (ReasonForInclusion)ClientReport_getReasonForInclusion(arg1,arg2);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReport_getEntryId(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReport arg1 = (ClientReport) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReport_getEntryId.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReport, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReport_getEntryId" "', argument " "1"" of type '" "ClientReport""'"); 
  }
  arg1 = reinterpret_cast< ClientReport >(argp1);result = (MmsValue *)ClientReport_getEntryId(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReport_hasTimestamp(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReport arg1 = (ClientReport) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReport_hasTimestamp.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReport, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReport_hasTimestamp" "', argument " "1"" of type '" "ClientReport""'"); 
  }
  arg1 = reinterpret_cast< ClientReport >(argp1);result = (bool)ClientReport_hasTimestamp(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReport_hasSeqNum(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReport arg1 = (ClientReport) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReport_hasSeqNum.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReport, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReport_hasSeqNum" "', argument " "1"" of type '" "ClientReport""'"); 
  }
  arg1 = reinterpret_cast< ClientReport >(argp1);result = (bool)ClientReport_hasSeqNum(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReport_getSeqNum(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReport arg1 = (ClientReport) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint16_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReport_getSeqNum.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReport, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReport_getSeqNum" "', argument " "1"" of type '" "ClientReport""'"); 
  }
  arg1 = reinterpret_cast< ClientReport >(argp1);result = (uint16_t)ClientReport_getSeqNum(arg1);
  jsresult = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReport_hasDataSetName(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReport arg1 = (ClientReport) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReport_hasDataSetName.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReport, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReport_hasDataSetName" "', argument " "1"" of type '" "ClientReport""'"); 
  }
  arg1 = reinterpret_cast< ClientReport >(argp1);result = (bool)ClientReport_hasDataSetName(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReport_hasReasonForInclusion(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReport arg1 = (ClientReport) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReport_hasReasonForInclusion.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReport, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReport_hasReasonForInclusion" "', argument " "1"" of type '" "ClientReport""'"); 
  }
  arg1 = reinterpret_cast< ClientReport >(argp1);result = (bool)ClientReport_hasReasonForInclusion(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReport_hasConfRev(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReport arg1 = (ClientReport) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReport_hasConfRev.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReport, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReport_hasConfRev" "', argument " "1"" of type '" "ClientReport""'"); 
  }
  arg1 = reinterpret_cast< ClientReport >(argp1);result = (bool)ClientReport_hasConfRev(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReport_getConfRev(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReport arg1 = (ClientReport) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReport_getConfRev.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReport, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReport_getConfRev" "', argument " "1"" of type '" "ClientReport""'"); 
  }
  arg1 = reinterpret_cast< ClientReport >(argp1);result = (uint32_t)ClientReport_getConfRev(arg1);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReport_hasBufOvfl(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReport arg1 = (ClientReport) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReport_hasBufOvfl.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReport, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReport_hasBufOvfl" "', argument " "1"" of type '" "ClientReport""'"); 
  }
  arg1 = reinterpret_cast< ClientReport >(argp1);result = (bool)ClientReport_hasBufOvfl(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReport_getBufOvfl(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReport arg1 = (ClientReport) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReport_getBufOvfl.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReport, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReport_getBufOvfl" "', argument " "1"" of type '" "ClientReport""'"); 
  }
  arg1 = reinterpret_cast< ClientReport >(argp1);result = (bool)ClientReport_getBufOvfl(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReport_hasDataReference(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReport arg1 = (ClientReport) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReport_hasDataReference.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReport, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReport_hasDataReference" "', argument " "1"" of type '" "ClientReport""'"); 
  }
  arg1 = reinterpret_cast< ClientReport >(argp1);result = (bool)ClientReport_hasDataReference(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReport_getDataReference(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReport arg1 = (ClientReport) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReport_getDataReference.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReport, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReport_getDataReference" "', argument " "1"" of type '" "ClientReport""'"); 
  }
  arg1 = reinterpret_cast< ClientReport >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ClientReport_getDataReference" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);result = (char *)ClientReport_getDataReference(arg1,arg2);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReport_getTimestamp(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReport arg1 = (ClientReport) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint64_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReport_getTimestamp.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReport, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReport_getTimestamp" "', argument " "1"" of type '" "ClientReport""'"); 
  }
  arg1 = reinterpret_cast< ClientReport >(argp1);result = (uint64_t)ClientReport_getTimestamp(arg1);
  jsresult = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReport_hasSubSeqNum(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReport arg1 = (ClientReport) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReport_hasSubSeqNum.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReport, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReport_hasSubSeqNum" "', argument " "1"" of type '" "ClientReport""'"); 
  }
  arg1 = reinterpret_cast< ClientReport >(argp1);result = (bool)ClientReport_hasSubSeqNum(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReport_getSubSeqNum(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReport arg1 = (ClientReport) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint16_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReport_getSubSeqNum.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReport, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReport_getSubSeqNum" "', argument " "1"" of type '" "ClientReport""'"); 
  }
  arg1 = reinterpret_cast< ClientReport >(argp1);result = (uint16_t)ClientReport_getSubSeqNum(arg1);
  jsresult = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReport_getMoreSeqmentsFollow(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReport arg1 = (ClientReport) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReport_getMoreSeqmentsFollow.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReport, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReport_getMoreSeqmentsFollow" "', argument " "1"" of type '" "ClientReport""'"); 
  }
  arg1 = reinterpret_cast< ClientReport >(argp1);result = (bool)ClientReport_getMoreSeqmentsFollow(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ReasonForInclusion_getValueAsString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ReasonForInclusion arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ReasonForInclusion_getValueAsString.");
  
  ecode1 = SWIG_AsVal_int(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "ReasonForInclusion_getValueAsString" "', argument " "1"" of type '" "ReasonForInclusion""'");
  } 
  arg1 = static_cast< ReasonForInclusion >(val1);result = (char *)ReasonForInclusion_getValueAsString(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  ClientReportControlBlock result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);result = (ClientReportControlBlock)ClientReportControlBlock_create((char const *)arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_destroy(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_destroy.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_destroy" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);ClientReportControlBlock_destroy(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_getObjectReference(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_getObjectReference.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_getObjectReference" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);result = (char *)ClientReportControlBlock_getObjectReference(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_isBuffered(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_isBuffered.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_isBuffered" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);result = (bool)ClientReportControlBlock_isBuffered(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_getRptId(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_getRptId.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_getRptId" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);result = (char *)ClientReportControlBlock_getRptId(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_setRptId(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_setRptId.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_setRptId" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ClientReportControlBlock_setRptId" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);ClientReportControlBlock_setRptId(arg1,(char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_getRptEna(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_getRptEna.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_getRptEna" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);result = (bool)ClientReportControlBlock_getRptEna(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_setRptEna(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_setRptEna.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_setRptEna" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ClientReportControlBlock_setRptEna" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);ClientReportControlBlock_setRptEna(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_getResv(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_getResv.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_getResv" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);result = (bool)ClientReportControlBlock_getResv(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_setResv(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_setResv.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_setResv" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ClientReportControlBlock_setResv" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);ClientReportControlBlock_setResv(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_getDataSetReference(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_getDataSetReference.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_getDataSetReference" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);result = (char *)ClientReportControlBlock_getDataSetReference(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_setDataSetReference(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_setDataSetReference.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_setDataSetReference" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ClientReportControlBlock_setDataSetReference" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);ClientReportControlBlock_setDataSetReference(arg1,(char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_getConfRev(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_getConfRev.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_getConfRev" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);result = (uint32_t)ClientReportControlBlock_getConfRev(arg1);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_getOptFlds(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_getOptFlds.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_getOptFlds" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);result = (int)ClientReportControlBlock_getOptFlds(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_setOptFlds(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_setOptFlds.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_setOptFlds" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ClientReportControlBlock_setOptFlds" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);ClientReportControlBlock_setOptFlds(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_getBufTm(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_getBufTm.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_getBufTm" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);result = (uint32_t)ClientReportControlBlock_getBufTm(arg1);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_setBufTm(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_setBufTm.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_setBufTm" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ClientReportControlBlock_setBufTm" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = static_cast< uint32_t >(val2);ClientReportControlBlock_setBufTm(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_getSqNum(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint16_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_getSqNum.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_getSqNum" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);result = (uint16_t)ClientReportControlBlock_getSqNum(arg1);
  jsresult = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_getTrgOps(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_getTrgOps.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_getTrgOps" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);result = (int)ClientReportControlBlock_getTrgOps(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_setTrgOps(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_setTrgOps.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_setTrgOps" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ClientReportControlBlock_setTrgOps" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);ClientReportControlBlock_setTrgOps(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_getIntgPd(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_getIntgPd.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_getIntgPd" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);result = (uint32_t)ClientReportControlBlock_getIntgPd(arg1);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_setIntgPd(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_setIntgPd.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_setIntgPd" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ClientReportControlBlock_setIntgPd" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = static_cast< uint32_t >(val2);ClientReportControlBlock_setIntgPd(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_getGI(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_getGI.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_getGI" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);result = (bool)ClientReportControlBlock_getGI(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_setGI(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_setGI.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_setGI" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ClientReportControlBlock_setGI" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);ClientReportControlBlock_setGI(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_getPurgeBuf(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_getPurgeBuf.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_getPurgeBuf" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);result = (bool)ClientReportControlBlock_getPurgeBuf(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_setPurgeBuf(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_setPurgeBuf.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_setPurgeBuf" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ClientReportControlBlock_setPurgeBuf" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);ClientReportControlBlock_setPurgeBuf(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_hasResvTms(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_hasResvTms.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_hasResvTms" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);result = (bool)ClientReportControlBlock_hasResvTms(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_getResvTms(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int16_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_getResvTms.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_getResvTms" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);result = (int16_t)ClientReportControlBlock_getResvTms(arg1);
  jsresult = SWIG_From_short(static_cast< short >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_setResvTms(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  int16_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_setResvTms.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_setResvTms" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);ecode2 = SWIG_AsVal_short(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ClientReportControlBlock_setResvTms" "', argument " "2"" of type '" "int16_t""'");
  } 
  arg2 = static_cast< int16_t >(val2);ClientReportControlBlock_setResvTms(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_getEntryId(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_getEntryId.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_getEntryId" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);result = (MmsValue *)ClientReportControlBlock_getEntryId(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_setEntryId(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  MmsValue *arg2 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_setEntryId.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_setEntryId" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ClientReportControlBlock_setEntryId" "', argument " "2"" of type '" "MmsValue *""'"); 
  }
  arg2 = reinterpret_cast< MmsValue * >(argp2);ClientReportControlBlock_setEntryId(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_getEntryTime(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint64_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_getEntryTime.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_getEntryTime" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);result = (uint64_t)ClientReportControlBlock_getEntryTime(arg1);
  jsresult = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientReportControlBlock_getOwner(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientReportControlBlock arg1 = (ClientReportControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientReportControlBlock_getOwner.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientReportControlBlock_getOwner" "', argument " "1"" of type '" "ClientReportControlBlock""'"); 
  }
  arg1 = reinterpret_cast< ClientReportControlBlock >(argp1);result = (MmsValue *)ClientReportControlBlock_getOwner(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_readDataSetValues(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  ClientDataSet arg4 = (ClientDataSet) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  ClientDataSet result;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_readDataSetValues.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_readDataSetValues" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_readDataSetValues" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_ConvertPtr(args[2], &argp4,SWIGTYPE_p_sClientDataSet, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedConnection_readDataSetValues" "', argument " "4"" of type '" "ClientDataSet""'"); 
  }
  arg4 = reinterpret_cast< ClientDataSet >(argp4);result = (ClientDataSet)IedConnection_readDataSetValues(arg1,arg2,(char const *)arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sClientDataSet, 0 |  0 );
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_readDataSetValuesAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  ClientDataSet arg4 = (ClientDataSet) 0 ;
  IedConnection_ReadDataSetHandler arg5 = (IedConnection_ReadDataSetHandler) 0 ;
  void *arg6 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int res6 ;
  uint32_t result;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_readDataSetValuesAsync.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_readDataSetValuesAsync" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_readDataSetValuesAsync" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_ConvertPtr(args[2], &argp4,SWIGTYPE_p_sClientDataSet, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedConnection_readDataSetValuesAsync" "', argument " "4"" of type '" "ClientDataSet""'"); 
  }
  arg4 = reinterpret_cast< ClientDataSet >(argp4);{
    {
      int res = SWIG_ConvertFunctionPtr(args[3], (void**)(&arg5), SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError_p_sClientDataSet__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedConnection_readDataSetValuesAsync" "', argument " "5"" of type '" "IedConnection_ReadDataSetHandler""'"); 
      }
    }
  }
  res6 = SWIG_ConvertPtr(args[4],SWIG_as_voidptrptr(&arg6), 0, 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "IedConnection_readDataSetValuesAsync" "', argument " "6"" of type '" "void *""'"); 
  }result = (uint32_t)IedConnection_readDataSetValuesAsync(arg1,arg2,(char const *)arg3,arg4,arg5,arg6);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_createDataSet(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  LinkedList arg4 = (LinkedList) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_createDataSet.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_createDataSet" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_createDataSet" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_ConvertPtr(args[2], &argp4,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedConnection_createDataSet" "', argument " "4"" of type '" "LinkedList""'"); 
  }
  arg4 = reinterpret_cast< LinkedList >(argp4);IedConnection_createDataSet(arg1,arg2,(char const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_createDataSetAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  LinkedList arg4 = (LinkedList) 0 ;
  IedConnection_GenericServiceHandler arg5 = (IedConnection_GenericServiceHandler) 0 ;
  void *arg6 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int res6 ;
  uint32_t result;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_createDataSetAsync.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_createDataSetAsync" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_createDataSetAsync" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_ConvertPtr(args[2], &argp4,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedConnection_createDataSetAsync" "', argument " "4"" of type '" "LinkedList""'"); 
  }
  arg4 = reinterpret_cast< LinkedList >(argp4);{
    {
      int res = SWIG_ConvertFunctionPtr(args[3], (void**)(&arg5), SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedConnection_createDataSetAsync" "', argument " "5"" of type '" "IedConnection_GenericServiceHandler""'"); 
      }
    }
  }
  res6 = SWIG_ConvertPtr(args[4],SWIG_as_voidptrptr(&arg6), 0, 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "IedConnection_createDataSetAsync" "', argument " "6"" of type '" "void *""'"); 
  }result = (uint32_t)IedConnection_createDataSetAsync(arg1,arg2,(char const *)arg3,arg4,arg5,arg6);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_deleteDataSet(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  bool result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_deleteDataSet.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_deleteDataSet" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_deleteDataSet" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);result = (bool)IedConnection_deleteDataSet(arg1,arg2,(char const *)arg3);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_deleteDataSetAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  IedConnection_GenericServiceHandler arg4 = (IedConnection_GenericServiceHandler) 0 ;
  void *arg5 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res5 ;
  uint32_t result;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_deleteDataSetAsync.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_deleteDataSetAsync" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_deleteDataSetAsync" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);{
    {
      int res = SWIG_ConvertFunctionPtr(args[2], (void**)(&arg4), SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedConnection_deleteDataSetAsync" "', argument " "4"" of type '" "IedConnection_GenericServiceHandler""'"); 
      }
    }
  }
  res5 = SWIG_ConvertPtr(args[3],SWIG_as_voidptrptr(&arg5), 0, 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "IedConnection_deleteDataSetAsync" "', argument " "5"" of type '" "void *""'"); 
  }result = (uint32_t)IedConnection_deleteDataSetAsync(arg1,arg2,(char const *)arg3,arg4,arg5);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getDataSetDirectory(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  bool *arg4 = (bool *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  LinkedList result;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getDataSetDirectory.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getDataSetDirectory" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_getDataSetDirectory" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_ConvertPtr(args[2], &argp4,SWIGTYPE_p_bool, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedConnection_getDataSetDirectory" "', argument " "4"" of type '" "bool *""'"); 
  }
  arg4 = reinterpret_cast< bool * >(argp4);result = (LinkedList)IedConnection_getDataSetDirectory(arg1,arg2,(char const *)arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getDataSetDirectoryAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  IedConnection_GetDataSetDirectoryHandler arg4 = (IedConnection_GetDataSetDirectoryHandler) 0 ;
  void *arg5 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res5 ;
  uint32_t result;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getDataSetDirectoryAsync.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getDataSetDirectoryAsync" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_getDataSetDirectoryAsync" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);{
    {
      int res = SWIG_ConvertFunctionPtr(args[2], (void**)(&arg4), SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError_p_sLinkedList_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedConnection_getDataSetDirectoryAsync" "', argument " "4"" of type '" "IedConnection_GetDataSetDirectoryHandler""'"); 
      }
    }
  }
  res5 = SWIG_ConvertPtr(args[3],SWIG_as_voidptrptr(&arg5), 0, 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "IedConnection_getDataSetDirectoryAsync" "', argument " "5"" of type '" "void *""'"); 
  }result = (uint32_t)IedConnection_getDataSetDirectoryAsync(arg1,arg2,(char const *)arg3,arg4,arg5);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_writeDataSetValues(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  LinkedList arg4 = (LinkedList) 0 ;
  LinkedList *arg5 = (LinkedList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_writeDataSetValues.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_writeDataSetValues" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_writeDataSetValues" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_ConvertPtr(args[2], &argp4,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedConnection_writeDataSetValues" "', argument " "4"" of type '" "LinkedList""'"); 
  }
  arg4 = reinterpret_cast< LinkedList >(argp4);res5 = SWIG_ConvertPtr(args[3], &argp5,SWIGTYPE_p_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "IedConnection_writeDataSetValues" "', argument " "5"" of type '" "LinkedList *""'"); 
  }
  arg5 = reinterpret_cast< LinkedList * >(argp5);IedConnection_writeDataSetValues(arg1,arg2,(char const *)arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_writeDataSetValuesAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  LinkedList arg4 = (LinkedList) 0 ;
  IedConnection_WriteDataSetHandler arg5 = (IedConnection_WriteDataSetHandler) 0 ;
  void *arg6 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int res6 ;
  uint32_t result;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_writeDataSetValuesAsync.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_writeDataSetValuesAsync" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_writeDataSetValuesAsync" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_ConvertPtr(args[2], &argp4,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedConnection_writeDataSetValuesAsync" "', argument " "4"" of type '" "LinkedList""'"); 
  }
  arg4 = reinterpret_cast< LinkedList >(argp4);{
    {
      int res = SWIG_ConvertFunctionPtr(args[3], (void**)(&arg5), SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError_p_sLinkedList__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedConnection_writeDataSetValuesAsync" "', argument " "5"" of type '" "IedConnection_WriteDataSetHandler""'"); 
      }
    }
  }
  res6 = SWIG_ConvertPtr(args[4],SWIG_as_voidptrptr(&arg6), 0, 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "IedConnection_writeDataSetValuesAsync" "', argument " "6"" of type '" "void *""'"); 
  }result = (uint32_t)IedConnection_writeDataSetValuesAsync(arg1,arg2,(char const *)arg3,arg4,arg5,arg6);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientDataSet_destroy(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientDataSet arg1 = (ClientDataSet) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientDataSet_destroy.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientDataSet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientDataSet_destroy" "', argument " "1"" of type '" "ClientDataSet""'"); 
  }
  arg1 = reinterpret_cast< ClientDataSet >(argp1);ClientDataSet_destroy(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientDataSet_getValues(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientDataSet arg1 = (ClientDataSet) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientDataSet_getValues.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientDataSet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientDataSet_getValues" "', argument " "1"" of type '" "ClientDataSet""'"); 
  }
  arg1 = reinterpret_cast< ClientDataSet >(argp1);result = (MmsValue *)ClientDataSet_getValues(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientDataSet_getReference(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientDataSet arg1 = (ClientDataSet) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientDataSet_getReference.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientDataSet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientDataSet_getReference" "', argument " "1"" of type '" "ClientDataSet""'"); 
  }
  arg1 = reinterpret_cast< ClientDataSet >(argp1);result = (char *)ClientDataSet_getReference(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientDataSet_getDataSetSize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientDataSet arg1 = (ClientDataSet) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientDataSet_getDataSetSize.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientDataSet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientDataSet_getDataSetSize" "', argument " "1"" of type '" "ClientDataSet""'"); 
  }
  arg1 = reinterpret_cast< ClientDataSet >(argp1);result = (int)ClientDataSet_getDataSetSize(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlObjectClient_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  IedConnection arg2 = (IedConnection) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  ControlObjectClient result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ControlObjectClient_create" "', argument " "2"" of type '" "IedConnection""'"); 
  }
  arg2 = reinterpret_cast< IedConnection >(argp2);result = (ControlObjectClient)ControlObjectClient_create((char const *)arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlObjectClient_createEx(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  IedConnection arg2 = (IedConnection) 0 ;
  ControlModel arg3 ;
  MmsVariableSpecification *arg4 = (MmsVariableSpecification *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  ControlObjectClient result;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_createEx.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_createEx" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ControlObjectClient_createEx" "', argument " "2"" of type '" "IedConnection""'"); 
  }
  arg2 = reinterpret_cast< IedConnection >(argp2);ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ControlObjectClient_createEx" "', argument " "3"" of type '" "ControlModel""'");
  } 
  arg3 = static_cast< ControlModel >(val3);res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_MmsVariableSpecification, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ControlObjectClient_createEx" "', argument " "4"" of type '" "MmsVariableSpecification *""'"); 
  }
  arg4 = reinterpret_cast< MmsVariableSpecification * >(argp4);result = (ControlObjectClient)ControlObjectClient_createEx((char const *)arg1,arg2,arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlObjectClient_destroy(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlObjectClient arg1 = (ControlObjectClient) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_destroy.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_destroy" "', argument " "1"" of type '" "ControlObjectClient""'"); 
  }
  arg1 = reinterpret_cast< ControlObjectClient >(argp1);ControlObjectClient_destroy(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue exports_CONTROL_ACTION_TYPE_SELECT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(CONTROL_ACTION_TYPE_SELECT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_ACTION_TYPE_OPERATE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(CONTROL_ACTION_TYPE_OPERATE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_ACTION_TYPE_CANCEL_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(CONTROL_ACTION_TYPE_CANCEL));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_ControlObjectClient_getObjectReference(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlObjectClient arg1 = (ControlObjectClient) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_getObjectReference.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_getObjectReference" "', argument " "1"" of type '" "ControlObjectClient""'"); 
  }
  arg1 = reinterpret_cast< ControlObjectClient >(argp1);result = (char *)ControlObjectClient_getObjectReference(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlObjectClient_getControlModel(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlObjectClient arg1 = (ControlObjectClient) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ControlModel result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_getControlModel.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_getControlModel" "', argument " "1"" of type '" "ControlObjectClient""'"); 
  }
  arg1 = reinterpret_cast< ControlObjectClient >(argp1);result = (ControlModel)ControlObjectClient_getControlModel(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlObjectClient_setControlModel(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlObjectClient arg1 = (ControlObjectClient) 0 ;
  ControlModel arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_setControlModel.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_setControlModel" "', argument " "1"" of type '" "ControlObjectClient""'"); 
  }
  arg1 = reinterpret_cast< ControlObjectClient >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ControlObjectClient_setControlModel" "', argument " "2"" of type '" "ControlModel""'");
  } 
  arg2 = static_cast< ControlModel >(val2);ControlObjectClient_setControlModel(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlObjectClient_changeServerControlModel(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlObjectClient arg1 = (ControlObjectClient) 0 ;
  ControlModel arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_changeServerControlModel.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_changeServerControlModel" "', argument " "1"" of type '" "ControlObjectClient""'"); 
  }
  arg1 = reinterpret_cast< ControlObjectClient >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ControlObjectClient_changeServerControlModel" "', argument " "2"" of type '" "ControlModel""'");
  } 
  arg2 = static_cast< ControlModel >(val2);ControlObjectClient_changeServerControlModel(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlObjectClient_getCtlValType(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlObjectClient arg1 = (ControlObjectClient) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsType result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_getCtlValType.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_getCtlValType" "', argument " "1"" of type '" "ControlObjectClient""'"); 
  }
  arg1 = reinterpret_cast< ControlObjectClient >(argp1);result = (MmsType)ControlObjectClient_getCtlValType(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlObjectClient_getLastError(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlObjectClient arg1 = (ControlObjectClient) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_getLastError.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_getLastError" "', argument " "1"" of type '" "ControlObjectClient""'"); 
  }
  arg1 = reinterpret_cast< ControlObjectClient >(argp1);result = (IedClientError)ControlObjectClient_getLastError(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlObjectClient_operate(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlObjectClient arg1 = (ControlObjectClient) 0 ;
  MmsValue *arg2 = (MmsValue *) 0 ;
  uint64_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned long long val3 ;
  int ecode3 = 0 ;
  bool result;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_operate.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_operate" "', argument " "1"" of type '" "ControlObjectClient""'"); 
  }
  arg1 = reinterpret_cast< ControlObjectClient >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ControlObjectClient_operate" "', argument " "2"" of type '" "MmsValue *""'"); 
  }
  arg2 = reinterpret_cast< MmsValue * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_long_SS_long(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ControlObjectClient_operate" "', argument " "3"" of type '" "uint64_t""'");
  } 
  arg3 = static_cast< uint64_t >(val3);result = (bool)ControlObjectClient_operate(arg1,arg2,arg3);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlObjectClient_select(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlObjectClient arg1 = (ControlObjectClient) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_select.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_select" "', argument " "1"" of type '" "ControlObjectClient""'"); 
  }
  arg1 = reinterpret_cast< ControlObjectClient >(argp1);result = (bool)ControlObjectClient_select(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlObjectClient_selectWithValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlObjectClient arg1 = (ControlObjectClient) 0 ;
  MmsValue *arg2 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_selectWithValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_selectWithValue" "', argument " "1"" of type '" "ControlObjectClient""'"); 
  }
  arg1 = reinterpret_cast< ControlObjectClient >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ControlObjectClient_selectWithValue" "', argument " "2"" of type '" "MmsValue *""'"); 
  }
  arg2 = reinterpret_cast< MmsValue * >(argp2);result = (bool)ControlObjectClient_selectWithValue(arg1,arg2);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlObjectClient_cancel(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlObjectClient arg1 = (ControlObjectClient) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_cancel.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_cancel" "', argument " "1"" of type '" "ControlObjectClient""'"); 
  }
  arg1 = reinterpret_cast< ControlObjectClient >(argp1);result = (bool)ControlObjectClient_cancel(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlObjectClient_operateAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlObjectClient arg1 = (ControlObjectClient) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  MmsValue *arg3 = (MmsValue *) 0 ;
  uint64_t arg4 ;
  ControlObjectClient_ControlActionHandler arg5 = (ControlObjectClient_ControlActionHandler) 0 ;
  void *arg6 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned long long val4 ;
  int ecode4 = 0 ;
  int res6 ;
  uint32_t result;
  
  if (args.Length() < 6 || args.Length() > 6) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_operateAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_operateAsync" "', argument " "1"" of type '" "ControlObjectClient""'"); 
  }
  arg1 = reinterpret_cast< ControlObjectClient >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_IedClientError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ControlObjectClient_operateAsync" "', argument " "2"" of type '" "IedClientError *""'"); 
  }
  arg2 = reinterpret_cast< IedClientError * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ControlObjectClient_operateAsync" "', argument " "3"" of type '" "MmsValue *""'"); 
  }
  arg3 = reinterpret_cast< MmsValue * >(argp3);ecode4 = SWIG_AsVal_unsigned_SS_long_SS_long(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ControlObjectClient_operateAsync" "', argument " "4"" of type '" "uint64_t""'");
  } 
  arg4 = static_cast< uint64_t >(val4);{
    {
      int res = SWIG_ConvertFunctionPtr(args[4], (void**)(&arg5), SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError_enum_ControlActionType_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "ControlObjectClient_operateAsync" "', argument " "5"" of type '" "ControlObjectClient_ControlActionHandler""'"); 
      }
    }
  }
  res6 = SWIG_ConvertPtr(args[5],SWIG_as_voidptrptr(&arg6), 0, 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ControlObjectClient_operateAsync" "', argument " "6"" of type '" "void *""'"); 
  }result = (uint32_t)ControlObjectClient_operateAsync(arg1,arg2,arg3,arg4,arg5,arg6);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlObjectClient_selectAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlObjectClient arg1 = (ControlObjectClient) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  ControlObjectClient_ControlActionHandler arg3 = (ControlObjectClient_ControlActionHandler) 0 ;
  void *arg4 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res4 ;
  uint32_t result;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_selectAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_selectAsync" "', argument " "1"" of type '" "ControlObjectClient""'"); 
  }
  arg1 = reinterpret_cast< ControlObjectClient >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_IedClientError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ControlObjectClient_selectAsync" "', argument " "2"" of type '" "IedClientError *""'"); 
  }
  arg2 = reinterpret_cast< IedClientError * >(argp2);{
    {
      int res = SWIG_ConvertFunctionPtr(args[2], (void**)(&arg3), SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError_enum_ControlActionType_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "ControlObjectClient_selectAsync" "', argument " "3"" of type '" "ControlObjectClient_ControlActionHandler""'"); 
      }
    }
  }
  res4 = SWIG_ConvertPtr(args[3],SWIG_as_voidptrptr(&arg4), 0, 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ControlObjectClient_selectAsync" "', argument " "4"" of type '" "void *""'"); 
  }result = (uint32_t)ControlObjectClient_selectAsync(arg1,arg2,arg3,arg4);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlObjectClient_selectWithValueAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlObjectClient arg1 = (ControlObjectClient) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  MmsValue *arg3 = (MmsValue *) 0 ;
  ControlObjectClient_ControlActionHandler arg4 = (ControlObjectClient_ControlActionHandler) 0 ;
  void *arg5 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res5 ;
  uint32_t result;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_selectWithValueAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_selectWithValueAsync" "', argument " "1"" of type '" "ControlObjectClient""'"); 
  }
  arg1 = reinterpret_cast< ControlObjectClient >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_IedClientError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ControlObjectClient_selectWithValueAsync" "', argument " "2"" of type '" "IedClientError *""'"); 
  }
  arg2 = reinterpret_cast< IedClientError * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ControlObjectClient_selectWithValueAsync" "', argument " "3"" of type '" "MmsValue *""'"); 
  }
  arg3 = reinterpret_cast< MmsValue * >(argp3);{
    {
      int res = SWIG_ConvertFunctionPtr(args[3], (void**)(&arg4), SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError_enum_ControlActionType_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "ControlObjectClient_selectWithValueAsync" "', argument " "4"" of type '" "ControlObjectClient_ControlActionHandler""'"); 
      }
    }
  }
  res5 = SWIG_ConvertPtr(args[4],SWIG_as_voidptrptr(&arg5), 0, 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ControlObjectClient_selectWithValueAsync" "', argument " "5"" of type '" "void *""'"); 
  }result = (uint32_t)ControlObjectClient_selectWithValueAsync(arg1,arg2,arg3,arg4,arg5);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlObjectClient_cancelAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlObjectClient arg1 = (ControlObjectClient) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  ControlObjectClient_ControlActionHandler arg3 = (ControlObjectClient_ControlActionHandler) 0 ;
  void *arg4 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res4 ;
  uint32_t result;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_cancelAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_cancelAsync" "', argument " "1"" of type '" "ControlObjectClient""'"); 
  }
  arg1 = reinterpret_cast< ControlObjectClient >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_IedClientError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ControlObjectClient_cancelAsync" "', argument " "2"" of type '" "IedClientError *""'"); 
  }
  arg2 = reinterpret_cast< IedClientError * >(argp2);{
    {
      int res = SWIG_ConvertFunctionPtr(args[2], (void**)(&arg3), SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError_enum_ControlActionType_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "ControlObjectClient_cancelAsync" "', argument " "3"" of type '" "ControlObjectClient_ControlActionHandler""'"); 
      }
    }
  }
  res4 = SWIG_ConvertPtr(args[3],SWIG_as_voidptrptr(&arg4), 0, 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ControlObjectClient_cancelAsync" "', argument " "4"" of type '" "void *""'"); 
  }result = (uint32_t)ControlObjectClient_cancelAsync(arg1,arg2,arg3,arg4);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlObjectClient_getLastApplError(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlObjectClient arg1 = (ControlObjectClient) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  LastApplError result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_getLastApplError.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_getLastApplError" "', argument " "1"" of type '" "ControlObjectClient""'"); 
  }
  arg1 = reinterpret_cast< ControlObjectClient >(argp1);result = ControlObjectClient_getLastApplError(arg1);
  jsresult = SWIG_NewPointerObj((new LastApplError(result)), SWIGTYPE_p_LastApplError, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlObjectClient_setTestMode(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlObjectClient arg1 = (ControlObjectClient) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_setTestMode.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_setTestMode" "', argument " "1"" of type '" "ControlObjectClient""'"); 
  }
  arg1 = reinterpret_cast< ControlObjectClient >(argp1);ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ControlObjectClient_setTestMode" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);ControlObjectClient_setTestMode(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlObjectClient_setOrigin(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlObjectClient arg1 = (ControlObjectClient) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_setOrigin.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_setOrigin" "', argument " "1"" of type '" "ControlObjectClient""'"); 
  }
  arg1 = reinterpret_cast< ControlObjectClient >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ControlObjectClient_setOrigin" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ControlObjectClient_setOrigin" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);ControlObjectClient_setOrigin(arg1,(char const *)arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlObjectClient_useConstantT(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlObjectClient arg1 = (ControlObjectClient) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_useConstantT.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_useConstantT" "', argument " "1"" of type '" "ControlObjectClient""'"); 
  }
  arg1 = reinterpret_cast< ControlObjectClient >(argp1);ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ControlObjectClient_useConstantT" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);ControlObjectClient_useConstantT(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlObjectClient_enableInterlockCheck(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlObjectClient arg1 = (ControlObjectClient) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_enableInterlockCheck.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_enableInterlockCheck" "', argument " "1"" of type '" "ControlObjectClient""'"); 
  }
  arg1 = reinterpret_cast< ControlObjectClient >(argp1);ControlObjectClient_enableInterlockCheck(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlObjectClient_enableSynchroCheck(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlObjectClient arg1 = (ControlObjectClient) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_enableSynchroCheck.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_enableSynchroCheck" "', argument " "1"" of type '" "ControlObjectClient""'"); 
  }
  arg1 = reinterpret_cast< ControlObjectClient >(argp1);ControlObjectClient_enableSynchroCheck(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlObjectClient_setCtlNum(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlObjectClient arg1 = (ControlObjectClient) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_setCtlNum.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_setCtlNum" "', argument " "1"" of type '" "ControlObjectClient""'"); 
  }
  arg1 = reinterpret_cast< ControlObjectClient >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_char(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ControlObjectClient_setCtlNum" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = static_cast< uint8_t >(val2);ControlObjectClient_setCtlNum(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlObjectClient_setInterlockCheck(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlObjectClient arg1 = (ControlObjectClient) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_setInterlockCheck.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_setInterlockCheck" "', argument " "1"" of type '" "ControlObjectClient""'"); 
  }
  arg1 = reinterpret_cast< ControlObjectClient >(argp1);ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ControlObjectClient_setInterlockCheck" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);ControlObjectClient_setInterlockCheck(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlObjectClient_setSynchroCheck(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlObjectClient arg1 = (ControlObjectClient) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_setSynchroCheck.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_setSynchroCheck" "', argument " "1"" of type '" "ControlObjectClient""'"); 
  }
  arg1 = reinterpret_cast< ControlObjectClient >(argp1);ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ControlObjectClient_setSynchroCheck" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);ControlObjectClient_setSynchroCheck(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlObjectClient_setCommandTerminationHandler(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlObjectClient arg1 = (ControlObjectClient) 0 ;
  CommandTerminationHandler arg2 = (CommandTerminationHandler) 0 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlObjectClient_setCommandTerminationHandler.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sControlObjectClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlObjectClient_setCommandTerminationHandler" "', argument " "1"" of type '" "ControlObjectClient""'"); 
  }
  arg1 = reinterpret_cast< ControlObjectClient >(argp1);{
    {
      int res = SWIG_ConvertFunctionPtr(args[1], (void**)(&arg2), SWIGTYPE_p_f_p_void_p_sControlObjectClient__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "ControlObjectClient_setCommandTerminationHandler" "', argument " "2"" of type '" "CommandTerminationHandler""'"); 
      }
    }
  }
  res3 = SWIG_ConvertPtr(args[2],SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ControlObjectClient_setCommandTerminationHandler" "', argument " "3"" of type '" "void *""'"); 
  }ControlObjectClient_setCommandTerminationHandler(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getDeviceModelFromServer(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getDeviceModelFromServer.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getDeviceModelFromServer" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);IedConnection_getDeviceModelFromServer(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getLogicalDeviceList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  LinkedList result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getLogicalDeviceList.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getLogicalDeviceList" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);result = (LinkedList)IedConnection_getLogicalDeviceList(arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getServerDirectory(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  LinkedList result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getServerDirectory.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getServerDirectory" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);ecode3 = SWIG_AsVal_bool(args[1], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IedConnection_getServerDirectory" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);result = (LinkedList)IedConnection_getServerDirectory(arg1,arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getLogicalDeviceDirectory(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  LinkedList result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getLogicalDeviceDirectory.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getLogicalDeviceDirectory" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_getLogicalDeviceDirectory" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);result = (LinkedList)IedConnection_getLogicalDeviceDirectory(arg1,arg2,(char const *)arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue exports_ACSI_CLASS_DATA_OBJECT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ACSI_CLASS_DATA_OBJECT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ACSI_CLASS_DATA_SET_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ACSI_CLASS_DATA_SET));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ACSI_CLASS_BRCB_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ACSI_CLASS_BRCB));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ACSI_CLASS_URCB_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ACSI_CLASS_URCB));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ACSI_CLASS_LCB_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ACSI_CLASS_LCB));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ACSI_CLASS_LOG_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ACSI_CLASS_LOG));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ACSI_CLASS_SGCB_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ACSI_CLASS_SGCB));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ACSI_CLASS_GoCB_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ACSI_CLASS_GoCB));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ACSI_CLASS_GsCB_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ACSI_CLASS_GsCB));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ACSI_CLASS_MSVCB_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ACSI_CLASS_MSVCB));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ACSI_CLASS_USVCB_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ACSI_CLASS_USVCB));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_IedConnection_getLogicalNodeVariables(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  LinkedList result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getLogicalNodeVariables.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getLogicalNodeVariables" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_getLogicalNodeVariables" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);result = (LinkedList)IedConnection_getLogicalNodeVariables(arg1,arg2,(char const *)arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getLogicalNodeDirectory(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  ACSIClass arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  LinkedList result;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getLogicalNodeDirectory.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getLogicalNodeDirectory" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_getLogicalNodeDirectory" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_getLogicalNodeDirectory" "', argument " "4"" of type '" "ACSIClass""'");
  } 
  arg4 = static_cast< ACSIClass >(val4);result = (LinkedList)IedConnection_getLogicalNodeDirectory(arg1,arg2,(char const *)arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getDataDirectory(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  LinkedList result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getDataDirectory.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getDataDirectory" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_getDataDirectory" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);result = (LinkedList)IedConnection_getDataDirectory(arg1,arg2,(char const *)arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getDataDirectoryFC(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  LinkedList result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getDataDirectoryFC.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getDataDirectoryFC" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_getDataDirectoryFC" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);result = (LinkedList)IedConnection_getDataDirectoryFC(arg1,arg2,(char const *)arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getDataDirectoryByFC(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  FunctionalConstraint arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  LinkedList result;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getDataDirectoryByFC.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getDataDirectoryByFC" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_getDataDirectoryByFC" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_getDataDirectoryByFC" "', argument " "4"" of type '" "FunctionalConstraint""'");
  } 
  arg4 = static_cast< FunctionalConstraint >(val4);result = (LinkedList)IedConnection_getDataDirectoryByFC(arg1,arg2,(char const *)arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getVariableSpecification(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  FunctionalConstraint arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  MmsVariableSpecification *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getVariableSpecification.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getVariableSpecification" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_getVariableSpecification" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_getVariableSpecification" "', argument " "4"" of type '" "FunctionalConstraint""'");
  } 
  arg4 = static_cast< FunctionalConstraint >(val4);result = (MmsVariableSpecification *)IedConnection_getVariableSpecification(arg1,arg2,(char const *)arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_MmsVariableSpecification, 0 |  0 );
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getLogicalDeviceVariables(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  LinkedList result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getLogicalDeviceVariables.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getLogicalDeviceVariables" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_getLogicalDeviceVariables" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);result = (LinkedList)IedConnection_getLogicalDeviceVariables(arg1,arg2,(char const *)arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getLogicalDeviceDataSets(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  LinkedList result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getLogicalDeviceDataSets.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getLogicalDeviceDataSets" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_getLogicalDeviceDataSets" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);result = (LinkedList)IedConnection_getLogicalDeviceDataSets(arg1,arg2,(char const *)arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getServerDirectoryAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  LinkedList arg4 = (LinkedList) 0 ;
  IedConnection_GetNameListHandler arg5 = (IedConnection_GetNameListHandler) 0 ;
  void *arg6 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int res6 ;
  uint32_t result;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getServerDirectoryAsync.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getServerDirectoryAsync" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_getServerDirectoryAsync" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_ConvertPtr(args[2], &argp4,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedConnection_getServerDirectoryAsync" "', argument " "4"" of type '" "LinkedList""'"); 
  }
  arg4 = reinterpret_cast< LinkedList >(argp4);{
    {
      int res = SWIG_ConvertFunctionPtr(args[3], (void**)(&arg5), SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError_p_sLinkedList_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedConnection_getServerDirectoryAsync" "', argument " "5"" of type '" "IedConnection_GetNameListHandler""'"); 
      }
    }
  }
  res6 = SWIG_ConvertPtr(args[4],SWIG_as_voidptrptr(&arg6), 0, 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "IedConnection_getServerDirectoryAsync" "', argument " "6"" of type '" "void *""'"); 
  }result = (uint32_t)IedConnection_getServerDirectoryAsync(arg1,arg2,(char const *)arg3,arg4,arg5,arg6);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getLogicalDeviceVariablesAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  LinkedList arg5 = (LinkedList) 0 ;
  IedConnection_GetNameListHandler arg6 = (IedConnection_GetNameListHandler) 0 ;
  void *arg7 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  int res7 ;
  uint32_t result;
  
  if (args.Length() < 6 || args.Length() > 6) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getLogicalDeviceVariablesAsync.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getLogicalDeviceVariablesAsync" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_getLogicalDeviceVariablesAsync" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[2], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedConnection_getLogicalDeviceVariablesAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_ConvertPtr(args[3], &argp5,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "IedConnection_getLogicalDeviceVariablesAsync" "', argument " "5"" of type '" "LinkedList""'"); 
  }
  arg5 = reinterpret_cast< LinkedList >(argp5);{
    {
      int res = SWIG_ConvertFunctionPtr(args[4], (void**)(&arg6), SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError_p_sLinkedList_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedConnection_getLogicalDeviceVariablesAsync" "', argument " "6"" of type '" "IedConnection_GetNameListHandler""'"); 
      }
    }
  }
  res7 = SWIG_ConvertPtr(args[5],SWIG_as_voidptrptr(&arg7), 0, 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "IedConnection_getLogicalDeviceVariablesAsync" "', argument " "7"" of type '" "void *""'"); 
  }result = (uint32_t)IedConnection_getLogicalDeviceVariablesAsync(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,arg6,arg7);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getLogicalDeviceDataSetsAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  LinkedList arg5 = (LinkedList) 0 ;
  IedConnection_GetNameListHandler arg6 = (IedConnection_GetNameListHandler) 0 ;
  void *arg7 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  int res7 ;
  uint32_t result;
  
  if (args.Length() < 6 || args.Length() > 6) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getLogicalDeviceDataSetsAsync.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getLogicalDeviceDataSetsAsync" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_getLogicalDeviceDataSetsAsync" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[2], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedConnection_getLogicalDeviceDataSetsAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_ConvertPtr(args[3], &argp5,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "IedConnection_getLogicalDeviceDataSetsAsync" "', argument " "5"" of type '" "LinkedList""'"); 
  }
  arg5 = reinterpret_cast< LinkedList >(argp5);{
    {
      int res = SWIG_ConvertFunctionPtr(args[4], (void**)(&arg6), SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError_p_sLinkedList_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedConnection_getLogicalDeviceDataSetsAsync" "', argument " "6"" of type '" "IedConnection_GetNameListHandler""'"); 
      }
    }
  }
  res7 = SWIG_ConvertPtr(args[5],SWIG_as_voidptrptr(&arg7), 0, 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "IedConnection_getLogicalDeviceDataSetsAsync" "', argument " "7"" of type '" "void *""'"); 
  }result = (uint32_t)IedConnection_getLogicalDeviceDataSetsAsync(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,arg6,arg7);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getVariableSpecificationAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  FunctionalConstraint arg4 ;
  IedConnection_GetVariableSpecificationHandler arg5 = (IedConnection_GetVariableSpecificationHandler) 0 ;
  void *arg6 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int res6 ;
  uint32_t result;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getVariableSpecificationAsync.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getVariableSpecificationAsync" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_getVariableSpecificationAsync" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_int(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_getVariableSpecificationAsync" "', argument " "4"" of type '" "FunctionalConstraint""'");
  } 
  arg4 = static_cast< FunctionalConstraint >(val4);{
    {
      int res = SWIG_ConvertFunctionPtr(args[3], (void**)(&arg5), SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError_p_MmsVariableSpecification__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedConnection_getVariableSpecificationAsync" "', argument " "5"" of type '" "IedConnection_GetVariableSpecificationHandler""'"); 
      }
    }
  }
  res6 = SWIG_ConvertPtr(args[4],SWIG_as_voidptrptr(&arg6), 0, 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "IedConnection_getVariableSpecificationAsync" "', argument " "6"" of type '" "void *""'"); 
  }result = (uint32_t)IedConnection_getVariableSpecificationAsync(arg1,arg2,(char const *)arg3,arg4,arg5,arg6);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_queryLogByTime(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  uint64_t arg4 ;
  uint64_t arg5 ;
  bool *arg6 = (bool *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  unsigned long long val4 ;
  int ecode4 = 0 ;
  unsigned long long val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  LinkedList result;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_queryLogByTime.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_queryLogByTime" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_queryLogByTime" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_unsigned_SS_long_SS_long(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_queryLogByTime" "', argument " "4"" of type '" "uint64_t""'");
  } 
  arg4 = static_cast< uint64_t >(val4);ecode5 = SWIG_AsVal_unsigned_SS_long_SS_long(args[3], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "IedConnection_queryLogByTime" "', argument " "5"" of type '" "uint64_t""'");
  } 
  arg5 = static_cast< uint64_t >(val5);res6 = SWIG_ConvertPtr(args[4], &argp6,SWIGTYPE_p_bool, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "IedConnection_queryLogByTime" "', argument " "6"" of type '" "bool *""'"); 
  }
  arg6 = reinterpret_cast< bool * >(argp6);result = (LinkedList)IedConnection_queryLogByTime(arg1,arg2,(char const *)arg3,arg4,arg5,arg6);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_queryLogAfter(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  MmsValue *arg4 = (MmsValue *) 0 ;
  uint64_t arg5 ;
  bool *arg6 = (bool *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  unsigned long long val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  LinkedList result;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_queryLogAfter.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_queryLogAfter" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_queryLogAfter" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_ConvertPtr(args[2], &argp4,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedConnection_queryLogAfter" "', argument " "4"" of type '" "MmsValue *""'"); 
  }
  arg4 = reinterpret_cast< MmsValue * >(argp4);ecode5 = SWIG_AsVal_unsigned_SS_long_SS_long(args[3], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "IedConnection_queryLogAfter" "', argument " "5"" of type '" "uint64_t""'");
  } 
  arg5 = static_cast< uint64_t >(val5);res6 = SWIG_ConvertPtr(args[4], &argp6,SWIGTYPE_p_bool, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "IedConnection_queryLogAfter" "', argument " "6"" of type '" "bool *""'"); 
  }
  arg6 = reinterpret_cast< bool * >(argp6);result = (LinkedList)IedConnection_queryLogAfter(arg1,arg2,(char const *)arg3,arg4,arg5,arg6);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_queryLogByTimeAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  uint64_t arg4 ;
  uint64_t arg5 ;
  IedConnection_QueryLogHandler arg6 = (IedConnection_QueryLogHandler) 0 ;
  void *arg7 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  unsigned long long val4 ;
  int ecode4 = 0 ;
  unsigned long long val5 ;
  int ecode5 = 0 ;
  int res7 ;
  uint32_t result;
  
  if (args.Length() < 6 || args.Length() > 6) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_queryLogByTimeAsync.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_queryLogByTimeAsync" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_queryLogByTimeAsync" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_unsigned_SS_long_SS_long(args[2], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedConnection_queryLogByTimeAsync" "', argument " "4"" of type '" "uint64_t""'");
  } 
  arg4 = static_cast< uint64_t >(val4);ecode5 = SWIG_AsVal_unsigned_SS_long_SS_long(args[3], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "IedConnection_queryLogByTimeAsync" "', argument " "5"" of type '" "uint64_t""'");
  } 
  arg5 = static_cast< uint64_t >(val5);{
    {
      int res = SWIG_ConvertFunctionPtr(args[4], (void**)(&arg6), SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError_p_sLinkedList_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedConnection_queryLogByTimeAsync" "', argument " "6"" of type '" "IedConnection_QueryLogHandler""'"); 
      }
    }
  }
  res7 = SWIG_ConvertPtr(args[5],SWIG_as_voidptrptr(&arg7), 0, 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "IedConnection_queryLogByTimeAsync" "', argument " "7"" of type '" "void *""'"); 
  }result = (uint32_t)IedConnection_queryLogByTimeAsync(arg1,arg2,(char const *)arg3,arg4,arg5,arg6,arg7);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_queryLogAfterAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  MmsValue *arg4 = (MmsValue *) 0 ;
  uint64_t arg5 ;
  IedConnection_QueryLogHandler arg6 = (IedConnection_QueryLogHandler) 0 ;
  void *arg7 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  unsigned long long val5 ;
  int ecode5 = 0 ;
  int res7 ;
  uint32_t result;
  
  if (args.Length() < 6 || args.Length() > 6) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_queryLogAfterAsync.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_queryLogAfterAsync" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_queryLogAfterAsync" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_ConvertPtr(args[2], &argp4,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedConnection_queryLogAfterAsync" "', argument " "4"" of type '" "MmsValue *""'"); 
  }
  arg4 = reinterpret_cast< MmsValue * >(argp4);ecode5 = SWIG_AsVal_unsigned_SS_long_SS_long(args[3], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "IedConnection_queryLogAfterAsync" "', argument " "5"" of type '" "uint64_t""'");
  } 
  arg5 = static_cast< uint64_t >(val5);{
    {
      int res = SWIG_ConvertFunctionPtr(args[4], (void**)(&arg6), SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError_p_sLinkedList_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedConnection_queryLogAfterAsync" "', argument " "6"" of type '" "IedConnection_QueryLogHandler""'"); 
      }
    }
  }
  res7 = SWIG_ConvertPtr(args[5],SWIG_as_voidptrptr(&arg7), 0, 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "IedConnection_queryLogAfterAsync" "', argument " "7"" of type '" "void *""'"); 
  }result = (uint32_t)IedConnection_queryLogAfterAsync(arg1,arg2,(char const *)arg3,arg4,arg5,arg6,arg7);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_FileDirectoryEntry_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  uint32_t arg2 ;
  uint64_t arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned long long val3 ;
  int ecode3 = 0 ;
  FileDirectoryEntry result;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_FileDirectoryEntry_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileDirectoryEntry_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);ecode2 = SWIG_AsVal_unsigned_SS_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileDirectoryEntry_create" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = static_cast< uint32_t >(val2);ecode3 = SWIG_AsVal_unsigned_SS_long_SS_long(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FileDirectoryEntry_create" "', argument " "3"" of type '" "uint64_t""'");
  } 
  arg3 = static_cast< uint64_t >(val3);result = (FileDirectoryEntry)FileDirectoryEntry_create((char const *)arg1,arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sFileDirectoryEntry, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_FileDirectoryEntry_destroy(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  FileDirectoryEntry arg1 = (FileDirectoryEntry) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_FileDirectoryEntry_destroy.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sFileDirectoryEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileDirectoryEntry_destroy" "', argument " "1"" of type '" "FileDirectoryEntry""'"); 
  }
  arg1 = reinterpret_cast< FileDirectoryEntry >(argp1);FileDirectoryEntry_destroy(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_FileDirectoryEntry_getFileName(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  FileDirectoryEntry arg1 = (FileDirectoryEntry) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_FileDirectoryEntry_getFileName.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sFileDirectoryEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileDirectoryEntry_getFileName" "', argument " "1"" of type '" "FileDirectoryEntry""'"); 
  }
  arg1 = reinterpret_cast< FileDirectoryEntry >(argp1);result = (char *)FileDirectoryEntry_getFileName(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_FileDirectoryEntry_getFileSize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  FileDirectoryEntry arg1 = (FileDirectoryEntry) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_FileDirectoryEntry_getFileSize.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sFileDirectoryEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileDirectoryEntry_getFileSize" "', argument " "1"" of type '" "FileDirectoryEntry""'"); 
  }
  arg1 = reinterpret_cast< FileDirectoryEntry >(argp1);result = (uint32_t)FileDirectoryEntry_getFileSize(arg1);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_FileDirectoryEntry_getLastModified(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  FileDirectoryEntry arg1 = (FileDirectoryEntry) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint64_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_FileDirectoryEntry_getLastModified.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sFileDirectoryEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileDirectoryEntry_getLastModified" "', argument " "1"" of type '" "FileDirectoryEntry""'"); 
  }
  arg1 = reinterpret_cast< FileDirectoryEntry >(argp1);result = (uint64_t)FileDirectoryEntry_getLastModified(arg1);
  jsresult = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getFileDirectory(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  LinkedList result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getFileDirectory.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getFileDirectory" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_getFileDirectory" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);result = (LinkedList)IedConnection_getFileDirectory(arg1,arg2,(char const *)arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getFileDirectoryEx(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  bool *arg5 = (bool *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  LinkedList result;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getFileDirectoryEx.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getFileDirectoryEx" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_getFileDirectoryEx" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[2], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedConnection_getFileDirectoryEx" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_ConvertPtr(args[3], &argp5,SWIGTYPE_p_bool, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "IedConnection_getFileDirectoryEx" "', argument " "5"" of type '" "bool *""'"); 
  }
  arg5 = reinterpret_cast< bool * >(argp5);result = (LinkedList)IedConnection_getFileDirectoryEx(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getFileDirectoryAsyncEx(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  IedConnection_FileDirectoryEntryHandler arg5 = (IedConnection_FileDirectoryEntryHandler) 0 ;
  void *arg6 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res6 ;
  uint32_t result;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getFileDirectoryAsyncEx.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getFileDirectoryAsyncEx" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_getFileDirectoryAsyncEx" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[2], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedConnection_getFileDirectoryAsyncEx" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);{
    {
      int res = SWIG_ConvertFunctionPtr(args[3], (void**)(&arg5), SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError_p_char_unsigned_int_unsigned_long_long_bool__bool);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedConnection_getFileDirectoryAsyncEx" "', argument " "5"" of type '" "IedConnection_FileDirectoryEntryHandler""'"); 
      }
    }
  }
  res6 = SWIG_ConvertPtr(args[4],SWIG_as_voidptrptr(&arg6), 0, 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "IedConnection_getFileDirectoryAsyncEx" "', argument " "6"" of type '" "void *""'"); 
  }result = (uint32_t)IedConnection_getFileDirectoryAsyncEx(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,arg6);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getFile(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  IedClientGetFileHandler arg4 = (IedClientGetFileHandler) 0 ;
  void *arg5 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res5 ;
  uint32_t result;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getFile.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getFile" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_getFile" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);{
    {
      int res = SWIG_ConvertFunctionPtr(args[2], (void**)(&arg4), SWIGTYPE_p_f_p_void_p_unsigned_char_unsigned_int__bool);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedConnection_getFile" "', argument " "4"" of type '" "IedClientGetFileHandler""'"); 
      }
    }
  }
  res5 = SWIG_ConvertPtr(args[3],SWIG_as_voidptrptr(&arg5), 0, 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "IedConnection_getFile" "', argument " "5"" of type '" "void *""'"); 
  }result = (uint32_t)IedConnection_getFile(arg1,arg2,(char const *)arg3,arg4,arg5);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_getFileAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  IedConnection_GetFileAsyncHandler arg4 = (IedConnection_GetFileAsyncHandler) 0 ;
  void *arg5 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res5 ;
  uint32_t result;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_getFileAsync.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_getFileAsync" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_getFileAsync" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);{
    {
      int res = SWIG_ConvertFunctionPtr(args[2], (void**)(&arg4), SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError_unsigned_int_p_unsigned_char_unsigned_int_bool__bool);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedConnection_getFileAsync" "', argument " "4"" of type '" "IedConnection_GetFileAsyncHandler""'"); 
      }
    }
  }
  res5 = SWIG_ConvertPtr(args[3],SWIG_as_voidptrptr(&arg5), 0, 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "IedConnection_getFileAsync" "', argument " "5"" of type '" "void *""'"); 
  }result = (uint32_t)IedConnection_getFileAsync(arg1,arg2,(char const *)arg3,arg4,arg5);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_setFilestoreBasepath(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_setFilestoreBasepath.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_setFilestoreBasepath" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedConnection_setFilestoreBasepath" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);IedConnection_setFilestoreBasepath(arg1,(char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_setFile(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_setFile.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_setFile" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_setFile" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[2], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedConnection_setFile" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);IedConnection_setFile(arg1,arg2,(char const *)arg3,(char const *)arg4);
  jsresult = SWIGV8_UNDEFINED();
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_setFileAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  IedConnection_GenericServiceHandler arg5 = (IedConnection_GenericServiceHandler) 0 ;
  void *arg6 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res6 ;
  uint32_t result;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_setFileAsync.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_setFileAsync" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_setFileAsync" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[2], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedConnection_setFileAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);{
    {
      int res = SWIG_ConvertFunctionPtr(args[3], (void**)(&arg5), SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedConnection_setFileAsync" "', argument " "5"" of type '" "IedConnection_GenericServiceHandler""'"); 
      }
    }
  }
  res6 = SWIG_ConvertPtr(args[4],SWIG_as_voidptrptr(&arg6), 0, 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "IedConnection_setFileAsync" "', argument " "6"" of type '" "void *""'"); 
  }result = (uint32_t)IedConnection_setFileAsync(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,arg6);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_deleteFile(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_deleteFile.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_deleteFile" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_deleteFile" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);IedConnection_deleteFile(arg1,arg2,(char const *)arg3);
  jsresult = SWIGV8_UNDEFINED();
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedConnection_deleteFileAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedConnection arg1 = (IedConnection) 0 ;
  IedClientError *arg2 = (IedClientError *) 0 ;
  char *arg3 = (char *) 0 ;
  IedConnection_GenericServiceHandler arg4 = (IedConnection_GenericServiceHandler) 0 ;
  void *arg5 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedClientError temp2 ;
  int res2 = SWIG_TMPOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res5 ;
  uint32_t result;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedConnection_deleteFileAsync.");
  
  arg2 = &temp2;
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedConnection_deleteFileAsync" "', argument " "1"" of type '" "IedConnection""'"); 
  }
  arg1 = reinterpret_cast< IedConnection >(argp1);res3 = SWIG_AsCharPtrAndSize(args[1], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedConnection_deleteFileAsync" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);{
    {
      int res = SWIG_ConvertFunctionPtr(args[2], (void**)(&arg4), SWIGTYPE_p_f_unsigned_int_p_void_enum_IedClientError__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedConnection_deleteFileAsync" "', argument " "4"" of type '" "IedConnection_GenericServiceHandler""'"); 
      }
    }
  }
  res5 = SWIG_ConvertPtr(args[3],SWIG_as_voidptrptr(&arg5), 0, 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "IedConnection_deleteFileAsync" "', argument " "5"" of type '" "void *""'"); 
  }result = (uint32_t)IedConnection_deleteFileAsync(arg1,arg2,(char const *)arg3,arg4,arg5);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsTmpObj(res2)) {
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_From_int((*arg2)));
  } else {
    int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    jsresult = SWIGV8_AppendOutput(jsresult, SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_IedClientError, new_flags));
  }
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue exports_ACSE_AUTH_NONE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ACSE_AUTH_NONE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ACSE_AUTH_PASSWORD_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ACSE_AUTH_PASSWORD));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ACSE_AUTH_CERTIFICATE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ACSE_AUTH_CERTIFICATE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ACSE_AUTH_TLS_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ACSE_AUTH_TLS));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sAcseAuthenticationParameter_mechanism_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sAcseAuthenticationParameter *arg1 = (sAcseAuthenticationParameter *) 0 ;
  AcseAuthenticationMechanism arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sAcseAuthenticationParameter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sAcseAuthenticationParameter_mechanism_set" "', argument " "1"" of type '" "sAcseAuthenticationParameter *""'"); 
  }
  arg1 = reinterpret_cast< sAcseAuthenticationParameter * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sAcseAuthenticationParameter_mechanism_set" "', argument " "2"" of type '" "AcseAuthenticationMechanism""'");
  } 
  arg2 = static_cast< AcseAuthenticationMechanism >(val2);if (arg1) (arg1)->mechanism = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sAcseAuthenticationParameter_mechanism_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sAcseAuthenticationParameter *arg1 = (sAcseAuthenticationParameter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  AcseAuthenticationMechanism result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sAcseAuthenticationParameter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sAcseAuthenticationParameter_mechanism_get" "', argument " "1"" of type '" "sAcseAuthenticationParameter *""'"); 
  }
  arg1 = reinterpret_cast< sAcseAuthenticationParameter * >(argp1);result = (AcseAuthenticationMechanism) ((arg1)->mechanism);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_sAcseAuthenticationParameter(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  sAcseAuthenticationParameter *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_sAcseAuthenticationParameter.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_sAcseAuthenticationParameter.");
  result = (sAcseAuthenticationParameter *)new sAcseAuthenticationParameter();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_sAcseAuthenticationParameter, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_sAcseAuthenticationParameter(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    sAcseAuthenticationParameter * arg1 = (sAcseAuthenticationParameter *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue _wrap_AcseAuthenticationParameter_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  AcseAuthenticationParameter result;
  
  if (args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_AcseAuthenticationParameter_create.");
  
  result = (AcseAuthenticationParameter)AcseAuthenticationParameter_create();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sAcseAuthenticationParameter, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_AcseAuthenticationParameter_destroy(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  AcseAuthenticationParameter arg1 = (AcseAuthenticationParameter) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_AcseAuthenticationParameter_destroy.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sAcseAuthenticationParameter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AcseAuthenticationParameter_destroy" "', argument " "1"" of type '" "AcseAuthenticationParameter""'"); 
  }
  arg1 = reinterpret_cast< AcseAuthenticationParameter >(argp1);AcseAuthenticationParameter_destroy(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_AcseAuthenticationParameter_setAuthMechanism(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  AcseAuthenticationParameter arg1 = (AcseAuthenticationParameter) 0 ;
  AcseAuthenticationMechanism arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_AcseAuthenticationParameter_setAuthMechanism.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sAcseAuthenticationParameter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AcseAuthenticationParameter_setAuthMechanism" "', argument " "1"" of type '" "AcseAuthenticationParameter""'"); 
  }
  arg1 = reinterpret_cast< AcseAuthenticationParameter >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AcseAuthenticationParameter_setAuthMechanism" "', argument " "2"" of type '" "AcseAuthenticationMechanism""'");
  } 
  arg2 = static_cast< AcseAuthenticationMechanism >(val2);AcseAuthenticationParameter_setAuthMechanism(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_AcseAuthenticationParameter_setPassword(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  AcseAuthenticationParameter arg1 = (AcseAuthenticationParameter) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_AcseAuthenticationParameter_setPassword.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sAcseAuthenticationParameter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AcseAuthenticationParameter_setPassword" "', argument " "1"" of type '" "AcseAuthenticationParameter""'"); 
  }
  arg1 = reinterpret_cast< AcseAuthenticationParameter >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AcseAuthenticationParameter_setPassword" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);AcseAuthenticationParameter_setPassword(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_TSelector_size_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  TSelector *arg1 = (TSelector *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_TSelector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TSelector_size_set" "', argument " "1"" of type '" "TSelector *""'"); 
  }
  arg1 = reinterpret_cast< TSelector * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_char(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TSelector_size_set" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = static_cast< uint8_t >(val2);if (arg1) (arg1)->size = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_TSelector_size_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  TSelector *arg1 = (TSelector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_TSelector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TSelector_size_get" "', argument " "1"" of type '" "TSelector *""'"); 
  }
  arg1 = reinterpret_cast< TSelector * >(argp1);result = (uint8_t) ((arg1)->size);
  jsresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_TSelector_value_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  TSelector *arg1 = (TSelector *) 0 ;
  uint8_t *arg2 = (uint8_t *) (uint8_t *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_TSelector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TSelector_value_set" "', argument " "1"" of type '" "TSelector *""'"); 
  }
  arg1 = reinterpret_cast< TSelector * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TSelector_value_set" "', argument " "2"" of type '" "uint8_t [4]""'"); 
  } 
  arg2 = reinterpret_cast< uint8_t * >(argp2);{
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)4; ++ii) *(uint8_t *)&arg1->value[ii] = *((uint8_t *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""value""' of type '""uint8_t [4]""'");
    }
  }
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_TSelector_value_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  TSelector *arg1 = (TSelector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_TSelector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TSelector_value_get" "', argument " "1"" of type '" "TSelector *""'"); 
  }
  arg1 = reinterpret_cast< TSelector * >(argp1);result = (uint8_t *)(uint8_t *) ((arg1)->value);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_TSelector(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  TSelector *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_TSelector.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_TSelector.");
  result = (TSelector *)new TSelector();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_TSelector, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_TSelector(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    TSelector * arg1 = (TSelector *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_SSelector_size_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  SSelector *arg1 = (SSelector *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_SSelector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SSelector_size_set" "', argument " "1"" of type '" "SSelector *""'"); 
  }
  arg1 = reinterpret_cast< SSelector * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_char(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SSelector_size_set" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = static_cast< uint8_t >(val2);if (arg1) (arg1)->size = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_SSelector_size_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  SSelector *arg1 = (SSelector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_SSelector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SSelector_size_get" "', argument " "1"" of type '" "SSelector *""'"); 
  }
  arg1 = reinterpret_cast< SSelector * >(argp1);result = (uint8_t) ((arg1)->size);
  jsresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_SSelector_value_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  SSelector *arg1 = (SSelector *) 0 ;
  uint8_t *arg2 = (uint8_t *) (uint8_t *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_SSelector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SSelector_value_set" "', argument " "1"" of type '" "SSelector *""'"); 
  }
  arg1 = reinterpret_cast< SSelector * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SSelector_value_set" "', argument " "2"" of type '" "uint8_t [16]""'"); 
  } 
  arg2 = reinterpret_cast< uint8_t * >(argp2);{
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)16; ++ii) *(uint8_t *)&arg1->value[ii] = *((uint8_t *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""value""' of type '""uint8_t [16]""'");
    }
  }
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_SSelector_value_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  SSelector *arg1 = (SSelector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_SSelector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SSelector_value_get" "', argument " "1"" of type '" "SSelector *""'"); 
  }
  arg1 = reinterpret_cast< SSelector * >(argp1);result = (uint8_t *)(uint8_t *) ((arg1)->value);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_SSelector(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  SSelector *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_SSelector.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_SSelector.");
  result = (SSelector *)new SSelector();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_SSelector, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_SSelector(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    SSelector * arg1 = (SSelector *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_PSelector_size_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  PSelector *arg1 = (PSelector *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_PSelector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSelector_size_set" "', argument " "1"" of type '" "PSelector *""'"); 
  }
  arg1 = reinterpret_cast< PSelector * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_char(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PSelector_size_set" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = static_cast< uint8_t >(val2);if (arg1) (arg1)->size = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_PSelector_size_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  PSelector *arg1 = (PSelector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_PSelector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSelector_size_get" "', argument " "1"" of type '" "PSelector *""'"); 
  }
  arg1 = reinterpret_cast< PSelector * >(argp1);result = (uint8_t) ((arg1)->size);
  jsresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_PSelector_value_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  PSelector *arg1 = (PSelector *) 0 ;
  uint8_t *arg2 = (uint8_t *) (uint8_t *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_PSelector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSelector_value_set" "', argument " "1"" of type '" "PSelector *""'"); 
  }
  arg1 = reinterpret_cast< PSelector * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PSelector_value_set" "', argument " "2"" of type '" "uint8_t [16]""'"); 
  } 
  arg2 = reinterpret_cast< uint8_t * >(argp2);{
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)16; ++ii) *(uint8_t *)&arg1->value[ii] = *((uint8_t *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""value""' of type '""uint8_t [16]""'");
    }
  }
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_PSelector_value_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  PSelector *arg1 = (PSelector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_PSelector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PSelector_value_get" "', argument " "1"" of type '" "PSelector *""'"); 
  }
  arg1 = reinterpret_cast< PSelector * >(argp1);result = (uint8_t *)(uint8_t *) ((arg1)->value);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_PSelector(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  PSelector *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_PSelector.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_PSelector.");
  result = (PSelector *)new PSelector();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_PSelector, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_PSelector(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    PSelector * arg1 = (PSelector *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_sIsoConnectionParameters_acseAuthParameter_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  AcseAuthenticationParameter arg2 = (AcseAuthenticationParameter) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_acseAuthParameter_set" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sAcseAuthenticationParameter, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sIsoConnectionParameters_acseAuthParameter_set" "', argument " "2"" of type '" "AcseAuthenticationParameter""'"); 
  }
  arg2 = reinterpret_cast< AcseAuthenticationParameter >(argp2);if (arg1) (arg1)->acseAuthParameter = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIsoConnectionParameters_acseAuthParameter_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  AcseAuthenticationParameter result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_acseAuthParameter_get" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);result = (AcseAuthenticationParameter) ((arg1)->acseAuthParameter);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sAcseAuthenticationParameter, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIsoConnectionParameters_hostname_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_hostname_set" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sIsoConnectionParameters_hostname_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->hostname = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->hostname = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIsoConnectionParameters_hostname_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_hostname_get" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);result = (char *) ((arg1)->hostname);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIsoConnectionParameters_tcpPort_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_tcpPort_set" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sIsoConnectionParameters_tcpPort_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);if (arg1) (arg1)->tcpPort = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIsoConnectionParameters_tcpPort_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_tcpPort_get" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);result = (int) ((arg1)->tcpPort);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIsoConnectionParameters_remoteApTitle_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  uint8_t *arg2 = (uint8_t *) (uint8_t *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_remoteApTitle_set" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sIsoConnectionParameters_remoteApTitle_set" "', argument " "2"" of type '" "uint8_t [10]""'"); 
  } 
  arg2 = reinterpret_cast< uint8_t * >(argp2);{
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)10; ++ii) *(uint8_t *)&arg1->remoteApTitle[ii] = *((uint8_t *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""remoteApTitle""' of type '""uint8_t [10]""'");
    }
  }
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIsoConnectionParameters_remoteApTitle_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_remoteApTitle_get" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);result = (uint8_t *)(uint8_t *) ((arg1)->remoteApTitle);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIsoConnectionParameters_remoteApTitleLen_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_remoteApTitleLen_set" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sIsoConnectionParameters_remoteApTitleLen_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);if (arg1) (arg1)->remoteApTitleLen = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIsoConnectionParameters_remoteApTitleLen_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_remoteApTitleLen_get" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);result = (int) ((arg1)->remoteApTitleLen);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIsoConnectionParameters_remoteAEQualifier_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_remoteAEQualifier_set" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sIsoConnectionParameters_remoteAEQualifier_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);if (arg1) (arg1)->remoteAEQualifier = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIsoConnectionParameters_remoteAEQualifier_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_remoteAEQualifier_get" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);result = (int) ((arg1)->remoteAEQualifier);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIsoConnectionParameters_remotePSelector_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  PSelector *arg2 = (PSelector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_remotePSelector_set" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_PSelector, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sIsoConnectionParameters_remotePSelector_set" "', argument " "2"" of type '" "PSelector *""'"); 
  }
  arg2 = reinterpret_cast< PSelector * >(argp2);if (arg1) (arg1)->remotePSelector = *arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIsoConnectionParameters_remotePSelector_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PSelector *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_remotePSelector_get" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);result = (PSelector *)& ((arg1)->remotePSelector);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PSelector, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIsoConnectionParameters_remoteSSelector_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  SSelector *arg2 = (SSelector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_remoteSSelector_set" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_SSelector, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sIsoConnectionParameters_remoteSSelector_set" "', argument " "2"" of type '" "SSelector *""'"); 
  }
  arg2 = reinterpret_cast< SSelector * >(argp2);if (arg1) (arg1)->remoteSSelector = *arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIsoConnectionParameters_remoteSSelector_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  SSelector *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_remoteSSelector_get" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);result = (SSelector *)& ((arg1)->remoteSSelector);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_SSelector, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIsoConnectionParameters_remoteTSelector_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  TSelector *arg2 = (TSelector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_remoteTSelector_set" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_TSelector, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sIsoConnectionParameters_remoteTSelector_set" "', argument " "2"" of type '" "TSelector *""'"); 
  }
  arg2 = reinterpret_cast< TSelector * >(argp2);if (arg1) (arg1)->remoteTSelector = *arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIsoConnectionParameters_remoteTSelector_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  TSelector *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_remoteTSelector_get" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);result = (TSelector *)& ((arg1)->remoteTSelector);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TSelector, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIsoConnectionParameters_localApTitle_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  uint8_t *arg2 = (uint8_t *) (uint8_t *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_localApTitle_set" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sIsoConnectionParameters_localApTitle_set" "', argument " "2"" of type '" "uint8_t [10]""'"); 
  } 
  arg2 = reinterpret_cast< uint8_t * >(argp2);{
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)10; ++ii) *(uint8_t *)&arg1->localApTitle[ii] = *((uint8_t *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""localApTitle""' of type '""uint8_t [10]""'");
    }
  }
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIsoConnectionParameters_localApTitle_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_localApTitle_get" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);result = (uint8_t *)(uint8_t *) ((arg1)->localApTitle);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIsoConnectionParameters_localApTitleLen_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_localApTitleLen_set" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sIsoConnectionParameters_localApTitleLen_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);if (arg1) (arg1)->localApTitleLen = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIsoConnectionParameters_localApTitleLen_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_localApTitleLen_get" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);result = (int) ((arg1)->localApTitleLen);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIsoConnectionParameters_localAEQualifier_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_localAEQualifier_set" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sIsoConnectionParameters_localAEQualifier_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);if (arg1) (arg1)->localAEQualifier = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIsoConnectionParameters_localAEQualifier_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_localAEQualifier_get" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);result = (int) ((arg1)->localAEQualifier);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIsoConnectionParameters_localPSelector_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  PSelector *arg2 = (PSelector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_localPSelector_set" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_PSelector, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sIsoConnectionParameters_localPSelector_set" "', argument " "2"" of type '" "PSelector *""'"); 
  }
  arg2 = reinterpret_cast< PSelector * >(argp2);if (arg1) (arg1)->localPSelector = *arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIsoConnectionParameters_localPSelector_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PSelector *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_localPSelector_get" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);result = (PSelector *)& ((arg1)->localPSelector);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PSelector, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIsoConnectionParameters_localSSelector_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  SSelector *arg2 = (SSelector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_localSSelector_set" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_SSelector, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sIsoConnectionParameters_localSSelector_set" "', argument " "2"" of type '" "SSelector *""'"); 
  }
  arg2 = reinterpret_cast< SSelector * >(argp2);if (arg1) (arg1)->localSSelector = *arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIsoConnectionParameters_localSSelector_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  SSelector *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_localSSelector_get" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);result = (SSelector *)& ((arg1)->localSSelector);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_SSelector, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIsoConnectionParameters_localTSelector_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  TSelector *arg2 = (TSelector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_localTSelector_set" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_TSelector, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sIsoConnectionParameters_localTSelector_set" "', argument " "2"" of type '" "TSelector *""'"); 
  }
  arg2 = reinterpret_cast< TSelector * >(argp2);if (arg1) (arg1)->localTSelector = *arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIsoConnectionParameters_localTSelector_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIsoConnectionParameters *arg1 = (sIsoConnectionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  TSelector *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIsoConnectionParameters_localTSelector_get" "', argument " "1"" of type '" "sIsoConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sIsoConnectionParameters * >(argp1);result = (TSelector *)& ((arg1)->localTSelector);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TSelector, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_sIsoConnectionParameters(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  sIsoConnectionParameters *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_sIsoConnectionParameters.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_sIsoConnectionParameters.");
  result = (sIsoConnectionParameters *)new sIsoConnectionParameters();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_sIsoConnectionParameters, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_sIsoConnectionParameters(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    sIsoConnectionParameters * arg1 = (sIsoConnectionParameters *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue _wrap_IsoConnectionParameters_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IsoConnectionParameters result;
  
  if (args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IsoConnectionParameters_create.");
  
  result = (IsoConnectionParameters)IsoConnectionParameters_create();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IsoConnectionParameters_destroy(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IsoConnectionParameters arg1 = (IsoConnectionParameters) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IsoConnectionParameters_destroy.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IsoConnectionParameters_destroy" "', argument " "1"" of type '" "IsoConnectionParameters""'"); 
  }
  arg1 = reinterpret_cast< IsoConnectionParameters >(argp1);IsoConnectionParameters_destroy(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IsoConnectionParameters_setTlsConfiguration(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IsoConnectionParameters arg1 = (IsoConnectionParameters) 0 ;
  TLSConfiguration arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IsoConnectionParameters_setTlsConfiguration.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IsoConnectionParameters_setTlsConfiguration" "', argument " "1"" of type '" "IsoConnectionParameters""'"); 
  }
  arg1 = reinterpret_cast< IsoConnectionParameters >(argp1);{
    {
      res2 = SWIG_ConvertPtr(args[1], &argp2, SWIGTYPE_p_TLSConfiguration,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IsoConnectionParameters_setTlsConfiguration" "', argument " "2"" of type '" "TLSConfiguration""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IsoConnectionParameters_setTlsConfiguration" "', argument " "2"" of type '" "TLSConfiguration""'");
      } else {
        arg2 = *(reinterpret_cast< TLSConfiguration * >(argp2));
      }
    }
  }
  IsoConnectionParameters_setTlsConfiguration(arg1,SWIG_STD_MOVE(arg2));
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IsoConnectionParameters_setAcseAuthenticationParameter(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IsoConnectionParameters arg1 = (IsoConnectionParameters) 0 ;
  AcseAuthenticationParameter arg2 = (AcseAuthenticationParameter) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IsoConnectionParameters_setAcseAuthenticationParameter.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IsoConnectionParameters_setAcseAuthenticationParameter" "', argument " "1"" of type '" "IsoConnectionParameters""'"); 
  }
  arg1 = reinterpret_cast< IsoConnectionParameters >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sAcseAuthenticationParameter, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IsoConnectionParameters_setAcseAuthenticationParameter" "', argument " "2"" of type '" "AcseAuthenticationParameter""'"); 
  }
  arg2 = reinterpret_cast< AcseAuthenticationParameter >(argp2);IsoConnectionParameters_setAcseAuthenticationParameter(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IsoConnectionParameters_setTcpParameters(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IsoConnectionParameters arg1 = (IsoConnectionParameters) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IsoConnectionParameters_setTcpParameters.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IsoConnectionParameters_setTcpParameters" "', argument " "1"" of type '" "IsoConnectionParameters""'"); 
  }
  arg1 = reinterpret_cast< IsoConnectionParameters >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IsoConnectionParameters_setTcpParameters" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IsoConnectionParameters_setTcpParameters" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);IsoConnectionParameters_setTcpParameters(arg1,(char const *)arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IsoConnectionParameters_setRemoteApTitle(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IsoConnectionParameters arg1 = (IsoConnectionParameters) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IsoConnectionParameters_setRemoteApTitle.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IsoConnectionParameters_setRemoteApTitle" "', argument " "1"" of type '" "IsoConnectionParameters""'"); 
  }
  arg1 = reinterpret_cast< IsoConnectionParameters >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IsoConnectionParameters_setRemoteApTitle" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IsoConnectionParameters_setRemoteApTitle" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);IsoConnectionParameters_setRemoteApTitle(arg1,(char const *)arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IsoConnectionParameters_setRemoteAddresses(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IsoConnectionParameters arg1 = (IsoConnectionParameters) 0 ;
  PSelector arg2 ;
  SSelector arg3 ;
  TSelector arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IsoConnectionParameters_setRemoteAddresses.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IsoConnectionParameters_setRemoteAddresses" "', argument " "1"" of type '" "IsoConnectionParameters""'"); 
  }
  arg1 = reinterpret_cast< IsoConnectionParameters >(argp1);{
    {
      res2 = SWIG_ConvertPtr(args[1], &argp2, SWIGTYPE_p_PSelector,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IsoConnectionParameters_setRemoteAddresses" "', argument " "2"" of type '" "PSelector""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IsoConnectionParameters_setRemoteAddresses" "', argument " "2"" of type '" "PSelector""'");
      } else {
        arg2 = *(reinterpret_cast< PSelector * >(argp2));
      }
    }
  }
  {
    {
      res3 = SWIG_ConvertPtr(args[2], &argp3, SWIGTYPE_p_SSelector,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IsoConnectionParameters_setRemoteAddresses" "', argument " "3"" of type '" "SSelector""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IsoConnectionParameters_setRemoteAddresses" "', argument " "3"" of type '" "SSelector""'");
      } else {
        arg3 = *(reinterpret_cast< SSelector * >(argp3));
      }
    }
  }
  {
    {
      res4 = SWIG_ConvertPtr(args[3], &argp4, SWIGTYPE_p_TSelector,  0 );
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IsoConnectionParameters_setRemoteAddresses" "', argument " "4"" of type '" "TSelector""'"); 
      }  
      if (!argp4) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IsoConnectionParameters_setRemoteAddresses" "', argument " "4"" of type '" "TSelector""'");
      } else {
        arg4 = *(reinterpret_cast< TSelector * >(argp4));
      }
    }
  }
  IsoConnectionParameters_setRemoteAddresses(arg1,SWIG_STD_MOVE(arg2),SWIG_STD_MOVE(arg3),SWIG_STD_MOVE(arg4));
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IsoConnectionParameters_setLocalApTitle(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IsoConnectionParameters arg1 = (IsoConnectionParameters) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IsoConnectionParameters_setLocalApTitle.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IsoConnectionParameters_setLocalApTitle" "', argument " "1"" of type '" "IsoConnectionParameters""'"); 
  }
  arg1 = reinterpret_cast< IsoConnectionParameters >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IsoConnectionParameters_setLocalApTitle" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IsoConnectionParameters_setLocalApTitle" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);IsoConnectionParameters_setLocalApTitle(arg1,(char const *)arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IsoConnectionParameters_setLocalAddresses(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IsoConnectionParameters arg1 = (IsoConnectionParameters) 0 ;
  PSelector arg2 ;
  SSelector arg3 ;
  TSelector arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IsoConnectionParameters_setLocalAddresses.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IsoConnectionParameters_setLocalAddresses" "', argument " "1"" of type '" "IsoConnectionParameters""'"); 
  }
  arg1 = reinterpret_cast< IsoConnectionParameters >(argp1);{
    {
      res2 = SWIG_ConvertPtr(args[1], &argp2, SWIGTYPE_p_PSelector,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IsoConnectionParameters_setLocalAddresses" "', argument " "2"" of type '" "PSelector""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IsoConnectionParameters_setLocalAddresses" "', argument " "2"" of type '" "PSelector""'");
      } else {
        arg2 = *(reinterpret_cast< PSelector * >(argp2));
      }
    }
  }
  {
    {
      res3 = SWIG_ConvertPtr(args[2], &argp3, SWIGTYPE_p_SSelector,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IsoConnectionParameters_setLocalAddresses" "', argument " "3"" of type '" "SSelector""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IsoConnectionParameters_setLocalAddresses" "', argument " "3"" of type '" "SSelector""'");
      } else {
        arg3 = *(reinterpret_cast< SSelector * >(argp3));
      }
    }
  }
  {
    {
      res4 = SWIG_ConvertPtr(args[3], &argp4, SWIGTYPE_p_TSelector,  0 );
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IsoConnectionParameters_setLocalAddresses" "', argument " "4"" of type '" "TSelector""'"); 
      }  
      if (!argp4) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IsoConnectionParameters_setLocalAddresses" "', argument " "4"" of type '" "TSelector""'");
      } else {
        arg4 = *(reinterpret_cast< TSelector * >(argp4));
      }
    }
  }
  IsoConnectionParameters_setLocalAddresses(arg1,SWIG_STD_MOVE(arg2),SWIG_STD_MOVE(arg3),SWIG_STD_MOVE(arg4));
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_MmsConnectionParameters_maxServOutstandingCalling_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sMmsConnectionParameters *arg1 = (sMmsConnectionParameters *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnectionParameters_maxServOutstandingCalling_set" "', argument " "1"" of type '" "sMmsConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sMmsConnectionParameters * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsConnectionParameters_maxServOutstandingCalling_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);if (arg1) (arg1)->maxServOutstandingCalling = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_MmsConnectionParameters_maxServOutstandingCalling_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sMmsConnectionParameters *arg1 = (sMmsConnectionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnectionParameters_maxServOutstandingCalling_get" "', argument " "1"" of type '" "sMmsConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sMmsConnectionParameters * >(argp1);result = (int) ((arg1)->maxServOutstandingCalling);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_MmsConnectionParameters_maxServOutstandingCalled_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sMmsConnectionParameters *arg1 = (sMmsConnectionParameters *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnectionParameters_maxServOutstandingCalled_set" "', argument " "1"" of type '" "sMmsConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sMmsConnectionParameters * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsConnectionParameters_maxServOutstandingCalled_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);if (arg1) (arg1)->maxServOutstandingCalled = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_MmsConnectionParameters_maxServOutstandingCalled_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sMmsConnectionParameters *arg1 = (sMmsConnectionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnectionParameters_maxServOutstandingCalled_get" "', argument " "1"" of type '" "sMmsConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sMmsConnectionParameters * >(argp1);result = (int) ((arg1)->maxServOutstandingCalled);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_MmsConnectionParameters_dataStructureNestingLevel_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sMmsConnectionParameters *arg1 = (sMmsConnectionParameters *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnectionParameters_dataStructureNestingLevel_set" "', argument " "1"" of type '" "sMmsConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sMmsConnectionParameters * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsConnectionParameters_dataStructureNestingLevel_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);if (arg1) (arg1)->dataStructureNestingLevel = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_MmsConnectionParameters_dataStructureNestingLevel_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sMmsConnectionParameters *arg1 = (sMmsConnectionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnectionParameters_dataStructureNestingLevel_get" "', argument " "1"" of type '" "sMmsConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sMmsConnectionParameters * >(argp1);result = (int) ((arg1)->dataStructureNestingLevel);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_MmsConnectionParameters_maxPduSize_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sMmsConnectionParameters *arg1 = (sMmsConnectionParameters *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnectionParameters_maxPduSize_set" "', argument " "1"" of type '" "sMmsConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sMmsConnectionParameters * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsConnectionParameters_maxPduSize_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);if (arg1) (arg1)->maxPduSize = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_MmsConnectionParameters_maxPduSize_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sMmsConnectionParameters *arg1 = (sMmsConnectionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnectionParameters_maxPduSize_get" "', argument " "1"" of type '" "sMmsConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sMmsConnectionParameters * >(argp1);result = (int) ((arg1)->maxPduSize);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_MmsConnectionParameters_servicesSupported_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sMmsConnectionParameters *arg1 = (sMmsConnectionParameters *) 0 ;
  uint8_t *arg2 = (uint8_t *) (uint8_t *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnectionParameters_servicesSupported_set" "', argument " "1"" of type '" "sMmsConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sMmsConnectionParameters * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnectionParameters_servicesSupported_set" "', argument " "2"" of type '" "uint8_t [11]""'"); 
  } 
  arg2 = reinterpret_cast< uint8_t * >(argp2);{
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)11; ++ii) *(uint8_t *)&arg1->servicesSupported[ii] = *((uint8_t *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""servicesSupported""' of type '""uint8_t [11]""'");
    }
  }
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_MmsConnectionParameters_servicesSupported_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sMmsConnectionParameters *arg1 = (sMmsConnectionParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsConnectionParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnectionParameters_servicesSupported_get" "', argument " "1"" of type '" "sMmsConnectionParameters *""'"); 
  }
  arg1 = reinterpret_cast< sMmsConnectionParameters * >(argp1);result = (uint8_t *)(uint8_t *) ((arg1)->servicesSupported);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_MmsConnectionParameters(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  sMmsConnectionParameters *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_MmsConnectionParameters.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_MmsConnectionParameters.");
  result = (sMmsConnectionParameters *)new sMmsConnectionParameters();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_sMmsConnectionParameters, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_MmsConnectionParameters(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    sMmsConnectionParameters * arg1 = (sMmsConnectionParameters *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_MmsServerIdentity_vendorName_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  MmsServerIdentity *arg1 = (MmsServerIdentity *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_MmsServerIdentity, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsServerIdentity_vendorName_set" "', argument " "1"" of type '" "MmsServerIdentity *""'"); 
  }
  arg1 = reinterpret_cast< MmsServerIdentity * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsServerIdentity_vendorName_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->vendorName;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->vendorName = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->vendorName = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_MmsServerIdentity_vendorName_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsServerIdentity *arg1 = (MmsServerIdentity *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_MmsServerIdentity, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsServerIdentity_vendorName_get" "', argument " "1"" of type '" "MmsServerIdentity *""'"); 
  }
  arg1 = reinterpret_cast< MmsServerIdentity * >(argp1);result = (char *) ((arg1)->vendorName);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_MmsServerIdentity_modelName_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  MmsServerIdentity *arg1 = (MmsServerIdentity *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_MmsServerIdentity, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsServerIdentity_modelName_set" "', argument " "1"" of type '" "MmsServerIdentity *""'"); 
  }
  arg1 = reinterpret_cast< MmsServerIdentity * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsServerIdentity_modelName_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->modelName;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->modelName = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->modelName = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_MmsServerIdentity_modelName_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsServerIdentity *arg1 = (MmsServerIdentity *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_MmsServerIdentity, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsServerIdentity_modelName_get" "', argument " "1"" of type '" "MmsServerIdentity *""'"); 
  }
  arg1 = reinterpret_cast< MmsServerIdentity * >(argp1);result = (char *) ((arg1)->modelName);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_MmsServerIdentity_revision_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  MmsServerIdentity *arg1 = (MmsServerIdentity *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_MmsServerIdentity, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsServerIdentity_revision_set" "', argument " "1"" of type '" "MmsServerIdentity *""'"); 
  }
  arg1 = reinterpret_cast< MmsServerIdentity * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsServerIdentity_revision_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->revision;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->revision = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->revision = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_MmsServerIdentity_revision_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsServerIdentity *arg1 = (MmsServerIdentity *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_MmsServerIdentity, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsServerIdentity_revision_get" "', argument " "1"" of type '" "MmsServerIdentity *""'"); 
  }
  arg1 = reinterpret_cast< MmsServerIdentity * >(argp1);result = (char *) ((arg1)->revision);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_MmsServerIdentity(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  MmsServerIdentity *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_MmsServerIdentity.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_MmsServerIdentity.");
  result = (MmsServerIdentity *)new MmsServerIdentity();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_MmsServerIdentity, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_MmsServerIdentity(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    MmsServerIdentity * arg1 = (MmsServerIdentity *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue exports_MMS_CONNECTION_STATE_CLOSED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_CONNECTION_STATE_CLOSED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_CONNECTION_STATE_CONNECTING_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_CONNECTION_STATE_CONNECTING));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_CONNECTION_STATE_CONNECTED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_CONNECTION_STATE_CONNECTED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_CONNECTION_STATE_CLOSING_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_CONNECTION_STATE_CLOSING));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_MmsConnection_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection result;
  
  if (args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_create.");
  
  result = (MmsConnection)MmsConnection_create();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsConnection, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_createSecure(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  TLSConfiguration arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  MmsConnection result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_createSecure.");
  
  {
    {
      res1 = SWIG_ConvertPtr(args[0], &argp1, SWIGTYPE_p_TLSConfiguration,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_createSecure" "', argument " "1"" of type '" "TLSConfiguration""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MmsConnection_createSecure" "', argument " "1"" of type '" "TLSConfiguration""'");
      } else {
        arg1 = *(reinterpret_cast< TLSConfiguration * >(argp1));
      }
    }
  }
  result = (MmsConnection)MmsConnection_createSecure(SWIG_STD_MOVE(arg1));
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsConnection, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_createNonThreaded(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  TLSConfiguration arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  MmsConnection result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_createNonThreaded.");
  
  {
    {
      res1 = SWIG_ConvertPtr(args[0], &argp1, SWIGTYPE_p_TLSConfiguration,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_createNonThreaded" "', argument " "1"" of type '" "TLSConfiguration""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MmsConnection_createNonThreaded" "', argument " "1"" of type '" "TLSConfiguration""'");
      } else {
        arg1 = *(reinterpret_cast< TLSConfiguration * >(argp1));
      }
    }
  }
  result = (MmsConnection)MmsConnection_createNonThreaded(SWIG_STD_MOVE(arg1));
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsConnection, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_setRawMessageHandler(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsRawMessageHandler arg2 = (MmsRawMessageHandler) 0 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_setRawMessageHandler.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_setRawMessageHandler" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);{
    {
      int res = SWIG_ConvertFunctionPtr(args[1], (void**)(&arg2), SWIGTYPE_p_f_p_void_p_unsigned_char_int_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_setRawMessageHandler" "', argument " "2"" of type '" "MmsRawMessageHandler""'"); 
      }
    }
  }
  res3 = SWIG_ConvertPtr(args[2],SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_setRawMessageHandler" "', argument " "3"" of type '" "void *""'"); 
  }MmsConnection_setRawMessageHandler(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_setFilestoreBasepath(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_setFilestoreBasepath.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_setFilestoreBasepath" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_setFilestoreBasepath" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);MmsConnection_setFilestoreBasepath(arg1,(char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_setRequestTimeout(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_setRequestTimeout.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_setRequestTimeout" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsConnection_setRequestTimeout" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = static_cast< uint32_t >(val2);MmsConnection_setRequestTimeout(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_getRequestTimeout(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_getRequestTimeout.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_getRequestTimeout" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);result = (uint32_t)MmsConnection_getRequestTimeout(arg1);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_setConnectTimeout(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_setConnectTimeout.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_setConnectTimeout" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsConnection_setConnectTimeout" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = static_cast< uint32_t >(val2);MmsConnection_setConnectTimeout(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_setInformationReportHandler(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsInformationReportHandler arg2 = (MmsInformationReportHandler) 0 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_setInformationReportHandler.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_setInformationReportHandler" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);{
    {
      int res = SWIG_ConvertFunctionPtr(args[1], (void**)(&arg2), SWIGTYPE_p_f_p_void_p_char_p_char_p_sMmsValue_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_setInformationReportHandler" "', argument " "2"" of type '" "MmsInformationReportHandler""'"); 
      }
    }
  }
  res3 = SWIG_ConvertPtr(args[2],SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_setInformationReportHandler" "', argument " "3"" of type '" "void *""'"); 
  }MmsConnection_setInformationReportHandler(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_getIsoConnectionParameters(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IsoConnectionParameters result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_getIsoConnectionParameters.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_getIsoConnectionParameters" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);result = (IsoConnectionParameters)MmsConnection_getIsoConnectionParameters(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sIsoConnectionParameters, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_getMmsConnectionParameters(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsConnectionParameters result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_getMmsConnectionParameters.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_getMmsConnectionParameters" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);result = MmsConnection_getMmsConnectionParameters(arg1);
  jsresult = SWIG_NewPointerObj((new MmsConnectionParameters(result)), SWIGTYPE_p_sMmsConnectionParameters, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_setConnectionStateChangedHandler(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsConnectionStateChangedHandler arg2 = (MmsConnectionStateChangedHandler) 0 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_setConnectionStateChangedHandler.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_setConnectionStateChangedHandler" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);{
    {
      int res = SWIG_ConvertFunctionPtr(args[1], (void**)(&arg2), SWIGTYPE_p_f_p_sMmsConnection_p_void_enum_MmsConnectionState__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_setConnectionStateChangedHandler" "', argument " "2"" of type '" "MmsConnectionStateChangedHandler""'"); 
      }
    }
  }
  res3 = SWIG_ConvertPtr(args[2],SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_setConnectionStateChangedHandler" "', argument " "3"" of type '" "void *""'"); 
  }MmsConnection_setConnectionStateChangedHandler(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_setConnectionLostHandler(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsConnectionLostHandler arg2 = (MmsConnectionLostHandler) 0 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_setConnectionLostHandler.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_setConnectionLostHandler" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);{
    {
      int res = SWIG_ConvertFunctionPtr(args[1], (void**)(&arg2), SWIGTYPE_p_f_p_sMmsConnection_p_void__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_setConnectionLostHandler" "', argument " "2"" of type '" "MmsConnectionLostHandler""'"); 
      }
    }
  }
  res3 = SWIG_ConvertPtr(args[2],SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_setConnectionLostHandler" "', argument " "3"" of type '" "void *""'"); 
  }MmsConnection_setConnectionLostHandler(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_destroy(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_destroy.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_destroy" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);MmsConnection_destroy(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_connect(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  bool result;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_connect.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_connect" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_connect" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_connect" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "MmsConnection_connect" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);result = (bool)MmsConnection_connect(arg1,arg2,(char const *)arg3,arg4);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_connectAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_connectAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_connectAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_connectAsync" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_connectAsync" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "MmsConnection_connectAsync" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);MmsConnection_connectAsync(arg1,arg2,(char const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_tick(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_tick.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_tick" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);result = (bool)MmsConnection_tick(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_close(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_close.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_close" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);MmsConnection_close(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_abort(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_abort.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_abort" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_abort" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);MmsConnection_abort(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_abortAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_abortAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_abortAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_abortAsync" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);MmsConnection_abortAsync(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_conclude(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_conclude.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_conclude" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_conclude" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);MmsConnection_conclude(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_concludeAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  MmsConnection_ConcludeAbortHandler arg3 = (MmsConnection_ConcludeAbortHandler) 0 ;
  void *arg4 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res4 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_concludeAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_concludeAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_concludeAsync" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);{
    {
      int res = SWIG_ConvertFunctionPtr(args[2], (void**)(&arg3), SWIGTYPE_p_f_p_void_enum_MmsError_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_concludeAsync" "', argument " "3"" of type '" "MmsConnection_ConcludeAbortHandler""'"); 
      }
    }
  }
  res4 = SWIG_ConvertPtr(args[3],SWIG_as_voidptrptr(&arg4), 0, 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_concludeAsync" "', argument " "4"" of type '" "void *""'"); 
  }MmsConnection_concludeAsync(arg1,arg2,arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_getVMDVariableNames(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  LinkedList result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_getVMDVariableNames.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_getVMDVariableNames" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_getVMDVariableNames" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);result = (LinkedList)MmsConnection_getVMDVariableNames(arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_getVMDVariableNamesAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  MmsConnection_GetNameListHandler arg5 = (MmsConnection_GetNameListHandler) 0 ;
  void *arg6 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res6 ;
  
  if (args.Length() < 6 || args.Length() > 6) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_getVMDVariableNamesAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_getVMDVariableNamesAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_getVMDVariableNamesAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_getVMDVariableNamesAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_getVMDVariableNamesAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);{
    {
      int res = SWIG_ConvertFunctionPtr(args[4], (void**)(&arg5), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_sLinkedList_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_getVMDVariableNamesAsync" "', argument " "5"" of type '" "MmsConnection_GetNameListHandler""'"); 
      }
    }
  }
  res6 = SWIG_ConvertPtr(args[5],SWIG_as_voidptrptr(&arg6), 0, 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "MmsConnection_getVMDVariableNamesAsync" "', argument " "6"" of type '" "void *""'"); 
  }MmsConnection_getVMDVariableNamesAsync(arg1,arg2,arg3,(char const *)arg4,arg5,arg6);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_getDomainNames(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  LinkedList result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_getDomainNames.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_getDomainNames" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_getDomainNames" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);result = (LinkedList)MmsConnection_getDomainNames(arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_getDomainNamesAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  LinkedList arg5 = (LinkedList) 0 ;
  MmsConnection_GetNameListHandler arg6 = (MmsConnection_GetNameListHandler) 0 ;
  void *arg7 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  int res7 ;
  
  if (args.Length() < 7 || args.Length() > 7) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_getDomainNamesAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_getDomainNamesAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_getDomainNamesAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_getDomainNamesAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_getDomainNamesAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_ConvertPtr(args[4], &argp5,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_getDomainNamesAsync" "', argument " "5"" of type '" "LinkedList""'"); 
  }
  arg5 = reinterpret_cast< LinkedList >(argp5);{
    {
      int res = SWIG_ConvertFunctionPtr(args[5], (void**)(&arg6), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_sLinkedList_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_getDomainNamesAsync" "', argument " "6"" of type '" "MmsConnection_GetNameListHandler""'"); 
      }
    }
  }
  res7 = SWIG_ConvertPtr(args[6],SWIG_as_voidptrptr(&arg7), 0, 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "MmsConnection_getDomainNamesAsync" "', argument " "7"" of type '" "void *""'"); 
  }MmsConnection_getDomainNamesAsync(arg1,arg2,arg3,(char const *)arg4,arg5,arg6,arg7);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_getDomainVariableNames(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  LinkedList result;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_getDomainVariableNames.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_getDomainVariableNames" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_getDomainVariableNames" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_getDomainVariableNames" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);result = (LinkedList)MmsConnection_getDomainVariableNames(arg1,arg2,(char const *)arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_getDomainVariableNamesAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  LinkedList arg6 = (LinkedList) 0 ;
  MmsConnection_GetNameListHandler arg7 = (MmsConnection_GetNameListHandler) 0 ;
  void *arg8 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  int res8 ;
  
  if (args.Length() < 8 || args.Length() > 8) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_getDomainVariableNamesAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_getDomainVariableNamesAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_getDomainVariableNamesAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_getDomainVariableNamesAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_getDomainVariableNamesAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_AsCharPtrAndSize(args[4], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_getDomainVariableNamesAsync" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);res6 = SWIG_ConvertPtr(args[5], &argp6,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "MmsConnection_getDomainVariableNamesAsync" "', argument " "6"" of type '" "LinkedList""'"); 
  }
  arg6 = reinterpret_cast< LinkedList >(argp6);{
    {
      int res = SWIG_ConvertFunctionPtr(args[6], (void**)(&arg7), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_sLinkedList_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_getDomainVariableNamesAsync" "', argument " "7"" of type '" "MmsConnection_GetNameListHandler""'"); 
      }
    }
  }
  res8 = SWIG_ConvertPtr(args[7],SWIG_as_voidptrptr(&arg8), 0, 0);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "MmsConnection_getDomainVariableNamesAsync" "', argument " "8"" of type '" "void *""'"); 
  }MmsConnection_getDomainVariableNamesAsync(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7,arg8);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_getDomainVariableListNames(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  LinkedList result;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_getDomainVariableListNames.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_getDomainVariableListNames" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_getDomainVariableListNames" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_getDomainVariableListNames" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);result = (LinkedList)MmsConnection_getDomainVariableListNames(arg1,arg2,(char const *)arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_getDomainVariableListNamesAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  LinkedList arg6 = (LinkedList) 0 ;
  MmsConnection_GetNameListHandler arg7 = (MmsConnection_GetNameListHandler) 0 ;
  void *arg8 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  int res8 ;
  
  if (args.Length() < 8 || args.Length() > 8) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_getDomainVariableListNamesAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_getDomainVariableListNamesAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_getDomainVariableListNamesAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_getDomainVariableListNamesAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_getDomainVariableListNamesAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_AsCharPtrAndSize(args[4], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_getDomainVariableListNamesAsync" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);res6 = SWIG_ConvertPtr(args[5], &argp6,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "MmsConnection_getDomainVariableListNamesAsync" "', argument " "6"" of type '" "LinkedList""'"); 
  }
  arg6 = reinterpret_cast< LinkedList >(argp6);{
    {
      int res = SWIG_ConvertFunctionPtr(args[6], (void**)(&arg7), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_sLinkedList_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_getDomainVariableListNamesAsync" "', argument " "7"" of type '" "MmsConnection_GetNameListHandler""'"); 
      }
    }
  }
  res8 = SWIG_ConvertPtr(args[7],SWIG_as_voidptrptr(&arg8), 0, 0);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "MmsConnection_getDomainVariableListNamesAsync" "', argument " "8"" of type '" "void *""'"); 
  }MmsConnection_getDomainVariableListNamesAsync(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7,arg8);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_getDomainJournals(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  LinkedList result;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_getDomainJournals.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_getDomainJournals" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_getDomainJournals" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_getDomainJournals" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);result = (LinkedList)MmsConnection_getDomainJournals(arg1,arg2,(char const *)arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_getDomainJournalsAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  MmsConnection_GetNameListHandler arg6 = (MmsConnection_GetNameListHandler) 0 ;
  void *arg7 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res7 ;
  
  if (args.Length() < 7 || args.Length() > 7) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_getDomainJournalsAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_getDomainJournalsAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_getDomainJournalsAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_getDomainJournalsAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_getDomainJournalsAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_AsCharPtrAndSize(args[4], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_getDomainJournalsAsync" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);{
    {
      int res = SWIG_ConvertFunctionPtr(args[5], (void**)(&arg6), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_sLinkedList_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_getDomainJournalsAsync" "', argument " "6"" of type '" "MmsConnection_GetNameListHandler""'"); 
      }
    }
  }
  res7 = SWIG_ConvertPtr(args[6],SWIG_as_voidptrptr(&arg7), 0, 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "MmsConnection_getDomainJournalsAsync" "', argument " "7"" of type '" "void *""'"); 
  }MmsConnection_getDomainJournalsAsync(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_getVariableListNamesAssociationSpecific(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  LinkedList result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_getVariableListNamesAssociationSpecific.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_getVariableListNamesAssociationSpecific" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_getVariableListNamesAssociationSpecific" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);result = (LinkedList)MmsConnection_getVariableListNamesAssociationSpecific(arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_getVariableListNamesAssociationSpecificAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  MmsConnection_GetNameListHandler arg5 = (MmsConnection_GetNameListHandler) 0 ;
  void *arg6 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res6 ;
  
  if (args.Length() < 6 || args.Length() > 6) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_getVariableListNamesAssociationSpecificAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_getVariableListNamesAssociationSpecificAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_getVariableListNamesAssociationSpecificAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_getVariableListNamesAssociationSpecificAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_getVariableListNamesAssociationSpecificAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);{
    {
      int res = SWIG_ConvertFunctionPtr(args[4], (void**)(&arg5), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_sLinkedList_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_getVariableListNamesAssociationSpecificAsync" "', argument " "5"" of type '" "MmsConnection_GetNameListHandler""'"); 
      }
    }
  }
  res6 = SWIG_ConvertPtr(args[5],SWIG_as_voidptrptr(&arg6), 0, 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "MmsConnection_getVariableListNamesAssociationSpecificAsync" "', argument " "6"" of type '" "void *""'"); 
  }MmsConnection_getVariableListNamesAssociationSpecificAsync(arg1,arg2,arg3,(char const *)arg4,arg5,arg6);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_readVariable(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_readVariable.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_readVariable" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_readVariable" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_readVariable" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_readVariable" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);result = (MmsValue *)MmsConnection_readVariable(arg1,arg2,(char const *)arg3,(char const *)arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_readVariableAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  MmsConnection_ReadVariableHandler arg6 = (MmsConnection_ReadVariableHandler) 0 ;
  void *arg7 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res7 ;
  
  if (args.Length() < 7 || args.Length() > 7) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_readVariableAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_readVariableAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_readVariableAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_readVariableAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_readVariableAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_AsCharPtrAndSize(args[4], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_readVariableAsync" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);{
    {
      int res = SWIG_ConvertFunctionPtr(args[5], (void**)(&arg6), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_sMmsValue__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_readVariableAsync" "', argument " "6"" of type '" "MmsConnection_ReadVariableHandler""'"); 
      }
    }
  }
  res7 = SWIG_ConvertPtr(args[6],SWIG_as_voidptrptr(&arg7), 0, 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "MmsConnection_readVariableAsync" "', argument " "7"" of type '" "void *""'"); 
  }MmsConnection_readVariableAsync(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_readVariableComponent(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_readVariableComponent.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_readVariableComponent" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_readVariableComponent" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_readVariableComponent" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_readVariableComponent" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_AsCharPtrAndSize(args[4], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_readVariableComponent" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);result = (MmsValue *)MmsConnection_readVariableComponent(arg1,arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_readVariableComponentAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  MmsConnection_ReadVariableHandler arg7 = (MmsConnection_ReadVariableHandler) 0 ;
  void *arg8 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  int res8 ;
  
  if (args.Length() < 8 || args.Length() > 8) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_readVariableComponentAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_readVariableComponentAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_readVariableComponentAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_readVariableComponentAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_readVariableComponentAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_AsCharPtrAndSize(args[4], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_readVariableComponentAsync" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);res6 = SWIG_AsCharPtrAndSize(args[5], &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "MmsConnection_readVariableComponentAsync" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);{
    {
      int res = SWIG_ConvertFunctionPtr(args[6], (void**)(&arg7), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_sMmsValue__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_readVariableComponentAsync" "', argument " "7"" of type '" "MmsConnection_ReadVariableHandler""'"); 
      }
    }
  }
  res8 = SWIG_ConvertPtr(args[7],SWIG_as_voidptrptr(&arg8), 0, 0);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "MmsConnection_readVariableComponentAsync" "', argument " "8"" of type '" "void *""'"); 
  }MmsConnection_readVariableComponentAsync(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,(char const *)arg6,arg7,arg8);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_readArrayElements(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  uint32_t arg5 ;
  uint32_t arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  unsigned int val6 ;
  int ecode6 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 6 || args.Length() > 6) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_readArrayElements.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_readArrayElements" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_readArrayElements" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_readArrayElements" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_readArrayElements" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);ecode5 = SWIG_AsVal_unsigned_SS_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "MmsConnection_readArrayElements" "', argument " "5"" of type '" "uint32_t""'");
  } 
  arg5 = static_cast< uint32_t >(val5);ecode6 = SWIG_AsVal_unsigned_SS_int(args[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "MmsConnection_readArrayElements" "', argument " "6"" of type '" "uint32_t""'");
  } 
  arg6 = static_cast< uint32_t >(val6);result = (MmsValue *)MmsConnection_readArrayElements(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,arg6);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_readArrayElementsAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  uint32_t arg6 ;
  uint32_t arg7 ;
  MmsConnection_ReadVariableHandler arg8 = (MmsConnection_ReadVariableHandler) 0 ;
  void *arg9 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  unsigned int val6 ;
  int ecode6 = 0 ;
  unsigned int val7 ;
  int ecode7 = 0 ;
  int res9 ;
  
  if (args.Length() < 9 || args.Length() > 9) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_readArrayElementsAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_readArrayElementsAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_readArrayElementsAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_readArrayElementsAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_readArrayElementsAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_AsCharPtrAndSize(args[4], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_readArrayElementsAsync" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);ecode6 = SWIG_AsVal_unsigned_SS_int(args[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "MmsConnection_readArrayElementsAsync" "', argument " "6"" of type '" "uint32_t""'");
  } 
  arg6 = static_cast< uint32_t >(val6);ecode7 = SWIG_AsVal_unsigned_SS_int(args[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "MmsConnection_readArrayElementsAsync" "', argument " "7"" of type '" "uint32_t""'");
  } 
  arg7 = static_cast< uint32_t >(val7);{
    {
      int res = SWIG_ConvertFunctionPtr(args[7], (void**)(&arg8), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_sMmsValue__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_readArrayElementsAsync" "', argument " "8"" of type '" "MmsConnection_ReadVariableHandler""'"); 
      }
    }
  }
  res9 = SWIG_ConvertPtr(args[8],SWIG_as_voidptrptr(&arg9), 0, 0);
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "MmsConnection_readArrayElementsAsync" "', argument " "9"" of type '" "void *""'"); 
  }MmsConnection_readArrayElementsAsync(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7,arg8,arg9);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_readSingleArrayElementWithComponent(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  uint32_t arg5 ;
  char *arg6 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 6 || args.Length() > 6) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_readSingleArrayElementWithComponent.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_readSingleArrayElementWithComponent" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_readSingleArrayElementWithComponent" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_readSingleArrayElementWithComponent" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_readSingleArrayElementWithComponent" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);ecode5 = SWIG_AsVal_unsigned_SS_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "MmsConnection_readSingleArrayElementWithComponent" "', argument " "5"" of type '" "uint32_t""'");
  } 
  arg5 = static_cast< uint32_t >(val5);res6 = SWIG_AsCharPtrAndSize(args[5], &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "MmsConnection_readSingleArrayElementWithComponent" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);result = (MmsValue *)MmsConnection_readSingleArrayElementWithComponent(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,(char const *)arg6);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_readSingleArrayElementWithComponentAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  uint32_t arg6 ;
  char *arg7 = (char *) 0 ;
  MmsConnection_ReadVariableHandler arg8 = (MmsConnection_ReadVariableHandler) 0 ;
  void *arg9 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  unsigned int val6 ;
  int ecode6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  int res9 ;
  
  if (args.Length() < 9 || args.Length() > 9) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_readSingleArrayElementWithComponentAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_readSingleArrayElementWithComponentAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_readSingleArrayElementWithComponentAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_readSingleArrayElementWithComponentAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_readSingleArrayElementWithComponentAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_AsCharPtrAndSize(args[4], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_readSingleArrayElementWithComponentAsync" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);ecode6 = SWIG_AsVal_unsigned_SS_int(args[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "MmsConnection_readSingleArrayElementWithComponentAsync" "', argument " "6"" of type '" "uint32_t""'");
  } 
  arg6 = static_cast< uint32_t >(val6);res7 = SWIG_AsCharPtrAndSize(args[6], &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "MmsConnection_readSingleArrayElementWithComponentAsync" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);{
    {
      int res = SWIG_ConvertFunctionPtr(args[7], (void**)(&arg8), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_sMmsValue__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_readSingleArrayElementWithComponentAsync" "', argument " "8"" of type '" "MmsConnection_ReadVariableHandler""'"); 
      }
    }
  }
  res9 = SWIG_ConvertPtr(args[8],SWIG_as_voidptrptr(&arg9), 0, 0);
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "MmsConnection_readSingleArrayElementWithComponentAsync" "', argument " "9"" of type '" "void *""'"); 
  }MmsConnection_readSingleArrayElementWithComponentAsync(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,(char const *)arg7,arg8,arg9);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_readMultipleVariables(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  LinkedList arg4 = (LinkedList) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_readMultipleVariables.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_readMultipleVariables" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_readMultipleVariables" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_readMultipleVariables" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_readMultipleVariables" "', argument " "4"" of type '" "LinkedList""'"); 
  }
  arg4 = reinterpret_cast< LinkedList >(argp4);result = (MmsValue *)MmsConnection_readMultipleVariables(arg1,arg2,(char const *)arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_readMultipleVariablesAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  LinkedList arg5 = (LinkedList) 0 ;
  MmsConnection_ReadVariableHandler arg6 = (MmsConnection_ReadVariableHandler) 0 ;
  void *arg7 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  int res7 ;
  
  if (args.Length() < 7 || args.Length() > 7) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_readMultipleVariablesAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_readMultipleVariablesAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_readMultipleVariablesAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_readMultipleVariablesAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_readMultipleVariablesAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_ConvertPtr(args[4], &argp5,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_readMultipleVariablesAsync" "', argument " "5"" of type '" "LinkedList""'"); 
  }
  arg5 = reinterpret_cast< LinkedList >(argp5);{
    {
      int res = SWIG_ConvertFunctionPtr(args[5], (void**)(&arg6), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_sMmsValue__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_readMultipleVariablesAsync" "', argument " "6"" of type '" "MmsConnection_ReadVariableHandler""'"); 
      }
    }
  }
  res7 = SWIG_ConvertPtr(args[6],SWIG_as_voidptrptr(&arg7), 0, 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "MmsConnection_readMultipleVariablesAsync" "', argument " "7"" of type '" "void *""'"); 
  }MmsConnection_readMultipleVariablesAsync(arg1,arg2,arg3,(char const *)arg4,arg5,arg6,arg7);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_writeVariable(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  MmsValue *arg5 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  MmsDataAccessError result;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_writeVariable.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_writeVariable" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_writeVariable" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_writeVariable" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_writeVariable" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_ConvertPtr(args[4], &argp5,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_writeVariable" "', argument " "5"" of type '" "MmsValue *""'"); 
  }
  arg5 = reinterpret_cast< MmsValue * >(argp5);result = (MmsDataAccessError)MmsConnection_writeVariable(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_writeVariableAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  MmsValue *arg6 = (MmsValue *) 0 ;
  MmsConnection_WriteVariableHandler arg7 = (MmsConnection_WriteVariableHandler) 0 ;
  void *arg8 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  int res8 ;
  
  if (args.Length() < 8 || args.Length() > 8) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_writeVariableAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_writeVariableAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_writeVariableAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_writeVariableAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_writeVariableAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_AsCharPtrAndSize(args[4], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_writeVariableAsync" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);res6 = SWIG_ConvertPtr(args[5], &argp6,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "MmsConnection_writeVariableAsync" "', argument " "6"" of type '" "MmsValue *""'"); 
  }
  arg6 = reinterpret_cast< MmsValue * >(argp6);{
    {
      int res = SWIG_ConvertFunctionPtr(args[6], (void**)(&arg7), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_enum_MmsDataAccessError__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_writeVariableAsync" "', argument " "7"" of type '" "MmsConnection_WriteVariableHandler""'"); 
      }
    }
  }
  res8 = SWIG_ConvertPtr(args[7],SWIG_as_voidptrptr(&arg8), 0, 0);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "MmsConnection_writeVariableAsync" "', argument " "8"" of type '" "void *""'"); 
  }MmsConnection_writeVariableAsync(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7,arg8);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_writeSingleArrayElementWithComponent(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  uint32_t arg5 ;
  char *arg6 = (char *) 0 ;
  MmsValue *arg7 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  MmsDataAccessError result;
  
  if (args.Length() < 7 || args.Length() > 7) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_writeSingleArrayElementWithComponent.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_writeSingleArrayElementWithComponent" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_writeSingleArrayElementWithComponent" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_writeSingleArrayElementWithComponent" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_writeSingleArrayElementWithComponent" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);ecode5 = SWIG_AsVal_unsigned_SS_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "MmsConnection_writeSingleArrayElementWithComponent" "', argument " "5"" of type '" "uint32_t""'");
  } 
  arg5 = static_cast< uint32_t >(val5);res6 = SWIG_AsCharPtrAndSize(args[5], &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "MmsConnection_writeSingleArrayElementWithComponent" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);res7 = SWIG_ConvertPtr(args[6], &argp7,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "MmsConnection_writeSingleArrayElementWithComponent" "', argument " "7"" of type '" "MmsValue *""'"); 
  }
  arg7 = reinterpret_cast< MmsValue * >(argp7);result = (MmsDataAccessError)MmsConnection_writeSingleArrayElementWithComponent(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,(char const *)arg6,arg7);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_writeSingleArrayElementWithComponentAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  uint32_t arg6 ;
  char *arg7 = (char *) 0 ;
  MmsValue *arg8 = (MmsValue *) 0 ;
  MmsConnection_WriteVariableHandler arg9 = (MmsConnection_WriteVariableHandler) 0 ;
  void *arg10 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  unsigned int val6 ;
  int ecode6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  int res10 ;
  
  if (args.Length() < 10 || args.Length() > 10) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_writeSingleArrayElementWithComponentAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_writeSingleArrayElementWithComponentAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_writeSingleArrayElementWithComponentAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_writeSingleArrayElementWithComponentAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_writeSingleArrayElementWithComponentAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_AsCharPtrAndSize(args[4], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_writeSingleArrayElementWithComponentAsync" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);ecode6 = SWIG_AsVal_unsigned_SS_int(args[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "MmsConnection_writeSingleArrayElementWithComponentAsync" "', argument " "6"" of type '" "uint32_t""'");
  } 
  arg6 = static_cast< uint32_t >(val6);res7 = SWIG_AsCharPtrAndSize(args[6], &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "MmsConnection_writeSingleArrayElementWithComponentAsync" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);res8 = SWIG_ConvertPtr(args[7], &argp8,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "MmsConnection_writeSingleArrayElementWithComponentAsync" "', argument " "8"" of type '" "MmsValue *""'"); 
  }
  arg8 = reinterpret_cast< MmsValue * >(argp8);{
    {
      int res = SWIG_ConvertFunctionPtr(args[8], (void**)(&arg9), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_enum_MmsDataAccessError__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_writeSingleArrayElementWithComponentAsync" "', argument " "9"" of type '" "MmsConnection_WriteVariableHandler""'"); 
      }
    }
  }
  res10 = SWIG_ConvertPtr(args[9],SWIG_as_voidptrptr(&arg10), 0, 0);
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "MmsConnection_writeSingleArrayElementWithComponentAsync" "', argument " "10"" of type '" "void *""'"); 
  }MmsConnection_writeSingleArrayElementWithComponentAsync(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,(char const *)arg7,arg8,arg9,arg10);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_writeArrayElements(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int arg5 ;
  int arg6 ;
  MmsValue *arg7 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  MmsDataAccessError result;
  
  if (args.Length() < 7 || args.Length() > 7) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_writeArrayElements.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_writeArrayElements" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_writeArrayElements" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_writeArrayElements" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_writeArrayElements" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);ecode5 = SWIG_AsVal_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "MmsConnection_writeArrayElements" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);ecode6 = SWIG_AsVal_int(args[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "MmsConnection_writeArrayElements" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);res7 = SWIG_ConvertPtr(args[6], &argp7,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "MmsConnection_writeArrayElements" "', argument " "7"" of type '" "MmsValue *""'"); 
  }
  arg7 = reinterpret_cast< MmsValue * >(argp7);result = (MmsDataAccessError)MmsConnection_writeArrayElements(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,arg6,arg7);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_writeArrayElementsAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  int arg6 ;
  int arg7 ;
  MmsValue *arg8 = (MmsValue *) 0 ;
  MmsConnection_WriteVariableHandler arg9 = (MmsConnection_WriteVariableHandler) 0 ;
  void *arg10 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  int res10 ;
  
  if (args.Length() < 10 || args.Length() > 10) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_writeArrayElementsAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_writeArrayElementsAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_writeArrayElementsAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_writeArrayElementsAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_writeArrayElementsAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_AsCharPtrAndSize(args[4], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_writeArrayElementsAsync" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);ecode6 = SWIG_AsVal_int(args[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "MmsConnection_writeArrayElementsAsync" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);ecode7 = SWIG_AsVal_int(args[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "MmsConnection_writeArrayElementsAsync" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);res8 = SWIG_ConvertPtr(args[7], &argp8,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "MmsConnection_writeArrayElementsAsync" "', argument " "8"" of type '" "MmsValue *""'"); 
  }
  arg8 = reinterpret_cast< MmsValue * >(argp8);{
    {
      int res = SWIG_ConvertFunctionPtr(args[8], (void**)(&arg9), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_enum_MmsDataAccessError__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_writeArrayElementsAsync" "', argument " "9"" of type '" "MmsConnection_WriteVariableHandler""'"); 
      }
    }
  }
  res10 = SWIG_ConvertPtr(args[9],SWIG_as_voidptrptr(&arg10), 0, 0);
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "MmsConnection_writeArrayElementsAsync" "', argument " "10"" of type '" "void *""'"); 
  }MmsConnection_writeArrayElementsAsync(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7,arg8,arg9,arg10);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_writeMultipleVariables(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  LinkedList arg4 = (LinkedList) 0 ;
  LinkedList arg5 = (LinkedList) 0 ;
  LinkedList *arg6 = (LinkedList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  
  if (args.Length() < 6 || args.Length() > 6) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_writeMultipleVariables.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_writeMultipleVariables" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_writeMultipleVariables" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_writeMultipleVariables" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_writeMultipleVariables" "', argument " "4"" of type '" "LinkedList""'"); 
  }
  arg4 = reinterpret_cast< LinkedList >(argp4);res5 = SWIG_ConvertPtr(args[4], &argp5,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_writeMultipleVariables" "', argument " "5"" of type '" "LinkedList""'"); 
  }
  arg5 = reinterpret_cast< LinkedList >(argp5);res6 = SWIG_ConvertPtr(args[5], &argp6,SWIGTYPE_p_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "MmsConnection_writeMultipleVariables" "', argument " "6"" of type '" "LinkedList *""'"); 
  }
  arg6 = reinterpret_cast< LinkedList * >(argp6);MmsConnection_writeMultipleVariables(arg1,arg2,(char const *)arg3,arg4,arg5,arg6);
  jsresult = SWIGV8_UNDEFINED();
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_writeMultipleVariablesAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  LinkedList arg5 = (LinkedList) 0 ;
  LinkedList arg6 = (LinkedList) 0 ;
  MmsConnection_WriteMultipleVariablesHandler arg7 = (MmsConnection_WriteMultipleVariablesHandler) 0 ;
  void *arg8 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  int res8 ;
  
  if (args.Length() < 8 || args.Length() > 8) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_writeMultipleVariablesAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_writeMultipleVariablesAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_writeMultipleVariablesAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_writeMultipleVariablesAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_writeMultipleVariablesAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_ConvertPtr(args[4], &argp5,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_writeMultipleVariablesAsync" "', argument " "5"" of type '" "LinkedList""'"); 
  }
  arg5 = reinterpret_cast< LinkedList >(argp5);res6 = SWIG_ConvertPtr(args[5], &argp6,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "MmsConnection_writeMultipleVariablesAsync" "', argument " "6"" of type '" "LinkedList""'"); 
  }
  arg6 = reinterpret_cast< LinkedList >(argp6);{
    {
      int res = SWIG_ConvertFunctionPtr(args[6], (void**)(&arg7), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_sLinkedList__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_writeMultipleVariablesAsync" "', argument " "7"" of type '" "MmsConnection_WriteMultipleVariablesHandler""'"); 
      }
    }
  }
  res8 = SWIG_ConvertPtr(args[7],SWIG_as_voidptrptr(&arg8), 0, 0);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "MmsConnection_writeMultipleVariablesAsync" "', argument " "8"" of type '" "void *""'"); 
  }MmsConnection_writeMultipleVariablesAsync(arg1,arg2,arg3,(char const *)arg4,arg5,arg6,arg7,arg8);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_writeNamedVariableList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  bool arg3 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  LinkedList arg6 = (LinkedList) 0 ;
  LinkedList *arg7 = (LinkedList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  
  if (args.Length() < 7 || args.Length() > 7) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_writeNamedVariableList.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_writeNamedVariableList" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_writeNamedVariableList" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);ecode3 = SWIG_AsVal_bool(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MmsConnection_writeNamedVariableList" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_writeNamedVariableList" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_AsCharPtrAndSize(args[4], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_writeNamedVariableList" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);res6 = SWIG_ConvertPtr(args[5], &argp6,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "MmsConnection_writeNamedVariableList" "', argument " "6"" of type '" "LinkedList""'"); 
  }
  arg6 = reinterpret_cast< LinkedList >(argp6);res7 = SWIG_ConvertPtr(args[6], &argp7,SWIGTYPE_p_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "MmsConnection_writeNamedVariableList" "', argument " "7"" of type '" "LinkedList *""'"); 
  }
  arg7 = reinterpret_cast< LinkedList * >(argp7);MmsConnection_writeNamedVariableList(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_writeNamedVariableListAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  bool arg4 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  LinkedList arg7 = (LinkedList) 0 ;
  MmsConnection_WriteMultipleVariablesHandler arg8 = (MmsConnection_WriteMultipleVariablesHandler) 0 ;
  void *arg9 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  int res9 ;
  
  if (args.Length() < 9 || args.Length() > 9) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_writeNamedVariableListAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_writeNamedVariableListAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_writeNamedVariableListAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_writeNamedVariableListAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);ecode4 = SWIG_AsVal_bool(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "MmsConnection_writeNamedVariableListAsync" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);res5 = SWIG_AsCharPtrAndSize(args[4], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_writeNamedVariableListAsync" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);res6 = SWIG_AsCharPtrAndSize(args[5], &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "MmsConnection_writeNamedVariableListAsync" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);res7 = SWIG_ConvertPtr(args[6], &argp7,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "MmsConnection_writeNamedVariableListAsync" "', argument " "7"" of type '" "LinkedList""'"); 
  }
  arg7 = reinterpret_cast< LinkedList >(argp7);{
    {
      int res = SWIG_ConvertFunctionPtr(args[7], (void**)(&arg8), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_sLinkedList__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_writeNamedVariableListAsync" "', argument " "8"" of type '" "MmsConnection_WriteMultipleVariablesHandler""'"); 
      }
    }
  }
  res9 = SWIG_ConvertPtr(args[8],SWIG_as_voidptrptr(&arg9), 0, 0);
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "MmsConnection_writeNamedVariableListAsync" "', argument " "9"" of type '" "void *""'"); 
  }MmsConnection_writeNamedVariableListAsync(arg1,arg2,arg3,arg4,(char const *)arg5,(char const *)arg6,arg7,arg8,arg9);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_getVariableAccessAttributes(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  MmsVariableSpecification *result = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_getVariableAccessAttributes.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_getVariableAccessAttributes" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_getVariableAccessAttributes" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_getVariableAccessAttributes" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_getVariableAccessAttributes" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);result = (MmsVariableSpecification *)MmsConnection_getVariableAccessAttributes(arg1,arg2,(char const *)arg3,(char const *)arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_MmsVariableSpecification, 0 |  0 );
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_getVariableAccessAttributesAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  MmsConnection_GetVariableAccessAttributesHandler arg6 = (MmsConnection_GetVariableAccessAttributesHandler) 0 ;
  void *arg7 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res7 ;
  
  if (args.Length() < 7 || args.Length() > 7) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_getVariableAccessAttributesAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_getVariableAccessAttributesAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_getVariableAccessAttributesAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_getVariableAccessAttributesAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_getVariableAccessAttributesAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_AsCharPtrAndSize(args[4], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_getVariableAccessAttributesAsync" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);{
    {
      int res = SWIG_ConvertFunctionPtr(args[5], (void**)(&arg6), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_MmsVariableSpecification__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_getVariableAccessAttributesAsync" "', argument " "6"" of type '" "MmsConnection_GetVariableAccessAttributesHandler""'"); 
      }
    }
  }
  res7 = SWIG_ConvertPtr(args[6],SWIG_as_voidptrptr(&arg7), 0, 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "MmsConnection_getVariableAccessAttributesAsync" "', argument " "7"" of type '" "void *""'"); 
  }MmsConnection_getVariableAccessAttributesAsync(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_readNamedVariableListValues(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_readNamedVariableListValues.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_readNamedVariableListValues" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_readNamedVariableListValues" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_readNamedVariableListValues" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_readNamedVariableListValues" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);ecode5 = SWIG_AsVal_bool(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "MmsConnection_readNamedVariableListValues" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);result = (MmsValue *)MmsConnection_readNamedVariableListValues(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_readNamedVariableListValuesAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  bool arg6 ;
  MmsConnection_ReadVariableHandler arg7 = (MmsConnection_ReadVariableHandler) 0 ;
  void *arg8 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  int res8 ;
  
  if (args.Length() < 8 || args.Length() > 8) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_readNamedVariableListValuesAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_readNamedVariableListValuesAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_readNamedVariableListValuesAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_readNamedVariableListValuesAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_readNamedVariableListValuesAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_AsCharPtrAndSize(args[4], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_readNamedVariableListValuesAsync" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);ecode6 = SWIG_AsVal_bool(args[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "MmsConnection_readNamedVariableListValuesAsync" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);{
    {
      int res = SWIG_ConvertFunctionPtr(args[6], (void**)(&arg7), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_sMmsValue__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_readNamedVariableListValuesAsync" "', argument " "7"" of type '" "MmsConnection_ReadVariableHandler""'"); 
      }
    }
  }
  res8 = SWIG_ConvertPtr(args[7],SWIG_as_voidptrptr(&arg8), 0, 0);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "MmsConnection_readNamedVariableListValuesAsync" "', argument " "8"" of type '" "void *""'"); 
  }MmsConnection_readNamedVariableListValuesAsync(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7,arg8);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_readNamedVariableListValuesAssociationSpecific(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_readNamedVariableListValuesAssociationSpecific.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_readNamedVariableListValuesAssociationSpecific" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_readNamedVariableListValuesAssociationSpecific" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_readNamedVariableListValuesAssociationSpecific" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_bool(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "MmsConnection_readNamedVariableListValuesAssociationSpecific" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);result = (MmsValue *)MmsConnection_readNamedVariableListValuesAssociationSpecific(arg1,arg2,(char const *)arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_readNamedVariableListValuesAssociationSpecificAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  bool arg5 ;
  MmsConnection_ReadVariableHandler arg6 = (MmsConnection_ReadVariableHandler) 0 ;
  void *arg7 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  int res7 ;
  
  if (args.Length() < 7 || args.Length() > 7) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_readNamedVariableListValuesAssociationSpecificAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_readNamedVariableListValuesAssociationSpecificAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_readNamedVariableListValuesAssociationSpecificAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_readNamedVariableListValuesAssociationSpecificAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_readNamedVariableListValuesAssociationSpecificAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);ecode5 = SWIG_AsVal_bool(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "MmsConnection_readNamedVariableListValuesAssociationSpecificAsync" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);{
    {
      int res = SWIG_ConvertFunctionPtr(args[5], (void**)(&arg6), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_sMmsValue__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_readNamedVariableListValuesAssociationSpecificAsync" "', argument " "6"" of type '" "MmsConnection_ReadVariableHandler""'"); 
      }
    }
  }
  res7 = SWIG_ConvertPtr(args[6],SWIG_as_voidptrptr(&arg7), 0, 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "MmsConnection_readNamedVariableListValuesAssociationSpecificAsync" "', argument " "7"" of type '" "void *""'"); 
  }MmsConnection_readNamedVariableListValuesAssociationSpecificAsync(arg1,arg2,arg3,(char const *)arg4,arg5,arg6,arg7);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_defineNamedVariableList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  LinkedList arg5 = (LinkedList) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_defineNamedVariableList.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_defineNamedVariableList" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_defineNamedVariableList" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_defineNamedVariableList" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_defineNamedVariableList" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_ConvertPtr(args[4], &argp5,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_defineNamedVariableList" "', argument " "5"" of type '" "LinkedList""'"); 
  }
  arg5 = reinterpret_cast< LinkedList >(argp5);MmsConnection_defineNamedVariableList(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_defineNamedVariableListAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  LinkedList arg6 = (LinkedList) 0 ;
  MmsConnection_GenericServiceHandler arg7 = (MmsConnection_GenericServiceHandler) 0 ;
  void *arg8 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  int res8 ;
  
  if (args.Length() < 8 || args.Length() > 8) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_defineNamedVariableListAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_defineNamedVariableListAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_defineNamedVariableListAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_defineNamedVariableListAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_defineNamedVariableListAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_AsCharPtrAndSize(args[4], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_defineNamedVariableListAsync" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);res6 = SWIG_ConvertPtr(args[5], &argp6,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "MmsConnection_defineNamedVariableListAsync" "', argument " "6"" of type '" "LinkedList""'"); 
  }
  arg6 = reinterpret_cast< LinkedList >(argp6);{
    {
      int res = SWIG_ConvertFunctionPtr(args[6], (void**)(&arg7), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_defineNamedVariableListAsync" "', argument " "7"" of type '" "MmsConnection_GenericServiceHandler""'"); 
      }
    }
  }
  res8 = SWIG_ConvertPtr(args[7],SWIG_as_voidptrptr(&arg8), 0, 0);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "MmsConnection_defineNamedVariableListAsync" "', argument " "8"" of type '" "void *""'"); 
  }MmsConnection_defineNamedVariableListAsync(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7,arg8);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_defineNamedVariableListAssociationSpecific(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  LinkedList arg4 = (LinkedList) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_defineNamedVariableListAssociationSpecific.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_defineNamedVariableListAssociationSpecific" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_defineNamedVariableListAssociationSpecific" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_defineNamedVariableListAssociationSpecific" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_defineNamedVariableListAssociationSpecific" "', argument " "4"" of type '" "LinkedList""'"); 
  }
  arg4 = reinterpret_cast< LinkedList >(argp4);MmsConnection_defineNamedVariableListAssociationSpecific(arg1,arg2,(char const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_defineNamedVariableListAssociationSpecificAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  LinkedList arg5 = (LinkedList) 0 ;
  MmsConnection_GenericServiceHandler arg6 = (MmsConnection_GenericServiceHandler) 0 ;
  void *arg7 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  int res7 ;
  
  if (args.Length() < 7 || args.Length() > 7) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_defineNamedVariableListAssociationSpecificAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_defineNamedVariableListAssociationSpecificAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_defineNamedVariableListAssociationSpecificAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_defineNamedVariableListAssociationSpecificAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_defineNamedVariableListAssociationSpecificAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_ConvertPtr(args[4], &argp5,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_defineNamedVariableListAssociationSpecificAsync" "', argument " "5"" of type '" "LinkedList""'"); 
  }
  arg5 = reinterpret_cast< LinkedList >(argp5);{
    {
      int res = SWIG_ConvertFunctionPtr(args[5], (void**)(&arg6), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_defineNamedVariableListAssociationSpecificAsync" "', argument " "6"" of type '" "MmsConnection_GenericServiceHandler""'"); 
      }
    }
  }
  res7 = SWIG_ConvertPtr(args[6],SWIG_as_voidptrptr(&arg7), 0, 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "MmsConnection_defineNamedVariableListAssociationSpecificAsync" "', argument " "7"" of type '" "void *""'"); 
  }MmsConnection_defineNamedVariableListAssociationSpecificAsync(arg1,arg2,arg3,(char const *)arg4,arg5,arg6,arg7);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_readNamedVariableListDirectory(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  bool *arg5 = (bool *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  LinkedList result;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_readNamedVariableListDirectory.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_readNamedVariableListDirectory" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_readNamedVariableListDirectory" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_readNamedVariableListDirectory" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_readNamedVariableListDirectory" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_ConvertPtr(args[4], &argp5,SWIGTYPE_p_bool, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_readNamedVariableListDirectory" "', argument " "5"" of type '" "bool *""'"); 
  }
  arg5 = reinterpret_cast< bool * >(argp5);result = (LinkedList)MmsConnection_readNamedVariableListDirectory(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_readNamedVariableListDirectoryAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  MmsConnection_ReadNVLDirectoryHandler arg6 = (MmsConnection_ReadNVLDirectoryHandler) 0 ;
  void *arg7 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res7 ;
  
  if (args.Length() < 7 || args.Length() > 7) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_readNamedVariableListDirectoryAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_readNamedVariableListDirectoryAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_readNamedVariableListDirectoryAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_readNamedVariableListDirectoryAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_readNamedVariableListDirectoryAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_AsCharPtrAndSize(args[4], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_readNamedVariableListDirectoryAsync" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);{
    {
      int res = SWIG_ConvertFunctionPtr(args[5], (void**)(&arg6), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_sLinkedList_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_readNamedVariableListDirectoryAsync" "', argument " "6"" of type '" "MmsConnection_ReadNVLDirectoryHandler""'"); 
      }
    }
  }
  res7 = SWIG_ConvertPtr(args[6],SWIG_as_voidptrptr(&arg7), 0, 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "MmsConnection_readNamedVariableListDirectoryAsync" "', argument " "7"" of type '" "void *""'"); 
  }MmsConnection_readNamedVariableListDirectoryAsync(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_readNamedVariableListDirectoryAssociationSpecific(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  bool *arg4 = (bool *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  LinkedList result;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_readNamedVariableListDirectoryAssociationSpecific.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_readNamedVariableListDirectoryAssociationSpecific" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_readNamedVariableListDirectoryAssociationSpecific" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_readNamedVariableListDirectoryAssociationSpecific" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_bool, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_readNamedVariableListDirectoryAssociationSpecific" "', argument " "4"" of type '" "bool *""'"); 
  }
  arg4 = reinterpret_cast< bool * >(argp4);result = (LinkedList)MmsConnection_readNamedVariableListDirectoryAssociationSpecific(arg1,arg2,(char const *)arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_readNamedVariableListDirectoryAssociationSpecificAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  MmsConnection_ReadNVLDirectoryHandler arg5 = (MmsConnection_ReadNVLDirectoryHandler) 0 ;
  void *arg6 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res6 ;
  
  if (args.Length() < 6 || args.Length() > 6) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_readNamedVariableListDirectoryAssociationSpecificAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_readNamedVariableListDirectoryAssociationSpecificAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_readNamedVariableListDirectoryAssociationSpecificAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_readNamedVariableListDirectoryAssociationSpecificAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_readNamedVariableListDirectoryAssociationSpecificAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);{
    {
      int res = SWIG_ConvertFunctionPtr(args[4], (void**)(&arg5), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_sLinkedList_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_readNamedVariableListDirectoryAssociationSpecificAsync" "', argument " "5"" of type '" "MmsConnection_ReadNVLDirectoryHandler""'"); 
      }
    }
  }
  res6 = SWIG_ConvertPtr(args[5],SWIG_as_voidptrptr(&arg6), 0, 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "MmsConnection_readNamedVariableListDirectoryAssociationSpecificAsync" "', argument " "6"" of type '" "void *""'"); 
  }MmsConnection_readNamedVariableListDirectoryAssociationSpecificAsync(arg1,arg2,arg3,(char const *)arg4,arg5,arg6);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_deleteNamedVariableList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  bool result;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_deleteNamedVariableList.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_deleteNamedVariableList" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_deleteNamedVariableList" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_deleteNamedVariableList" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_deleteNamedVariableList" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);result = (bool)MmsConnection_deleteNamedVariableList(arg1,arg2,(char const *)arg3,(char const *)arg4);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_deleteNamedVariableListAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  MmsConnection_GenericServiceHandler arg6 = (MmsConnection_GenericServiceHandler) 0 ;
  void *arg7 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res7 ;
  
  if (args.Length() < 7 || args.Length() > 7) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_deleteNamedVariableListAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_deleteNamedVariableListAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_deleteNamedVariableListAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_deleteNamedVariableListAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_deleteNamedVariableListAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_AsCharPtrAndSize(args[4], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_deleteNamedVariableListAsync" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);{
    {
      int res = SWIG_ConvertFunctionPtr(args[5], (void**)(&arg6), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_deleteNamedVariableListAsync" "', argument " "6"" of type '" "MmsConnection_GenericServiceHandler""'"); 
      }
    }
  }
  res7 = SWIG_ConvertPtr(args[6],SWIG_as_voidptrptr(&arg7), 0, 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "MmsConnection_deleteNamedVariableListAsync" "', argument " "7"" of type '" "void *""'"); 
  }MmsConnection_deleteNamedVariableListAsync(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_deleteAssociationSpecificNamedVariableList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  bool result;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_deleteAssociationSpecificNamedVariableList.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_deleteAssociationSpecificNamedVariableList" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_deleteAssociationSpecificNamedVariableList" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_deleteAssociationSpecificNamedVariableList" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);result = (bool)MmsConnection_deleteAssociationSpecificNamedVariableList(arg1,arg2,(char const *)arg3);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_deleteAssociationSpecificNamedVariableListAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  MmsConnection_GenericServiceHandler arg5 = (MmsConnection_GenericServiceHandler) 0 ;
  void *arg6 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res6 ;
  
  if (args.Length() < 6 || args.Length() > 6) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_deleteAssociationSpecificNamedVariableListAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_deleteAssociationSpecificNamedVariableListAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_deleteAssociationSpecificNamedVariableListAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_deleteAssociationSpecificNamedVariableListAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_deleteAssociationSpecificNamedVariableListAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);{
    {
      int res = SWIG_ConvertFunctionPtr(args[4], (void**)(&arg5), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_deleteAssociationSpecificNamedVariableListAsync" "', argument " "5"" of type '" "MmsConnection_GenericServiceHandler""'"); 
      }
    }
  }
  res6 = SWIG_ConvertPtr(args[5],SWIG_as_voidptrptr(&arg6), 0, 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "MmsConnection_deleteAssociationSpecificNamedVariableListAsync" "', argument " "6"" of type '" "void *""'"); 
  }MmsConnection_deleteAssociationSpecificNamedVariableListAsync(arg1,arg2,arg3,(char const *)arg4,arg5,arg6);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsVariableAccessSpecification_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  MmsVariableAccessSpecification *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsVariableAccessSpecification_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsVariableAccessSpecification_create" "', argument " "1"" of type '" "char *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsVariableAccessSpecification_create" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);result = (MmsVariableAccessSpecification *)MmsVariableAccessSpecification_create(arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_MmsVariableAccessSpecification, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsVariableAccessSpecification_createAlternateAccess(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int32_t arg3 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  MmsVariableAccessSpecification *result = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsVariableAccessSpecification_createAlternateAccess.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsVariableAccessSpecification_createAlternateAccess" "', argument " "1"" of type '" "char *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsVariableAccessSpecification_createAlternateAccess" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MmsVariableAccessSpecification_createAlternateAccess" "', argument " "3"" of type '" "int32_t""'");
  } 
  arg3 = static_cast< int32_t >(val3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsVariableAccessSpecification_createAlternateAccess" "', argument " "4"" of type '" "char *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);result = (MmsVariableAccessSpecification *)MmsVariableAccessSpecification_createAlternateAccess(arg1,arg2,arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_MmsVariableAccessSpecification, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsVariableAccessSpecification_destroy(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsVariableAccessSpecification *arg1 = (MmsVariableAccessSpecification *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsVariableAccessSpecification_destroy.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_MmsVariableAccessSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsVariableAccessSpecification_destroy" "', argument " "1"" of type '" "MmsVariableAccessSpecification *""'"); 
  }
  arg1 = reinterpret_cast< MmsVariableAccessSpecification * >(argp1);MmsVariableAccessSpecification_destroy(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_setLocalDetail(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  int32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_setLocalDetail.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_setLocalDetail" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsConnection_setLocalDetail" "', argument " "2"" of type '" "int32_t""'");
  } 
  arg2 = static_cast< int32_t >(val2);MmsConnection_setLocalDetail(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_getLocalDetail(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_getLocalDetail.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_getLocalDetail" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);result = (int32_t)MmsConnection_getLocalDetail(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_identify(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  MmsServerIdentity *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_identify.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_identify" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_identify" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);result = (MmsServerIdentity *)MmsConnection_identify(arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_MmsServerIdentity, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_identifyAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  MmsConnection_IdentifyHandler arg4 = (MmsConnection_IdentifyHandler) 0 ;
  void *arg5 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res5 ;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_identifyAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_identifyAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_identifyAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_identifyAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);{
    {
      int res = SWIG_ConvertFunctionPtr(args[3], (void**)(&arg4), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_char_p_char_p_char__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_identifyAsync" "', argument " "4"" of type '" "MmsConnection_IdentifyHandler""'"); 
      }
    }
  }
  res5 = SWIG_ConvertPtr(args[4],SWIG_as_voidptrptr(&arg5), 0, 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_identifyAsync" "', argument " "5"" of type '" "void *""'"); 
  }MmsConnection_identifyAsync(arg1,arg2,arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsServerIdentity_destroy(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsServerIdentity *arg1 = (MmsServerIdentity *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsServerIdentity_destroy.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_MmsServerIdentity, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsServerIdentity_destroy" "', argument " "1"" of type '" "MmsServerIdentity *""'"); 
  }
  arg1 = reinterpret_cast< MmsServerIdentity * >(argp1);MmsServerIdentity_destroy(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_getServerStatus(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_getServerStatus.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_getServerStatus" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_getServerStatus" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_getServerStatus" "', argument " "3"" of type '" "int *""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_getServerStatus" "', argument " "4"" of type '" "int *""'"); 
  }
  arg4 = reinterpret_cast< int * >(argp4);ecode5 = SWIG_AsVal_bool(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "MmsConnection_getServerStatus" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);MmsConnection_getServerStatus(arg1,arg2,arg3,arg4,arg5);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_getServerStatusAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  bool arg4 ;
  MmsConnection_GetServerStatusHandler arg5 = (MmsConnection_GetServerStatusHandler) 0 ;
  void *arg6 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  int res6 ;
  
  if (args.Length() < 6 || args.Length() > 6) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_getServerStatusAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_getServerStatusAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_getServerStatusAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_getServerStatusAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);ecode4 = SWIG_AsVal_bool(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "MmsConnection_getServerStatusAsync" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);{
    {
      int res = SWIG_ConvertFunctionPtr(args[4], (void**)(&arg5), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_int_int__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_getServerStatusAsync" "', argument " "5"" of type '" "MmsConnection_GetServerStatusHandler""'"); 
      }
    }
  }
  res6 = SWIG_ConvertPtr(args[5],SWIG_as_voidptrptr(&arg6), 0, 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "MmsConnection_getServerStatusAsync" "', argument " "6"" of type '" "void *""'"); 
  }MmsConnection_getServerStatusAsync(arg1,arg2,arg3,arg4,arg5,arg6);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_fileOpen(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  uint32_t arg4 ;
  uint32_t *arg5 = (uint32_t *) 0 ;
  uint64_t *arg6 = (uint64_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  int32_t result;
  
  if (args.Length() < 6 || args.Length() > 6) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_fileOpen.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_fileOpen" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_fileOpen" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_fileOpen" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_unsigned_SS_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "MmsConnection_fileOpen" "', argument " "4"" of type '" "uint32_t""'");
  } 
  arg4 = static_cast< uint32_t >(val4);res5 = SWIG_ConvertPtr(args[4], &argp5,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_fileOpen" "', argument " "5"" of type '" "uint32_t *""'"); 
  }
  arg5 = reinterpret_cast< uint32_t * >(argp5);res6 = SWIG_ConvertPtr(args[5], &argp6,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "MmsConnection_fileOpen" "', argument " "6"" of type '" "uint64_t *""'"); 
  }
  arg6 = reinterpret_cast< uint64_t * >(argp6);result = (int32_t)MmsConnection_fileOpen(arg1,arg2,(char const *)arg3,arg4,arg5,arg6);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_fileOpenAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  uint32_t arg5 ;
  MmsConnection_FileOpenHandler arg6 = (MmsConnection_FileOpenHandler) 0 ;
  void *arg7 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  int res7 ;
  
  if (args.Length() < 7 || args.Length() > 7) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_fileOpenAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_fileOpenAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_fileOpenAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_fileOpenAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_fileOpenAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);ecode5 = SWIG_AsVal_unsigned_SS_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "MmsConnection_fileOpenAsync" "', argument " "5"" of type '" "uint32_t""'");
  } 
  arg5 = static_cast< uint32_t >(val5);{
    {
      int res = SWIG_ConvertFunctionPtr(args[5], (void**)(&arg6), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_int_unsigned_int_unsigned_long_long__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_fileOpenAsync" "', argument " "6"" of type '" "MmsConnection_FileOpenHandler""'"); 
      }
    }
  }
  res7 = SWIG_ConvertPtr(args[6],SWIG_as_voidptrptr(&arg7), 0, 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "MmsConnection_fileOpenAsync" "', argument " "7"" of type '" "void *""'"); 
  }MmsConnection_fileOpenAsync(arg1,arg2,arg3,(char const *)arg4,arg5,arg6,arg7);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_fileRead(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  int32_t arg3 ;
  MmsFileReadHandler arg4 = (MmsFileReadHandler) 0 ;
  void *arg5 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int res5 ;
  bool result;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_fileRead.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_fileRead" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_fileRead" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MmsConnection_fileRead" "', argument " "3"" of type '" "int32_t""'");
  } 
  arg3 = static_cast< int32_t >(val3);{
    {
      int res = SWIG_ConvertFunctionPtr(args[3], (void**)(&arg4), SWIGTYPE_p_f_p_void_int_p_unsigned_char_unsigned_int__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_fileRead" "', argument " "4"" of type '" "MmsFileReadHandler""'"); 
      }
    }
  }
  res5 = SWIG_ConvertPtr(args[4],SWIG_as_voidptrptr(&arg5), 0, 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_fileRead" "', argument " "5"" of type '" "void *""'"); 
  }result = (bool)MmsConnection_fileRead(arg1,arg2,arg3,arg4,arg5);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_fileReadAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  int32_t arg4 ;
  MmsConnection_FileReadHandler arg5 = (MmsConnection_FileReadHandler) 0 ;
  void *arg6 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int res6 ;
  
  if (args.Length() < 6 || args.Length() > 6) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_fileReadAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_fileReadAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_fileReadAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_fileReadAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);ecode4 = SWIG_AsVal_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "MmsConnection_fileReadAsync" "', argument " "4"" of type '" "int32_t""'");
  } 
  arg4 = static_cast< int32_t >(val4);{
    {
      int res = SWIG_ConvertFunctionPtr(args[4], (void**)(&arg5), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_int_p_unsigned_char_unsigned_int_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_fileReadAsync" "', argument " "5"" of type '" "MmsConnection_FileReadHandler""'"); 
      }
    }
  }
  res6 = SWIG_ConvertPtr(args[5],SWIG_as_voidptrptr(&arg6), 0, 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "MmsConnection_fileReadAsync" "', argument " "6"" of type '" "void *""'"); 
  }MmsConnection_fileReadAsync(arg1,arg2,arg3,arg4,arg5,arg6);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_fileClose(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  int32_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_fileClose.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_fileClose" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_fileClose" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MmsConnection_fileClose" "', argument " "3"" of type '" "int32_t""'");
  } 
  arg3 = static_cast< int32_t >(val3);MmsConnection_fileClose(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_fileCloseAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  uint32_t arg4 ;
  MmsConnection_GenericServiceHandler arg5 = (MmsConnection_GenericServiceHandler) 0 ;
  void *arg6 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  int res6 ;
  
  if (args.Length() < 6 || args.Length() > 6) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_fileCloseAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_fileCloseAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_fileCloseAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_fileCloseAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);ecode4 = SWIG_AsVal_unsigned_SS_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "MmsConnection_fileCloseAsync" "', argument " "4"" of type '" "uint32_t""'");
  } 
  arg4 = static_cast< uint32_t >(val4);{
    {
      int res = SWIG_ConvertFunctionPtr(args[4], (void**)(&arg5), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_fileCloseAsync" "', argument " "5"" of type '" "MmsConnection_GenericServiceHandler""'"); 
      }
    }
  }
  res6 = SWIG_ConvertPtr(args[5],SWIG_as_voidptrptr(&arg6), 0, 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "MmsConnection_fileCloseAsync" "', argument " "6"" of type '" "void *""'"); 
  }MmsConnection_fileCloseAsync(arg1,arg2,arg3,arg4,arg5,arg6);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_fileDelete(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_fileDelete.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_fileDelete" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_fileDelete" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_fileDelete" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);MmsConnection_fileDelete(arg1,arg2,(char const *)arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_fileDeleteAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  MmsConnection_GenericServiceHandler arg5 = (MmsConnection_GenericServiceHandler) 0 ;
  void *arg6 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res6 ;
  
  if (args.Length() < 6 || args.Length() > 6) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_fileDeleteAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_fileDeleteAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_fileDeleteAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_fileDeleteAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_fileDeleteAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);{
    {
      int res = SWIG_ConvertFunctionPtr(args[4], (void**)(&arg5), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_fileDeleteAsync" "', argument " "5"" of type '" "MmsConnection_GenericServiceHandler""'"); 
      }
    }
  }
  res6 = SWIG_ConvertPtr(args[5],SWIG_as_voidptrptr(&arg6), 0, 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "MmsConnection_fileDeleteAsync" "', argument " "6"" of type '" "void *""'"); 
  }MmsConnection_fileDeleteAsync(arg1,arg2,arg3,(char const *)arg4,arg5,arg6);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_fileRename(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_fileRename.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_fileRename" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_fileRename" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_fileRename" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_fileRename" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);MmsConnection_fileRename(arg1,arg2,(char const *)arg3,(char const *)arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_fileRenameAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  MmsConnection_GenericServiceHandler arg6 = (MmsConnection_GenericServiceHandler) 0 ;
  void *arg7 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res7 ;
  
  if (args.Length() < 7 || args.Length() > 7) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_fileRenameAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_fileRenameAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_fileRenameAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_fileRenameAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_fileRenameAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_AsCharPtrAndSize(args[4], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_fileRenameAsync" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);{
    {
      int res = SWIG_ConvertFunctionPtr(args[5], (void**)(&arg6), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_fileRenameAsync" "', argument " "6"" of type '" "MmsConnection_GenericServiceHandler""'"); 
      }
    }
  }
  res7 = SWIG_ConvertPtr(args[6],SWIG_as_voidptrptr(&arg7), 0, 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "MmsConnection_fileRenameAsync" "', argument " "7"" of type '" "void *""'"); 
  }MmsConnection_fileRenameAsync(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_obtainFile(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_obtainFile.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_obtainFile" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_obtainFile" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_obtainFile" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_obtainFile" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);MmsConnection_obtainFile(arg1,arg2,(char const *)arg3,(char const *)arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_obtainFileAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  MmsConnection_GenericServiceHandler arg6 = (MmsConnection_GenericServiceHandler) 0 ;
  void *arg7 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res7 ;
  
  if (args.Length() < 7 || args.Length() > 7) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_obtainFileAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_obtainFileAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_obtainFileAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_obtainFileAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_obtainFileAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_AsCharPtrAndSize(args[4], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_obtainFileAsync" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);{
    {
      int res = SWIG_ConvertFunctionPtr(args[5], (void**)(&arg6), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_obtainFileAsync" "', argument " "6"" of type '" "MmsConnection_GenericServiceHandler""'"); 
      }
    }
  }
  res7 = SWIG_ConvertPtr(args[6],SWIG_as_voidptrptr(&arg7), 0, 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "MmsConnection_obtainFileAsync" "', argument " "7"" of type '" "void *""'"); 
  }MmsConnection_obtainFileAsync(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_getFileDirectory(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  MmsFileDirectoryHandler arg5 = (MmsFileDirectoryHandler) 0 ;
  void *arg6 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res6 ;
  bool result;
  
  if (args.Length() < 6 || args.Length() > 6) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_getFileDirectory.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_getFileDirectory" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_getFileDirectory" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_getFileDirectory" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_getFileDirectory" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);{
    {
      int res = SWIG_ConvertFunctionPtr(args[4], (void**)(&arg5), SWIGTYPE_p_f_p_void_p_char_unsigned_int_unsigned_long_long__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_getFileDirectory" "', argument " "5"" of type '" "MmsFileDirectoryHandler""'"); 
      }
    }
  }
  res6 = SWIG_ConvertPtr(args[5],SWIG_as_voidptrptr(&arg6), 0, 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "MmsConnection_getFileDirectory" "', argument " "6"" of type '" "void *""'"); 
  }result = (bool)MmsConnection_getFileDirectory(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,arg6);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_getFileDirectoryAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  MmsConnection_FileDirectoryHandler arg6 = (MmsConnection_FileDirectoryHandler) 0 ;
  void *arg7 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res7 ;
  
  if (args.Length() < 7 || args.Length() > 7) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_getFileDirectoryAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_getFileDirectoryAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_getFileDirectoryAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_getFileDirectoryAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_getFileDirectoryAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_AsCharPtrAndSize(args[4], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_getFileDirectoryAsync" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);{
    {
      int res = SWIG_ConvertFunctionPtr(args[5], (void**)(&arg6), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_char_unsigned_int_unsigned_long_long_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_getFileDirectoryAsync" "', argument " "6"" of type '" "MmsConnection_FileDirectoryHandler""'"); 
      }
    }
  }
  res7 = SWIG_ConvertPtr(args[6],SWIG_as_voidptrptr(&arg7), 0, 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "MmsConnection_getFileDirectoryAsync" "', argument " "7"" of type '" "void *""'"); 
  }MmsConnection_getFileDirectoryAsync(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_sMmsJournalEntry_entryID_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sMmsJournalEntry *arg1 = (sMmsJournalEntry *) 0 ;
  MmsValue *arg2 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsJournalEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sMmsJournalEntry_entryID_set" "', argument " "1"" of type '" "sMmsJournalEntry *""'"); 
  }
  arg1 = reinterpret_cast< sMmsJournalEntry * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sMmsValue, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sMmsJournalEntry_entryID_set" "', argument " "2"" of type '" "MmsValue *""'"); 
  }
  arg2 = reinterpret_cast< MmsValue * >(argp2);if (arg1) (arg1)->entryID = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sMmsJournalEntry_entryID_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sMmsJournalEntry *arg1 = (sMmsJournalEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsValue *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsJournalEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sMmsJournalEntry_entryID_get" "', argument " "1"" of type '" "sMmsJournalEntry *""'"); 
  }
  arg1 = reinterpret_cast< sMmsJournalEntry * >(argp1);result = (MmsValue *) ((arg1)->entryID);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sMmsJournalEntry_occurenceTime_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sMmsJournalEntry *arg1 = (sMmsJournalEntry *) 0 ;
  MmsValue *arg2 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsJournalEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sMmsJournalEntry_occurenceTime_set" "', argument " "1"" of type '" "sMmsJournalEntry *""'"); 
  }
  arg1 = reinterpret_cast< sMmsJournalEntry * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sMmsValue, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sMmsJournalEntry_occurenceTime_set" "', argument " "2"" of type '" "MmsValue *""'"); 
  }
  arg2 = reinterpret_cast< MmsValue * >(argp2);if (arg1) (arg1)->occurenceTime = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sMmsJournalEntry_occurenceTime_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sMmsJournalEntry *arg1 = (sMmsJournalEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsValue *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsJournalEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sMmsJournalEntry_occurenceTime_get" "', argument " "1"" of type '" "sMmsJournalEntry *""'"); 
  }
  arg1 = reinterpret_cast< sMmsJournalEntry * >(argp1);result = (MmsValue *) ((arg1)->occurenceTime);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sMmsJournalEntry_journalVariables_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sMmsJournalEntry *arg1 = (sMmsJournalEntry *) 0 ;
  LinkedList arg2 = (LinkedList) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsJournalEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sMmsJournalEntry_journalVariables_set" "', argument " "1"" of type '" "sMmsJournalEntry *""'"); 
  }
  arg1 = reinterpret_cast< sMmsJournalEntry * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sLinkedList, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sMmsJournalEntry_journalVariables_set" "', argument " "2"" of type '" "LinkedList""'"); 
  }
  arg2 = reinterpret_cast< LinkedList >(argp2);if (arg1) (arg1)->journalVariables = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sMmsJournalEntry_journalVariables_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sMmsJournalEntry *arg1 = (sMmsJournalEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  LinkedList result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsJournalEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sMmsJournalEntry_journalVariables_get" "', argument " "1"" of type '" "sMmsJournalEntry *""'"); 
  }
  arg1 = reinterpret_cast< sMmsJournalEntry * >(argp1);result = (LinkedList) ((arg1)->journalVariables);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_sMmsJournalEntry(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  sMmsJournalEntry *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_sMmsJournalEntry.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_sMmsJournalEntry.");
  result = (sMmsJournalEntry *)new sMmsJournalEntry();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_sMmsJournalEntry, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_sMmsJournalEntry(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    sMmsJournalEntry * arg1 = (sMmsJournalEntry *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_sMmsJournalVariable_tag_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sMmsJournalVariable *arg1 = (sMmsJournalVariable *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsJournalVariable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sMmsJournalVariable_tag_set" "', argument " "1"" of type '" "sMmsJournalVariable *""'"); 
  }
  arg1 = reinterpret_cast< sMmsJournalVariable * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sMmsJournalVariable_tag_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->tag;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->tag = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->tag = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sMmsJournalVariable_tag_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sMmsJournalVariable *arg1 = (sMmsJournalVariable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsJournalVariable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sMmsJournalVariable_tag_get" "', argument " "1"" of type '" "sMmsJournalVariable *""'"); 
  }
  arg1 = reinterpret_cast< sMmsJournalVariable * >(argp1);result = (char *) ((arg1)->tag);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sMmsJournalVariable_value_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sMmsJournalVariable *arg1 = (sMmsJournalVariable *) 0 ;
  MmsValue *arg2 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsJournalVariable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sMmsJournalVariable_value_set" "', argument " "1"" of type '" "sMmsJournalVariable *""'"); 
  }
  arg1 = reinterpret_cast< sMmsJournalVariable * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sMmsValue, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sMmsJournalVariable_value_set" "', argument " "2"" of type '" "MmsValue *""'"); 
  }
  arg2 = reinterpret_cast< MmsValue * >(argp2);if (arg1) (arg1)->value = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sMmsJournalVariable_value_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sMmsJournalVariable *arg1 = (sMmsJournalVariable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsValue *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsJournalVariable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sMmsJournalVariable_value_get" "', argument " "1"" of type '" "sMmsJournalVariable *""'"); 
  }
  arg1 = reinterpret_cast< sMmsJournalVariable * >(argp1);result = (MmsValue *) ((arg1)->value);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_sMmsJournalVariable(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  sMmsJournalVariable *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_sMmsJournalVariable.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_sMmsJournalVariable.");
  result = (sMmsJournalVariable *)new sMmsJournalVariable();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_sMmsJournalVariable, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_sMmsJournalVariable(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    sMmsJournalVariable * arg1 = (sMmsJournalVariable *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue _wrap_MmsJournalEntry_destroy(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsJournalEntry arg1 = (MmsJournalEntry) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsJournalEntry_destroy.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsJournalEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsJournalEntry_destroy" "', argument " "1"" of type '" "MmsJournalEntry""'"); 
  }
  arg1 = reinterpret_cast< MmsJournalEntry >(argp1);MmsJournalEntry_destroy(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsJournalEntry_getEntryID(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsJournalEntry arg1 = (MmsJournalEntry) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsJournalEntry_getEntryID.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsJournalEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsJournalEntry_getEntryID" "', argument " "1"" of type '" "MmsJournalEntry""'"); 
  }
  arg1 = reinterpret_cast< MmsJournalEntry >(argp1);result = (MmsValue *)MmsJournalEntry_getEntryID(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsJournalEntry_getOccurenceTime(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsJournalEntry arg1 = (MmsJournalEntry) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsJournalEntry_getOccurenceTime.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsJournalEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsJournalEntry_getOccurenceTime" "', argument " "1"" of type '" "MmsJournalEntry""'"); 
  }
  arg1 = reinterpret_cast< MmsJournalEntry >(argp1);result = (MmsValue *)MmsJournalEntry_getOccurenceTime(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsJournalEntry_getJournalVariables(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsJournalEntry arg1 = (MmsJournalEntry) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  LinkedList result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsJournalEntry_getJournalVariables.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsJournalEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsJournalEntry_getJournalVariables" "', argument " "1"" of type '" "MmsJournalEntry""'"); 
  }
  arg1 = reinterpret_cast< MmsJournalEntry >(argp1);result = (LinkedList)MmsJournalEntry_getJournalVariables(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsJournalVariable_getTag(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsJournalVariable arg1 = (MmsJournalVariable) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsJournalVariable_getTag.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsJournalVariable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsJournalVariable_getTag" "', argument " "1"" of type '" "MmsJournalVariable""'"); 
  }
  arg1 = reinterpret_cast< MmsJournalVariable >(argp1);result = (char *)MmsJournalVariable_getTag(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsJournalVariable_getValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsJournalVariable arg1 = (MmsJournalVariable) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsJournalVariable_getValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsJournalVariable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsJournalVariable_getValue" "', argument " "1"" of type '" "MmsJournalVariable""'"); 
  }
  arg1 = reinterpret_cast< MmsJournalVariable >(argp1);result = (MmsValue *)MmsJournalVariable_getValue(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_readJournalTimeRange(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  MmsValue *arg5 = (MmsValue *) 0 ;
  MmsValue *arg6 = (MmsValue *) 0 ;
  bool *arg7 = (bool *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  LinkedList result;
  
  if (args.Length() < 7 || args.Length() > 7) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_readJournalTimeRange.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_readJournalTimeRange" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_readJournalTimeRange" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_readJournalTimeRange" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_readJournalTimeRange" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_ConvertPtr(args[4], &argp5,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_readJournalTimeRange" "', argument " "5"" of type '" "MmsValue *""'"); 
  }
  arg5 = reinterpret_cast< MmsValue * >(argp5);res6 = SWIG_ConvertPtr(args[5], &argp6,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "MmsConnection_readJournalTimeRange" "', argument " "6"" of type '" "MmsValue *""'"); 
  }
  arg6 = reinterpret_cast< MmsValue * >(argp6);res7 = SWIG_ConvertPtr(args[6], &argp7,SWIGTYPE_p_bool, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "MmsConnection_readJournalTimeRange" "', argument " "7"" of type '" "bool *""'"); 
  }
  arg7 = reinterpret_cast< bool * >(argp7);result = (LinkedList)MmsConnection_readJournalTimeRange(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,arg6,arg7);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_readJournalTimeRangeAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  MmsValue *arg6 = (MmsValue *) 0 ;
  MmsValue *arg7 = (MmsValue *) 0 ;
  MmsConnection_ReadJournalHandler arg8 = (MmsConnection_ReadJournalHandler) 0 ;
  void *arg9 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  int res9 ;
  
  if (args.Length() < 9 || args.Length() > 9) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_readJournalTimeRangeAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_readJournalTimeRangeAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_readJournalTimeRangeAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_readJournalTimeRangeAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_readJournalTimeRangeAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_AsCharPtrAndSize(args[4], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_readJournalTimeRangeAsync" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);res6 = SWIG_ConvertPtr(args[5], &argp6,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "MmsConnection_readJournalTimeRangeAsync" "', argument " "6"" of type '" "MmsValue *""'"); 
  }
  arg6 = reinterpret_cast< MmsValue * >(argp6);res7 = SWIG_ConvertPtr(args[6], &argp7,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "MmsConnection_readJournalTimeRangeAsync" "', argument " "7"" of type '" "MmsValue *""'"); 
  }
  arg7 = reinterpret_cast< MmsValue * >(argp7);{
    {
      int res = SWIG_ConvertFunctionPtr(args[7], (void**)(&arg8), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_sLinkedList_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_readJournalTimeRangeAsync" "', argument " "8"" of type '" "MmsConnection_ReadJournalHandler""'"); 
      }
    }
  }
  res9 = SWIG_ConvertPtr(args[8],SWIG_as_voidptrptr(&arg9), 0, 0);
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "MmsConnection_readJournalTimeRangeAsync" "', argument " "9"" of type '" "void *""'"); 
  }MmsConnection_readJournalTimeRangeAsync(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7,arg8,arg9);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_readJournalStartAfter(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  MmsError *arg2 = (MmsError *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  MmsValue *arg5 = (MmsValue *) 0 ;
  MmsValue *arg6 = (MmsValue *) 0 ;
  bool *arg7 = (bool *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  LinkedList result;
  
  if (args.Length() < 7 || args.Length() > 7) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_readJournalStartAfter.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_readJournalStartAfter" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_readJournalStartAfter" "', argument " "2"" of type '" "MmsError *""'"); 
  }
  arg2 = reinterpret_cast< MmsError * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_readJournalStartAfter" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_readJournalStartAfter" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_ConvertPtr(args[4], &argp5,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_readJournalStartAfter" "', argument " "5"" of type '" "MmsValue *""'"); 
  }
  arg5 = reinterpret_cast< MmsValue * >(argp5);res6 = SWIG_ConvertPtr(args[5], &argp6,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "MmsConnection_readJournalStartAfter" "', argument " "6"" of type '" "MmsValue *""'"); 
  }
  arg6 = reinterpret_cast< MmsValue * >(argp6);res7 = SWIG_ConvertPtr(args[6], &argp7,SWIGTYPE_p_bool, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "MmsConnection_readJournalStartAfter" "', argument " "7"" of type '" "bool *""'"); 
  }
  arg7 = reinterpret_cast< bool * >(argp7);result = (LinkedList)MmsConnection_readJournalStartAfter(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,arg6,arg7);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsConnection_readJournalStartAfterAsync(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsConnection arg1 = (MmsConnection) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  MmsError *arg3 = (MmsError *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  MmsValue *arg6 = (MmsValue *) 0 ;
  MmsValue *arg7 = (MmsValue *) 0 ;
  MmsConnection_ReadJournalHandler arg8 = (MmsConnection_ReadJournalHandler) 0 ;
  void *arg9 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  int res9 ;
  
  if (args.Length() < 9 || args.Length() > 9) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsConnection_readJournalStartAfterAsync.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsConnection_readJournalStartAfterAsync" "', argument " "1"" of type '" "MmsConnection""'"); 
  }
  arg1 = reinterpret_cast< MmsConnection >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsConnection_readJournalStartAfterAsync" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_MmsError, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsConnection_readJournalStartAfterAsync" "', argument " "3"" of type '" "MmsError *""'"); 
  }
  arg3 = reinterpret_cast< MmsError * >(argp3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsConnection_readJournalStartAfterAsync" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);res5 = SWIG_AsCharPtrAndSize(args[4], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MmsConnection_readJournalStartAfterAsync" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);res6 = SWIG_ConvertPtr(args[5], &argp6,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "MmsConnection_readJournalStartAfterAsync" "', argument " "6"" of type '" "MmsValue *""'"); 
  }
  arg6 = reinterpret_cast< MmsValue * >(argp6);res7 = SWIG_ConvertPtr(args[6], &argp7,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "MmsConnection_readJournalStartAfterAsync" "', argument " "7"" of type '" "MmsValue *""'"); 
  }
  arg7 = reinterpret_cast< MmsValue * >(argp7);{
    {
      int res = SWIG_ConvertFunctionPtr(args[7], (void**)(&arg8), SWIGTYPE_p_f_unsigned_int_p_void_enum_MmsError_p_sLinkedList_bool__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "MmsConnection_readJournalStartAfterAsync" "', argument " "8"" of type '" "MmsConnection_ReadJournalHandler""'"); 
      }
    }
  }
  res9 = SWIG_ConvertPtr(args[8],SWIG_as_voidptrptr(&arg9), 0, 0);
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "MmsConnection_readJournalStartAfterAsync" "', argument " "9"" of type '" "void *""'"); 
  }MmsConnection_readJournalStartAfterAsync(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7,arg8,arg9);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue exports_IEC_61850_EDITION_1_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC_61850_EDITION_2_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC_61850_EDITION_2_1_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_PhyComAddress_vlanPriority_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  PhyComAddress *arg1 = (PhyComAddress *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_PhyComAddress, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhyComAddress_vlanPriority_set" "', argument " "1"" of type '" "PhyComAddress *""'"); 
  }
  arg1 = reinterpret_cast< PhyComAddress * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_char(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PhyComAddress_vlanPriority_set" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = static_cast< uint8_t >(val2);if (arg1) (arg1)->vlanPriority = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_PhyComAddress_vlanPriority_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  PhyComAddress *arg1 = (PhyComAddress *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_PhyComAddress, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhyComAddress_vlanPriority_get" "', argument " "1"" of type '" "PhyComAddress *""'"); 
  }
  arg1 = reinterpret_cast< PhyComAddress * >(argp1);result = (uint8_t) ((arg1)->vlanPriority);
  jsresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_PhyComAddress_vlanId_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  PhyComAddress *arg1 = (PhyComAddress *) 0 ;
  uint16_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_PhyComAddress, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhyComAddress_vlanId_set" "', argument " "1"" of type '" "PhyComAddress *""'"); 
  }
  arg1 = reinterpret_cast< PhyComAddress * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_short(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PhyComAddress_vlanId_set" "', argument " "2"" of type '" "uint16_t""'");
  } 
  arg2 = static_cast< uint16_t >(val2);if (arg1) (arg1)->vlanId = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_PhyComAddress_vlanId_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  PhyComAddress *arg1 = (PhyComAddress *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint16_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_PhyComAddress, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhyComAddress_vlanId_get" "', argument " "1"" of type '" "PhyComAddress *""'"); 
  }
  arg1 = reinterpret_cast< PhyComAddress * >(argp1);result = (uint16_t) ((arg1)->vlanId);
  jsresult = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_PhyComAddress_appId_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  PhyComAddress *arg1 = (PhyComAddress *) 0 ;
  uint16_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_PhyComAddress, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhyComAddress_appId_set" "', argument " "1"" of type '" "PhyComAddress *""'"); 
  }
  arg1 = reinterpret_cast< PhyComAddress * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_short(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PhyComAddress_appId_set" "', argument " "2"" of type '" "uint16_t""'");
  } 
  arg2 = static_cast< uint16_t >(val2);if (arg1) (arg1)->appId = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_PhyComAddress_appId_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  PhyComAddress *arg1 = (PhyComAddress *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint16_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_PhyComAddress, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhyComAddress_appId_get" "', argument " "1"" of type '" "PhyComAddress *""'"); 
  }
  arg1 = reinterpret_cast< PhyComAddress * >(argp1);result = (uint16_t) ((arg1)->appId);
  jsresult = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_PhyComAddress_dstAddress_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  PhyComAddress *arg1 = (PhyComAddress *) 0 ;
  uint8_t *arg2 = (uint8_t *) (uint8_t *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_PhyComAddress, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhyComAddress_dstAddress_set" "', argument " "1"" of type '" "PhyComAddress *""'"); 
  }
  arg1 = reinterpret_cast< PhyComAddress * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PhyComAddress_dstAddress_set" "', argument " "2"" of type '" "uint8_t [6]""'"); 
  } 
  arg2 = reinterpret_cast< uint8_t * >(argp2);{
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)6; ++ii) *(uint8_t *)&arg1->dstAddress[ii] = *((uint8_t *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dstAddress""' of type '""uint8_t [6]""'");
    }
  }
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_PhyComAddress_dstAddress_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  PhyComAddress *arg1 = (PhyComAddress *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_PhyComAddress, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhyComAddress_dstAddress_get" "', argument " "1"" of type '" "PhyComAddress *""'"); 
  }
  arg1 = reinterpret_cast< PhyComAddress * >(argp1);result = (uint8_t *)(uint8_t *) ((arg1)->dstAddress);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_PhyComAddress(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  PhyComAddress *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_PhyComAddress.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_PhyComAddress.");
  result = (PhyComAddress *)new PhyComAddress();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_PhyComAddress, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_PhyComAddress(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    PhyComAddress * arg1 = (PhyComAddress *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue exports_CONTROL_MODEL_STATUS_ONLY_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(CONTROL_MODEL_STATUS_ONLY));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_MODEL_DIRECT_NORMAL_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(CONTROL_MODEL_DIRECT_NORMAL));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_MODEL_SBO_NORMAL_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(CONTROL_MODEL_SBO_NORMAL));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_MODEL_DIRECT_ENHANCED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(CONTROL_MODEL_DIRECT_ENHANCED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_MODEL_SBO_ENHANCED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(CONTROL_MODEL_SBO_ENHANCED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_TRG_OPT_DATA_CHANGED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_TRG_OPT_QUALITY_CHANGED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_TRG_OPT_DATA_UPDATE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(4));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_TRG_OPT_INTEGRITY_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(8));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_TRG_OPT_GI_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(16));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_TRG_OPT_TRANSIENT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(128));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RPT_OPT_SEQ_NUM_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RPT_OPT_TIME_STAMP_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RPT_OPT_REASON_FOR_INCLUSION_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(4));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RPT_OPT_DATA_SET_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(8));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RPT_OPT_DATA_REFERENCE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(16));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RPT_OPT_BUFFER_OVERFLOW_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(32));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RPT_OPT_ENTRY_ID_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(64));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RPT_OPT_CONF_REV_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(128));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_ORCAT_NOT_SUPPORTED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_ORCAT_BAY_CONTROL_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_ORCAT_STATION_CONTROL_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_ORCAT_REMOTE_CONTROL_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(3));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_ORCAT_AUTOMATIC_BAY_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(4));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_ORCAT_AUTOMATIC_STATION_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(5));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_ORCAT_AUTOMATIC_REMOTE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(6));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_ORCAT_MAINTENANCE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(7));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_ORCAT_PROCESS_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(8));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_UNKNOWN_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_UNKNOWN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_NOT_SUPPORTED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_NOT_SUPPORTED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_BLOCKED_BY_SWITCHING_HIERARCHY_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_BLOCKED_BY_SWITCHING_HIERARCHY));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_SELECT_FAILED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_SELECT_FAILED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_INVALID_POSITION_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_INVALID_POSITION));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_POSITION_REACHED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_POSITION_REACHED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_PARAMETER_CHANGE_IN_EXECUTION_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_PARAMETER_CHANGE_IN_EXECUTION));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_STEP_LIMIT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_STEP_LIMIT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_BLOCKED_BY_MODE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_BLOCKED_BY_MODE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_BLOCKED_BY_PROCESS_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_BLOCKED_BY_PROCESS));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_BLOCKED_BY_INTERLOCKING_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_BLOCKED_BY_INTERLOCKING));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_BLOCKED_BY_SYNCHROCHECK_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_BLOCKED_BY_SYNCHROCHECK));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_COMMAND_ALREADY_IN_EXECUTION_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_COMMAND_ALREADY_IN_EXECUTION));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_BLOCKED_BY_HEALTH_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_BLOCKED_BY_HEALTH));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_1_OF_N_CONTROL_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_1_OF_N_CONTROL));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_ABORTION_BY_CANCEL_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_ABORTION_BY_CANCEL));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_TIME_LIMIT_OVER_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_TIME_LIMIT_OVER));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_ABORTION_BY_TRIP_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_ABORTION_BY_TRIP));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_OBJECT_NOT_SELECTED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_OBJECT_NOT_SELECTED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_OBJECT_ALREADY_SELECTED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_OBJECT_ALREADY_SELECTED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_NO_ACCESS_AUTHORITY_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_NO_ACCESS_AUTHORITY));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_ENDED_WITH_OVERSHOOT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_ENDED_WITH_OVERSHOOT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_ABORTION_DUE_TO_DEVIATION_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_ABORTION_DUE_TO_DEVIATION));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_ABORTION_BY_COMMUNICATION_LOSS_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_ABORTION_BY_COMMUNICATION_LOSS));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_ABORTION_BY_COMMAND_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_ABORTION_BY_COMMAND));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_NONE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_NONE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_INCONSISTENT_PARAMETERS_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_INCONSISTENT_PARAMETERS));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ADD_CAUSE_LOCKED_BY_OTHER_CLIENT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ADD_CAUSE_LOCKED_BY_OTHER_CLIENT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_ERROR_NO_ERROR_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(CONTROL_ERROR_NO_ERROR));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_ERROR_UNKNOWN_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(CONTROL_ERROR_UNKNOWN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_ERROR_TIMEOUT_TEST_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(CONTROL_ERROR_TIMEOUT_TEST));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_ERROR_OPERATOR_TEST_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(CONTROL_ERROR_OPERATOR_TEST));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_FC_ST_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_FC_ST));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_FC_MX_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_FC_MX));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_FC_SP_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_FC_SP));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_FC_SV_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_FC_SV));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_FC_CF_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_FC_CF));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_FC_DC_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_FC_DC));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_FC_SG_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_FC_SG));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_FC_SE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_FC_SE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_FC_SR_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_FC_SR));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_FC_OR_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_FC_OR));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_FC_BL_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_FC_BL));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_FC_EX_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_FC_EX));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_FC_CO_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_FC_CO));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_FC_US_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_FC_US));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_FC_MS_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_FC_MS));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_FC_RP_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_FC_RP));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_FC_BR_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_FC_BR));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_FC_LG_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_FC_LG));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_FC_GO_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_FC_GO));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_FC_ALL_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_FC_ALL));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_FC_NONE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_FC_NONE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_FunctionalConstraint_toString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  FunctionalConstraint arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_FunctionalConstraint_toString.");
  
  ecode1 = SWIG_AsVal_int(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "FunctionalConstraint_toString" "', argument " "1"" of type '" "FunctionalConstraint""'");
  } 
  arg1 = static_cast< FunctionalConstraint >(val1);result = (char *)FunctionalConstraint_toString(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_FunctionalConstraint_fromString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  FunctionalConstraint result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_FunctionalConstraint_fromString.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FunctionalConstraint_fromString" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);result = (FunctionalConstraint)FunctionalConstraint_fromString((char const *)arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue exports_QUALITY_VALIDITY_GOOD_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_QUALITY_VALIDITY_INVALID_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_QUALITY_VALIDITY_RESERVED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_QUALITY_VALIDITY_QUESTIONABLE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(3));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_QUALITY_DETAIL_OVERFLOW_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(4));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_QUALITY_DETAIL_OUT_OF_RANGE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(8));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_QUALITY_DETAIL_BAD_REFERENCE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(16));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_QUALITY_DETAIL_OSCILLATORY_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(32));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_QUALITY_DETAIL_FAILURE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(64));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_QUALITY_DETAIL_OLD_DATA_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(128));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_QUALITY_DETAIL_INCONSISTENT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(256));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_QUALITY_DETAIL_INACCURATE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(512));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_QUALITY_SOURCE_SUBSTITUTED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1024));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_QUALITY_TEST_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(2048));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_QUALITY_OPERATOR_BLOCKED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(4096));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_QUALITY_DERIVED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(8192));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_Quality_getValidity(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Quality *arg1 = (Quality *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Validity result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Quality_getValidity.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_unsigned_short, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quality_getValidity" "', argument " "1"" of type '" "Quality *""'"); 
  }
  arg1 = reinterpret_cast< Quality * >(argp1);result = (Validity)Quality_getValidity(arg1);
  jsresult = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Quality_setValidity(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Quality *arg1 = (Quality *) 0 ;
  Validity arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Quality_setValidity.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_unsigned_short, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quality_setValidity" "', argument " "1"" of type '" "Quality *""'"); 
  }
  arg1 = reinterpret_cast< Quality * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_short(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Quality_setValidity" "', argument " "2"" of type '" "Validity""'");
  } 
  arg2 = static_cast< Validity >(val2);Quality_setValidity(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Quality_setFlag(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Quality *arg1 = (Quality *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Quality_setFlag.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_unsigned_short, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quality_setFlag" "', argument " "1"" of type '" "Quality *""'"); 
  }
  arg1 = reinterpret_cast< Quality * >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Quality_setFlag" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);Quality_setFlag(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Quality_unsetFlag(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Quality *arg1 = (Quality *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Quality_unsetFlag.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_unsigned_short, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quality_unsetFlag" "', argument " "1"" of type '" "Quality *""'"); 
  }
  arg1 = reinterpret_cast< Quality * >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Quality_unsetFlag" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);Quality_unsetFlag(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Quality_isFlagSet(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Quality *arg1 = (Quality *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Quality_isFlagSet.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_unsigned_short, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quality_isFlagSet" "', argument " "1"" of type '" "Quality *""'"); 
  }
  arg1 = reinterpret_cast< Quality * >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Quality_isFlagSet" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);result = (bool)Quality_isFlagSet(arg1,arg2);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Quality_fromMmsValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Quality result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Quality_fromMmsValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quality_fromMmsValue" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (Quality)Quality_fromMmsValue((sMmsValue const *)arg1);
  jsresult = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Quality_toMmsValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Quality *arg1 = (Quality *) 0 ;
  MmsValue *arg2 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Quality_toMmsValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_unsigned_short, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quality_toMmsValue" "', argument " "1"" of type '" "Quality *""'"); 
  }
  arg1 = reinterpret_cast< Quality * >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Quality_toMmsValue" "', argument " "2"" of type '" "MmsValue *""'"); 
  }
  arg2 = reinterpret_cast< MmsValue * >(argp2);result = (MmsValue *)Quality_toMmsValue(arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue exports_DBPOS_INTERMEDIATE_STATE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(DBPOS_INTERMEDIATE_STATE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_DBPOS_OFF_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(DBPOS_OFF));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_DBPOS_ON_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(DBPOS_ON));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_DBPOS_BAD_STATE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(DBPOS_BAD_STATE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_Dbpos_fromMmsValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Dbpos result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Dbpos_fromMmsValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Dbpos_fromMmsValue" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (Dbpos)Dbpos_fromMmsValue((sMmsValue const *)arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Dbpos_toMmsValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  Dbpos arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Dbpos_toMmsValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Dbpos_toMmsValue" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Dbpos_toMmsValue" "', argument " "2"" of type '" "Dbpos""'");
  } 
  arg2 = static_cast< Dbpos >(val2);result = (MmsValue *)Dbpos_toMmsValue(arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_Timestamp_val_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  Timestamp *arg1 = (Timestamp *) 0 ;
  uint8_t *arg2 = (uint8_t *) (uint8_t *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_Timestamp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Timestamp_val_set" "', argument " "1"" of type '" "Timestamp *""'"); 
  }
  arg1 = reinterpret_cast< Timestamp * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Timestamp_val_set" "', argument " "2"" of type '" "uint8_t [8]""'"); 
  } 
  arg2 = reinterpret_cast< uint8_t * >(argp2);{
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) *(uint8_t *)&arg1->val[ii] = *((uint8_t *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""val""' of type '""uint8_t [8]""'");
    }
  }
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_Timestamp_val_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Timestamp *arg1 = (Timestamp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_Timestamp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Timestamp_val_get" "', argument " "1"" of type '" "Timestamp *""'"); 
  }
  arg1 = reinterpret_cast< Timestamp * >(argp1);result = (uint8_t *)(uint8_t *) ((arg1)->val);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_Timestamp(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  Timestamp *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_Timestamp.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_Timestamp.");
  result = (Timestamp *)new Timestamp();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_Timestamp, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_Timestamp(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    Timestamp * arg1 = (Timestamp *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue _wrap_Timestamp_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Timestamp *result = 0 ;
  
  if (args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Timestamp_create.");
  
  result = (Timestamp *)Timestamp_create();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Timestamp, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Timestamp_createFromByteArray(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  uint8_t *arg1 = (uint8_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Timestamp *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Timestamp_createFromByteArray.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Timestamp_createFromByteArray" "', argument " "1"" of type '" "uint8_t const *""'"); 
  }
  arg1 = reinterpret_cast< uint8_t * >(argp1);result = (Timestamp *)Timestamp_createFromByteArray((unsigned char const *)arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Timestamp, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Timestamp_destroy(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Timestamp *arg1 = (Timestamp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Timestamp_destroy.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_Timestamp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Timestamp_destroy" "', argument " "1"" of type '" "Timestamp *""'"); 
  }
  arg1 = reinterpret_cast< Timestamp * >(argp1);Timestamp_destroy(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Timestamp_clearFlags(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Timestamp *arg1 = (Timestamp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Timestamp_clearFlags.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_Timestamp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Timestamp_clearFlags" "', argument " "1"" of type '" "Timestamp *""'"); 
  }
  arg1 = reinterpret_cast< Timestamp * >(argp1);Timestamp_clearFlags(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Timestamp_getTimeInSeconds(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Timestamp *arg1 = (Timestamp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Timestamp_getTimeInSeconds.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_Timestamp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Timestamp_getTimeInSeconds" "', argument " "1"" of type '" "Timestamp *""'"); 
  }
  arg1 = reinterpret_cast< Timestamp * >(argp1);result = (uint32_t)Timestamp_getTimeInSeconds(arg1);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Timestamp_getTimeInMs(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Timestamp *arg1 = (Timestamp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  msSinceEpoch result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Timestamp_getTimeInMs.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_Timestamp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Timestamp_getTimeInMs" "', argument " "1"" of type '" "Timestamp *""'"); 
  }
  arg1 = reinterpret_cast< Timestamp * >(argp1);result = (msSinceEpoch)Timestamp_getTimeInMs(arg1);
  jsresult = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Timestamp_getTimeInNs(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Timestamp *arg1 = (Timestamp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  nsSinceEpoch result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Timestamp_getTimeInNs.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_Timestamp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Timestamp_getTimeInNs" "', argument " "1"" of type '" "Timestamp *""'"); 
  }
  arg1 = reinterpret_cast< Timestamp * >(argp1);result = (nsSinceEpoch)Timestamp_getTimeInNs(arg1);
  jsresult = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Timestamp_isLeapSecondKnown(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Timestamp *arg1 = (Timestamp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Timestamp_isLeapSecondKnown.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_Timestamp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Timestamp_isLeapSecondKnown" "', argument " "1"" of type '" "Timestamp *""'"); 
  }
  arg1 = reinterpret_cast< Timestamp * >(argp1);result = (bool)Timestamp_isLeapSecondKnown(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Timestamp_setLeapSecondKnown(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Timestamp *arg1 = (Timestamp *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Timestamp_setLeapSecondKnown.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_Timestamp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Timestamp_setLeapSecondKnown" "', argument " "1"" of type '" "Timestamp *""'"); 
  }
  arg1 = reinterpret_cast< Timestamp * >(argp1);ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Timestamp_setLeapSecondKnown" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);Timestamp_setLeapSecondKnown(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Timestamp_hasClockFailure(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Timestamp *arg1 = (Timestamp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Timestamp_hasClockFailure.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_Timestamp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Timestamp_hasClockFailure" "', argument " "1"" of type '" "Timestamp *""'"); 
  }
  arg1 = reinterpret_cast< Timestamp * >(argp1);result = (bool)Timestamp_hasClockFailure(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Timestamp_setClockFailure(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Timestamp *arg1 = (Timestamp *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Timestamp_setClockFailure.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_Timestamp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Timestamp_setClockFailure" "', argument " "1"" of type '" "Timestamp *""'"); 
  }
  arg1 = reinterpret_cast< Timestamp * >(argp1);ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Timestamp_setClockFailure" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);Timestamp_setClockFailure(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Timestamp_isClockNotSynchronized(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Timestamp *arg1 = (Timestamp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Timestamp_isClockNotSynchronized.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_Timestamp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Timestamp_isClockNotSynchronized" "', argument " "1"" of type '" "Timestamp *""'"); 
  }
  arg1 = reinterpret_cast< Timestamp * >(argp1);result = (bool)Timestamp_isClockNotSynchronized(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Timestamp_setClockNotSynchronized(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Timestamp *arg1 = (Timestamp *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Timestamp_setClockNotSynchronized.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_Timestamp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Timestamp_setClockNotSynchronized" "', argument " "1"" of type '" "Timestamp *""'"); 
  }
  arg1 = reinterpret_cast< Timestamp * >(argp1);ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Timestamp_setClockNotSynchronized" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);Timestamp_setClockNotSynchronized(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Timestamp_getSubsecondPrecision(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Timestamp *arg1 = (Timestamp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Timestamp_getSubsecondPrecision.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_Timestamp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Timestamp_getSubsecondPrecision" "', argument " "1"" of type '" "Timestamp *""'"); 
  }
  arg1 = reinterpret_cast< Timestamp * >(argp1);result = (int)Timestamp_getSubsecondPrecision(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Timestamp_setSubsecondPrecision(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Timestamp *arg1 = (Timestamp *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Timestamp_setSubsecondPrecision.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_Timestamp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Timestamp_setSubsecondPrecision" "', argument " "1"" of type '" "Timestamp *""'"); 
  }
  arg1 = reinterpret_cast< Timestamp * >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Timestamp_setSubsecondPrecision" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);Timestamp_setSubsecondPrecision(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Timestamp_setTimeInSeconds(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Timestamp *arg1 = (Timestamp *) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Timestamp_setTimeInSeconds.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_Timestamp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Timestamp_setTimeInSeconds" "', argument " "1"" of type '" "Timestamp *""'"); 
  }
  arg1 = reinterpret_cast< Timestamp * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Timestamp_setTimeInSeconds" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = static_cast< uint32_t >(val2);Timestamp_setTimeInSeconds(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Timestamp_setTimeInMilliseconds(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Timestamp *arg1 = (Timestamp *) 0 ;
  msSinceEpoch arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Timestamp_setTimeInMilliseconds.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_Timestamp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Timestamp_setTimeInMilliseconds" "', argument " "1"" of type '" "Timestamp *""'"); 
  }
  arg1 = reinterpret_cast< Timestamp * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Timestamp_setTimeInMilliseconds" "', argument " "2"" of type '" "msSinceEpoch""'");
  } 
  arg2 = static_cast< msSinceEpoch >(val2);Timestamp_setTimeInMilliseconds(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Timestamp_setTimeInNanoseconds(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Timestamp *arg1 = (Timestamp *) 0 ;
  nsSinceEpoch arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Timestamp_setTimeInNanoseconds.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_Timestamp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Timestamp_setTimeInNanoseconds" "', argument " "1"" of type '" "Timestamp *""'"); 
  }
  arg1 = reinterpret_cast< Timestamp * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Timestamp_setTimeInNanoseconds" "', argument " "2"" of type '" "nsSinceEpoch""'");
  } 
  arg2 = static_cast< nsSinceEpoch >(val2);Timestamp_setTimeInNanoseconds(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Timestamp_setByMmsUtcTime(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Timestamp *arg1 = (Timestamp *) 0 ;
  MmsValue *arg2 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Timestamp_setByMmsUtcTime.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_Timestamp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Timestamp_setByMmsUtcTime" "', argument " "1"" of type '" "Timestamp *""'"); 
  }
  arg1 = reinterpret_cast< Timestamp * >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Timestamp_setByMmsUtcTime" "', argument " "2"" of type '" "MmsValue const *""'"); 
  }
  arg2 = reinterpret_cast< MmsValue * >(argp2);Timestamp_setByMmsUtcTime(arg1,(sMmsValue const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Timestamp_toMmsValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Timestamp *arg1 = (Timestamp *) 0 ;
  MmsValue *arg2 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Timestamp_toMmsValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_Timestamp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Timestamp_toMmsValue" "', argument " "1"" of type '" "Timestamp *""'"); 
  }
  arg1 = reinterpret_cast< Timestamp * >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Timestamp_toMmsValue" "', argument " "2"" of type '" "MmsValue *""'"); 
  }
  arg2 = reinterpret_cast< MmsValue * >(argp2);result = (MmsValue *)Timestamp_toMmsValue(arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Timestamp_fromMmsValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  Timestamp *arg1 = (Timestamp *) 0 ;
  MmsValue *arg2 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  Timestamp *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Timestamp_fromMmsValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_Timestamp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Timestamp_fromMmsValue" "', argument " "1"" of type '" "Timestamp *""'"); 
  }
  arg1 = reinterpret_cast< Timestamp * >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Timestamp_fromMmsValue" "', argument " "2"" of type '" "MmsValue *""'"); 
  }
  arg2 = reinterpret_cast< MmsValue * >(argp2);result = (Timestamp *)Timestamp_fromMmsValue(arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Timestamp, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_LibIEC61850_getVersionString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *result = 0 ;
  
  if (args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_LibIEC61850_getVersionString.");
  
  result = (char *)LibIEC61850_getVersionString();
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue exports_DATA_ACCESS_ERROR_SUCCESS_NO_UPDATE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(DATA_ACCESS_ERROR_SUCCESS_NO_UPDATE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_DATA_ACCESS_ERROR_NO_RESPONSE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(DATA_ACCESS_ERROR_NO_RESPONSE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_DATA_ACCESS_ERROR_SUCCESS_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(DATA_ACCESS_ERROR_SUCCESS));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_DATA_ACCESS_ERROR_OBJECT_INVALIDATED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(DATA_ACCESS_ERROR_OBJECT_INVALIDATED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_DATA_ACCESS_ERROR_HARDWARE_FAULT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(DATA_ACCESS_ERROR_HARDWARE_FAULT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_DATA_ACCESS_ERROR_TEMPORARILY_UNAVAILABLE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(DATA_ACCESS_ERROR_TEMPORARILY_UNAVAILABLE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_DATA_ACCESS_ERROR_OBJECT_ACCESS_DENIED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(DATA_ACCESS_ERROR_OBJECT_ACCESS_DENIED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_DATA_ACCESS_ERROR_OBJECT_UNDEFINED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(DATA_ACCESS_ERROR_OBJECT_UNDEFINED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_DATA_ACCESS_ERROR_INVALID_ADDRESS_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(DATA_ACCESS_ERROR_INVALID_ADDRESS));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_DATA_ACCESS_ERROR_TYPE_UNSUPPORTED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(DATA_ACCESS_ERROR_TYPE_UNSUPPORTED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_DATA_ACCESS_ERROR_TYPE_INCONSISTENT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(DATA_ACCESS_ERROR_TYPE_INCONSISTENT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_DATA_ACCESS_ERROR_OBJECT_ATTRIBUTE_INCONSISTENT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(DATA_ACCESS_ERROR_OBJECT_ATTRIBUTE_INCONSISTENT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_DATA_ACCESS_ERROR_OBJECT_ACCESS_UNSUPPORTED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(DATA_ACCESS_ERROR_OBJECT_ACCESS_UNSUPPORTED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_DATA_ACCESS_ERROR_OBJECT_NONE_EXISTENT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(DATA_ACCESS_ERROR_OBJECT_NONE_EXISTENT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_DATA_ACCESS_ERROR_OBJECT_VALUE_INVALID_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(DATA_ACCESS_ERROR_OBJECT_VALUE_INVALID));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_DATA_ACCESS_ERROR_UNKNOWN_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(DATA_ACCESS_ERROR_UNKNOWN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_MmsValue_createArray(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsVariableSpecification *arg1 = (MmsVariableSpecification *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_createArray.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_MmsVariableSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_createArray" "', argument " "1"" of type '" "MmsVariableSpecification const *""'"); 
  }
  arg1 = reinterpret_cast< MmsVariableSpecification * >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_createArray" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);result = (MmsValue *)MmsValue_createArray((MmsVariableSpecification const *)arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_getArraySize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_getArraySize.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_getArraySize" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (uint32_t)MmsValue_getArraySize((sMmsValue const *)arg1);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_getElement(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_getElement.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_getElement" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_getElement" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);result = (MmsValue *)MmsValue_getElement((sMmsValue const *)arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_createEmptyArray(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_createEmptyArray.");
  
  ecode1 = SWIG_AsVal_int(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MmsValue_createEmptyArray" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);result = (MmsValue *)MmsValue_createEmptyArray(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_setElement(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  int arg2 ;
  MmsValue *arg3 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_setElement.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_setElement" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_setElement" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsValue_setElement" "', argument " "3"" of type '" "MmsValue *""'"); 
  }
  arg3 = reinterpret_cast< MmsValue * >(argp3);MmsValue_setElement(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_getDataAccessError(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsDataAccessError result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_getDataAccessError.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_getDataAccessError" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (MmsDataAccessError)MmsValue_getDataAccessError((sMmsValue const *)arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_toInt64(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int64_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_toInt64.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_toInt64" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (int64_t)MmsValue_toInt64((sMmsValue const *)arg1);
  jsresult = SWIG_From_long_SS_long(static_cast< long long >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_toInt32(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_toInt32.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_toInt32" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (int32_t)MmsValue_toInt32((sMmsValue const *)arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_toUint32(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_toUint32.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_toUint32" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (uint32_t)MmsValue_toUint32((sMmsValue const *)arg1);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_toDouble(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_toDouble.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_toDouble" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (double)MmsValue_toDouble((sMmsValue const *)arg1);
  jsresult = SWIG_From_double(static_cast< double >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_toFloat(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_toFloat.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_toFloat" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (float)MmsValue_toFloat((sMmsValue const *)arg1);
  jsresult = SWIG_From_float(static_cast< float >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_toUnixTimestamp(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_toUnixTimestamp.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_toUnixTimestamp" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (uint32_t)MmsValue_toUnixTimestamp((sMmsValue const *)arg1);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_setFloat(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_setFloat.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_setFloat" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);ecode2 = SWIG_AsVal_float(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_setFloat" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);MmsValue_setFloat(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_setDouble(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_setDouble.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_setDouble" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);ecode2 = SWIG_AsVal_double(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_setDouble" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);MmsValue_setDouble(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_setInt8(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  int8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  signed char val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_setInt8.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_setInt8" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);ecode2 = SWIG_AsVal_signed_SS_char(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_setInt8" "', argument " "2"" of type '" "int8_t""'");
  } 
  arg2 = static_cast< int8_t >(val2);MmsValue_setInt8(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_setInt16(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  int16_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_setInt16.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_setInt16" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);ecode2 = SWIG_AsVal_short(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_setInt16" "', argument " "2"" of type '" "int16_t""'");
  } 
  arg2 = static_cast< int16_t >(val2);MmsValue_setInt16(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_setInt32(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  int32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_setInt32.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_setInt32" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_setInt32" "', argument " "2"" of type '" "int32_t""'");
  } 
  arg2 = static_cast< int32_t >(val2);MmsValue_setInt32(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_setInt64(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_setInt64.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_setInt64" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);ecode2 = SWIG_AsVal_long_SS_long(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_setInt64" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);MmsValue_setInt64(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_setUint8(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_setUint8.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_setUint8" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_char(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_setUint8" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = static_cast< uint8_t >(val2);MmsValue_setUint8(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_setUint16(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  uint16_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_setUint16.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_setUint16" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_short(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_setUint16" "', argument " "2"" of type '" "uint16_t""'");
  } 
  arg2 = static_cast< uint16_t >(val2);MmsValue_setUint16(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_setUint32(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_setUint32.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_setUint32" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_setUint32" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = static_cast< uint32_t >(val2);MmsValue_setUint32(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_setBoolean(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_setBoolean.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_setBoolean" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_setBoolean" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);MmsValue_setBoolean(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_getBoolean(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_getBoolean.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_getBoolean" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (bool)MmsValue_getBoolean((sMmsValue const *)arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_toString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_toString.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_toString" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (char *)MmsValue_toString(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_getStringSize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_getStringSize.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_getStringSize" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (int)MmsValue_getStringSize(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_setVisibleString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_setVisibleString.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_setVisibleString" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsValue_setVisibleString" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);MmsValue_setVisibleString(arg1,(char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_setBitStringBit(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  int arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_setBitStringBit.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_setBitStringBit" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_setBitStringBit" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);ecode3 = SWIG_AsVal_bool(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MmsValue_setBitStringBit" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);MmsValue_setBitStringBit(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_getBitStringBit(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_getBitStringBit.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_getBitStringBit" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_getBitStringBit" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);result = (bool)MmsValue_getBitStringBit((sMmsValue const *)arg1,arg2);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_deleteAllBitStringBits(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_deleteAllBitStringBits.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_deleteAllBitStringBits" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);MmsValue_deleteAllBitStringBits(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_getBitStringSize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_getBitStringSize.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_getBitStringSize" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (int)MmsValue_getBitStringSize((sMmsValue const *)arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_getBitStringByteSize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_getBitStringByteSize.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_getBitStringByteSize" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (int)MmsValue_getBitStringByteSize((sMmsValue const *)arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_getNumberOfSetBits(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_getNumberOfSetBits.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_getNumberOfSetBits" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (int)MmsValue_getNumberOfSetBits((sMmsValue const *)arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_setAllBitStringBits(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_setAllBitStringBits.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_setAllBitStringBits" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);MmsValue_setAllBitStringBits(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_getBitStringAsInteger(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_getBitStringAsInteger.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_getBitStringAsInteger" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (uint32_t)MmsValue_getBitStringAsInteger((sMmsValue const *)arg1);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_setBitStringFromInteger(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_setBitStringFromInteger.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_setBitStringFromInteger" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_setBitStringFromInteger" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = static_cast< uint32_t >(val2);MmsValue_setBitStringFromInteger(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_getBitStringAsIntegerBigEndian(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_getBitStringAsIntegerBigEndian.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_getBitStringAsIntegerBigEndian" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (uint32_t)MmsValue_getBitStringAsIntegerBigEndian((sMmsValue const *)arg1);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_setBitStringFromIntegerBigEndian(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_setBitStringFromIntegerBigEndian.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_setBitStringFromIntegerBigEndian" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_setBitStringFromIntegerBigEndian" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = static_cast< uint32_t >(val2);MmsValue_setBitStringFromIntegerBigEndian(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_setUtcTime(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_setUtcTime.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_setUtcTime" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_setUtcTime" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = static_cast< uint32_t >(val2);result = (MmsValue *)MmsValue_setUtcTime(arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_setUtcTimeMs(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  uint64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_setUtcTimeMs.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_setUtcTimeMs" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_setUtcTimeMs" "', argument " "2"" of type '" "uint64_t""'");
  } 
  arg2 = static_cast< uint64_t >(val2);result = (MmsValue *)MmsValue_setUtcTimeMs(arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_setUtcTimeByBuffer(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  uint8_t *arg2 = (uint8_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_setUtcTimeByBuffer.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_setUtcTimeByBuffer" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsValue_setUtcTimeByBuffer" "', argument " "2"" of type '" "uint8_t const *""'"); 
  }
  arg2 = reinterpret_cast< uint8_t * >(argp2);MmsValue_setUtcTimeByBuffer(arg1,(unsigned char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_getUtcTimeBuffer(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_getUtcTimeBuffer.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_getUtcTimeBuffer" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (uint8_t *)MmsValue_getUtcTimeBuffer(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_getUtcTimeInMs(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint64_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_getUtcTimeInMs.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_getUtcTimeInMs" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (uint64_t)MmsValue_getUtcTimeInMs((sMmsValue const *)arg1);
  jsresult = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_getUtcTimeInMsWithUs(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  uint64_t result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_getUtcTimeInMsWithUs.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_getUtcTimeInMsWithUs" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsValue_getUtcTimeInMsWithUs" "', argument " "2"" of type '" "uint32_t *""'"); 
  }
  arg2 = reinterpret_cast< uint32_t * >(argp2);result = (uint64_t)MmsValue_getUtcTimeInMsWithUs((sMmsValue const *)arg1,arg2);
  jsresult = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_setUtcTimeQuality(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_setUtcTimeQuality.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_setUtcTimeQuality" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_char(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_setUtcTimeQuality" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = static_cast< uint8_t >(val2);MmsValue_setUtcTimeQuality(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_getUtcTimeQuality(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_getUtcTimeQuality.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_getUtcTimeQuality" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (uint8_t)MmsValue_getUtcTimeQuality((sMmsValue const *)arg1);
  jsresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_setBinaryTime(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  uint64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_setBinaryTime.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_setBinaryTime" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_setBinaryTime" "', argument " "2"" of type '" "uint64_t""'");
  } 
  arg2 = static_cast< uint64_t >(val2);MmsValue_setBinaryTime(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_getBinaryTimeAsUtcMs(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint64_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_getBinaryTimeAsUtcMs.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_getBinaryTimeAsUtcMs" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (uint64_t)MmsValue_getBinaryTimeAsUtcMs((sMmsValue const *)arg1);
  jsresult = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_setOctetString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  uint8_t *arg2 = (uint8_t *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_setOctetString.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_setOctetString" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsValue_setOctetString" "', argument " "2"" of type '" "uint8_t const *""'"); 
  }
  arg2 = reinterpret_cast< uint8_t * >(argp2);ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MmsValue_setOctetString" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);MmsValue_setOctetString(arg1,(unsigned char const *)arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_setOctetStringOctet(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  int arg2 ;
  uint8_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  unsigned char val3 ;
  int ecode3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_setOctetStringOctet.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_setOctetStringOctet" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_setOctetStringOctet" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);ecode3 = SWIG_AsVal_unsigned_SS_char(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MmsValue_setOctetStringOctet" "', argument " "3"" of type '" "uint8_t""'");
  } 
  arg3 = static_cast< uint8_t >(val3);MmsValue_setOctetStringOctet(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_getOctetStringSize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint16_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_getOctetStringSize.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_getOctetStringSize" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (uint16_t)MmsValue_getOctetStringSize((sMmsValue const *)arg1);
  jsresult = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_getOctetStringMaxSize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint16_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_getOctetStringMaxSize.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_getOctetStringMaxSize" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (uint16_t)MmsValue_getOctetStringMaxSize(arg1);
  jsresult = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_getOctetStringBuffer(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_getOctetStringBuffer.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_getOctetStringBuffer" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (uint8_t *)MmsValue_getOctetStringBuffer(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_getOctetStringOctet(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  uint8_t result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_getOctetStringOctet.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_getOctetStringOctet" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_getOctetStringOctet" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);result = (uint8_t)MmsValue_getOctetStringOctet(arg1,arg2);
  jsresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_update(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  MmsValue *arg2 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_update.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_update" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsValue_update" "', argument " "2"" of type '" "MmsValue const *""'"); 
  }
  arg2 = reinterpret_cast< MmsValue * >(argp2);result = (bool)MmsValue_update(arg1,(sMmsValue const *)arg2);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_equals(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  MmsValue *arg2 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_equals.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_equals" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsValue_equals" "', argument " "2"" of type '" "MmsValue const *""'"); 
  }
  arg2 = reinterpret_cast< MmsValue * >(argp2);result = (bool)MmsValue_equals((sMmsValue const *)arg1,(sMmsValue const *)arg2);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_equalTypes(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  MmsValue *arg2 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_equalTypes.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_equalTypes" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsValue_equalTypes" "', argument " "2"" of type '" "MmsValue const *""'"); 
  }
  arg2 = reinterpret_cast< MmsValue * >(argp2);result = (bool)MmsValue_equalTypes((sMmsValue const *)arg1,(sMmsValue const *)arg2);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_newDataAccessError(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsDataAccessError arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_newDataAccessError.");
  
  ecode1 = SWIG_AsVal_int(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MmsValue_newDataAccessError" "', argument " "1"" of type '" "MmsDataAccessError""'");
  } 
  arg1 = static_cast< MmsDataAccessError >(val1);result = (MmsValue *)MmsValue_newDataAccessError(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_newInteger(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_newInteger.");
  
  ecode1 = SWIG_AsVal_int(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MmsValue_newInteger" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);result = (MmsValue *)MmsValue_newInteger(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_newUnsigned(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_newUnsigned.");
  
  ecode1 = SWIG_AsVal_int(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MmsValue_newUnsigned" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);result = (MmsValue *)MmsValue_newUnsigned(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_newBoolean(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  bool arg1 ;
  bool val1 ;
  int ecode1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_newBoolean.");
  
  ecode1 = SWIG_AsVal_bool(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MmsValue_newBoolean" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);result = (MmsValue *)MmsValue_newBoolean(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_newBitString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_newBitString.");
  
  ecode1 = SWIG_AsVal_int(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MmsValue_newBitString" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);result = (MmsValue *)MmsValue_newBitString(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_newOctetString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  int arg1 ;
  int arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_newOctetString.");
  
  ecode1 = SWIG_AsVal_int(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MmsValue_newOctetString" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_newOctetString" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);result = (MmsValue *)MmsValue_newOctetString(arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_newStructure(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsVariableSpecification *arg1 = (MmsVariableSpecification *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_newStructure.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_MmsVariableSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_newStructure" "', argument " "1"" of type '" "MmsVariableSpecification const *""'"); 
  }
  arg1 = reinterpret_cast< MmsVariableSpecification * >(argp1);result = (MmsValue *)MmsValue_newStructure((MmsVariableSpecification const *)arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_createEmptyStructure(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_createEmptyStructure.");
  
  ecode1 = SWIG_AsVal_int(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MmsValue_createEmptyStructure" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);result = (MmsValue *)MmsValue_createEmptyStructure(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_newDefaultValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsVariableSpecification *arg1 = (MmsVariableSpecification *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_newDefaultValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_MmsVariableSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_newDefaultValue" "', argument " "1"" of type '" "MmsVariableSpecification const *""'"); 
  }
  arg1 = reinterpret_cast< MmsVariableSpecification * >(argp1);result = (MmsValue *)MmsValue_newDefaultValue((MmsVariableSpecification const *)arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_newIntegerFromInt8(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  int8_t arg1 ;
  signed char val1 ;
  int ecode1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_newIntegerFromInt8.");
  
  ecode1 = SWIG_AsVal_signed_SS_char(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MmsValue_newIntegerFromInt8" "', argument " "1"" of type '" "int8_t""'");
  } 
  arg1 = static_cast< int8_t >(val1);result = (MmsValue *)MmsValue_newIntegerFromInt8(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_newIntegerFromInt16(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  int16_t arg1 ;
  short val1 ;
  int ecode1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_newIntegerFromInt16.");
  
  ecode1 = SWIG_AsVal_short(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MmsValue_newIntegerFromInt16" "', argument " "1"" of type '" "int16_t""'");
  } 
  arg1 = static_cast< int16_t >(val1);result = (MmsValue *)MmsValue_newIntegerFromInt16(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_newIntegerFromInt32(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  int32_t arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_newIntegerFromInt32.");
  
  ecode1 = SWIG_AsVal_int(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MmsValue_newIntegerFromInt32" "', argument " "1"" of type '" "int32_t""'");
  } 
  arg1 = static_cast< int32_t >(val1);result = (MmsValue *)MmsValue_newIntegerFromInt32(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_newIntegerFromInt64(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  int64_t arg1 ;
  long long val1 ;
  int ecode1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_newIntegerFromInt64.");
  
  ecode1 = SWIG_AsVal_long_SS_long(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MmsValue_newIntegerFromInt64" "', argument " "1"" of type '" "int64_t""'");
  } 
  arg1 = static_cast< int64_t >(val1);result = (MmsValue *)MmsValue_newIntegerFromInt64(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_newUnsignedFromUint32(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  uint32_t arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_newUnsignedFromUint32.");
  
  ecode1 = SWIG_AsVal_unsigned_SS_int(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MmsValue_newUnsignedFromUint32" "', argument " "1"" of type '" "uint32_t""'");
  } 
  arg1 = static_cast< uint32_t >(val1);result = (MmsValue *)MmsValue_newUnsignedFromUint32(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_newFloat(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_newFloat.");
  
  ecode1 = SWIG_AsVal_float(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MmsValue_newFloat" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);result = (MmsValue *)MmsValue_newFloat(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_newDouble(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  double arg1 ;
  double val1 ;
  int ecode1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_newDouble.");
  
  ecode1 = SWIG_AsVal_double(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MmsValue_newDouble" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);result = (MmsValue *)MmsValue_newDouble(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_clone(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_clone.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_clone" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (MmsValue *)MmsValue_clone((sMmsValue const *)arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_cloneToBuffer(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  uint8_t *arg2 = (uint8_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  uint8_t *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_cloneToBuffer.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_cloneToBuffer" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsValue_cloneToBuffer" "', argument " "2"" of type '" "uint8_t *""'"); 
  }
  arg2 = reinterpret_cast< uint8_t * >(argp2);result = (uint8_t *)MmsValue_cloneToBuffer((sMmsValue const *)arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_getSizeInMemory(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_getSizeInMemory.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_getSizeInMemory" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (int)MmsValue_getSizeInMemory((sMmsValue const *)arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_delete(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_delete.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_delete" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);MmsValue_delete(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_deleteConditional(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_deleteConditional.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_deleteConditional" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);MmsValue_deleteConditional(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_newVisibleString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_newVisibleString.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_newVisibleString" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);result = (MmsValue *)MmsValue_newVisibleString((char const *)arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_newVisibleStringWithSize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_newVisibleStringWithSize.");
  
  ecode1 = SWIG_AsVal_int(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MmsValue_newVisibleStringWithSize" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);result = (MmsValue *)MmsValue_newVisibleStringWithSize(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_newMmsStringWithSize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_newMmsStringWithSize.");
  
  ecode1 = SWIG_AsVal_int(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MmsValue_newMmsStringWithSize" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);result = (MmsValue *)MmsValue_newMmsStringWithSize(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_newBinaryTime(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  bool arg1 ;
  bool val1 ;
  int ecode1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_newBinaryTime.");
  
  ecode1 = SWIG_AsVal_bool(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MmsValue_newBinaryTime" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);result = (MmsValue *)MmsValue_newBinaryTime(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_newVisibleStringFromByteArray(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  uint8_t *arg1 = (uint8_t *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_newVisibleStringFromByteArray.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_newVisibleStringFromByteArray" "', argument " "1"" of type '" "uint8_t const *""'"); 
  }
  arg1 = reinterpret_cast< uint8_t * >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_newVisibleStringFromByteArray" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);result = (MmsValue *)MmsValue_newVisibleStringFromByteArray((unsigned char const *)arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_newMmsStringFromByteArray(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  uint8_t *arg1 = (uint8_t *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_newMmsStringFromByteArray.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_newMmsStringFromByteArray" "', argument " "1"" of type '" "uint8_t const *""'"); 
  }
  arg1 = reinterpret_cast< uint8_t * >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_newMmsStringFromByteArray" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);result = (MmsValue *)MmsValue_newMmsStringFromByteArray((unsigned char const *)arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_newMmsString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_newMmsString.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_newMmsString" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);result = (MmsValue *)MmsValue_newMmsString((char const *)arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_setMmsString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_setMmsString.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_setMmsString" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsValue_setMmsString" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);MmsValue_setMmsString(arg1,(char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_newUtcTime(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  uint32_t arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_newUtcTime.");
  
  ecode1 = SWIG_AsVal_unsigned_SS_int(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MmsValue_newUtcTime" "', argument " "1"" of type '" "uint32_t""'");
  } 
  arg1 = static_cast< uint32_t >(val1);result = (MmsValue *)MmsValue_newUtcTime(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_newUtcTimeByMsTime(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  uint64_t arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_newUtcTimeByMsTime.");
  
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MmsValue_newUtcTimeByMsTime" "', argument " "1"" of type '" "uint64_t""'");
  } 
  arg1 = static_cast< uint64_t >(val1);result = (MmsValue *)MmsValue_newUtcTimeByMsTime(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_setDeletable(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_setDeletable.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_setDeletable" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);MmsValue_setDeletable(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_setDeletableRecursive(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_setDeletableRecursive.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_setDeletableRecursive" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);MmsValue_setDeletableRecursive(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_isDeletable(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_isDeletable.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_isDeletable" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (int)MmsValue_isDeletable(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_getType(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsType result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_getType.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_getType" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (MmsType)MmsValue_getType((sMmsValue const *)arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_getSubElement(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  MmsVariableSpecification *arg2 = (MmsVariableSpecification *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_getSubElement.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_getSubElement" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_MmsVariableSpecification, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsValue_getSubElement" "', argument " "2"" of type '" "MmsVariableSpecification *""'"); 
  }
  arg2 = reinterpret_cast< MmsVariableSpecification * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MmsValue_getSubElement" "', argument " "3"" of type '" "char *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);result = (MmsValue *)MmsValue_getSubElement(arg1,arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_getTypeString(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_getTypeString.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_getTypeString" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (char *)MmsValue_getTypeString(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_printToBuffer(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_printToBuffer.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_printToBuffer" "', argument " "1"" of type '" "MmsValue const *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsValue_printToBuffer" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MmsValue_printToBuffer" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);result = (char *)MmsValue_printToBuffer((sMmsValue const *)arg1,arg2,arg3);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_decodeMmsData(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  uint8_t *arg1 = (uint8_t *) 0 ;
  int arg2 ;
  int arg3 ;
  int *arg4 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_decodeMmsData.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_decodeMmsData" "', argument " "1"" of type '" "uint8_t *""'"); 
  }
  arg1 = reinterpret_cast< uint8_t * >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsValue_decodeMmsData" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MmsValue_decodeMmsData" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MmsValue_decodeMmsData" "', argument " "4"" of type '" "int *""'"); 
  }
  arg4 = reinterpret_cast< int * >(argp4);result = (MmsValue *)MmsValue_decodeMmsData(arg1,arg2,arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_encodeMmsData(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  uint8_t *arg2 = (uint8_t *) 0 ;
  int arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  int result;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_encodeMmsData.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_encodeMmsData" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsValue_encodeMmsData" "', argument " "2"" of type '" "uint8_t *""'"); 
  }
  arg2 = reinterpret_cast< uint8_t * >(argp2);ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MmsValue_encodeMmsData" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);ecode4 = SWIG_AsVal_bool(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "MmsValue_encodeMmsData" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);result = (int)MmsValue_encodeMmsData(arg1,arg2,arg3,arg4);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsValue_getMaxEncodedSize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsValue *arg1 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsValue_getMaxEncodedSize.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsValue_getMaxEncodedSize" "', argument " "1"" of type '" "MmsValue *""'"); 
  }
  arg1 = reinterpret_cast< MmsValue * >(argp1);result = (int)MmsValue_getMaxEncodedSize(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsVariableSpecification_getMaxEncodedSize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsVariableSpecification *arg1 = (MmsVariableSpecification *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsVariableSpecification_getMaxEncodedSize.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_MmsVariableSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsVariableSpecification_getMaxEncodedSize" "', argument " "1"" of type '" "MmsVariableSpecification *""'"); 
  }
  arg1 = reinterpret_cast< MmsVariableSpecification * >(argp1);result = (int)MmsVariableSpecification_getMaxEncodedSize(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue exports_MMS_ERROR_NONE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_NONE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_CONNECTION_REJECTED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_CONNECTION_REJECTED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_CONNECTION_LOST_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_CONNECTION_LOST));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_SERVICE_TIMEOUT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_SERVICE_TIMEOUT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_PARSING_RESPONSE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_PARSING_RESPONSE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_HARDWARE_FAULT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_HARDWARE_FAULT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_CONCLUDE_REJECTED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_CONCLUDE_REJECTED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_INVALID_ARGUMENTS_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_INVALID_ARGUMENTS));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_OUTSTANDING_CALL_LIMIT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_OUTSTANDING_CALL_LIMIT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_OTHER_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_OTHER));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_VMDSTATE_OTHER_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_VMDSTATE_OTHER));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_APPLICATION_REFERENCE_OTHER_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_APPLICATION_REFERENCE_OTHER));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_DEFINITION_OTHER_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_DEFINITION_OTHER));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_DEFINITION_INVALID_ADDRESS_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_DEFINITION_INVALID_ADDRESS));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_DEFINITION_TYPE_UNSUPPORTED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_DEFINITION_TYPE_UNSUPPORTED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_DEFINITION_TYPE_INCONSISTENT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_DEFINITION_TYPE_INCONSISTENT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_DEFINITION_OBJECT_UNDEFINED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_DEFINITION_OBJECT_UNDEFINED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_DEFINITION_OBJECT_EXISTS_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_DEFINITION_OBJECT_EXISTS));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_DEFINITION_OBJECT_ATTRIBUTE_INCONSISTENT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_DEFINITION_OBJECT_ATTRIBUTE_INCONSISTENT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_RESOURCE_OTHER_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_RESOURCE_OTHER));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_RESOURCE_CAPABILITY_UNAVAILABLE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_RESOURCE_CAPABILITY_UNAVAILABLE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_SERVICE_OTHER_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_SERVICE_OTHER));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_SERVICE_OBJECT_CONSTRAINT_CONFLICT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_SERVICE_OBJECT_CONSTRAINT_CONFLICT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_SERVICE_PREEMPT_OTHER_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_SERVICE_PREEMPT_OTHER));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_TIME_RESOLUTION_OTHER_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_TIME_RESOLUTION_OTHER));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_ACCESS_OTHER_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_ACCESS_OTHER));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_ACCESS_OBJECT_NON_EXISTENT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_ACCESS_OBJECT_NON_EXISTENT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_ACCESS_OBJECT_ACCESS_UNSUPPORTED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_ACCESS_OBJECT_ACCESS_UNSUPPORTED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_ACCESS_OBJECT_ACCESS_DENIED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_ACCESS_OBJECT_ACCESS_DENIED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_ACCESS_OBJECT_INVALIDATED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_ACCESS_OBJECT_INVALIDATED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_ACCESS_OBJECT_VALUE_INVALID_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_ACCESS_OBJECT_VALUE_INVALID));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_ACCESS_TEMPORARILY_UNAVAILABLE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_ACCESS_TEMPORARILY_UNAVAILABLE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_FILE_OTHER_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_FILE_OTHER));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_FILE_FILENAME_AMBIGUOUS_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_FILE_FILENAME_AMBIGUOUS));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_FILE_FILE_BUSY_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_FILE_FILE_BUSY));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_FILE_FILENAME_SYNTAX_ERROR_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_FILE_FILENAME_SYNTAX_ERROR));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_FILE_CONTENT_TYPE_INVALID_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_FILE_CONTENT_TYPE_INVALID));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_FILE_POSITION_INVALID_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_FILE_POSITION_INVALID));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_FILE_FILE_ACCESS_DENIED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_FILE_FILE_ACCESS_DENIED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_FILE_FILE_NON_EXISTENT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_FILE_FILE_NON_EXISTENT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_FILE_DUPLICATE_FILENAME_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_FILE_DUPLICATE_FILENAME));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_FILE_INSUFFICIENT_SPACE_IN_FILESTORE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_FILE_INSUFFICIENT_SPACE_IN_FILESTORE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_REJECT_OTHER_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_REJECT_OTHER));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_REJECT_UNKNOWN_PDU_TYPE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_REJECT_UNKNOWN_PDU_TYPE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_REJECT_INVALID_PDU_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_REJECT_INVALID_PDU));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_REJECT_UNRECOGNIZED_SERVICE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_REJECT_UNRECOGNIZED_SERVICE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_REJECT_UNRECOGNIZED_MODIFIER_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_REJECT_UNRECOGNIZED_MODIFIER));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ERROR_REJECT_REQUEST_INVALID_ARGUMENT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ERROR_REJECT_REQUEST_INVALID_ARGUMENT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_ARRAY_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_ARRAY));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_STRUCTURE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_STRUCTURE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_BOOLEAN_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_BOOLEAN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_BIT_STRING_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_BIT_STRING));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_INTEGER_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_INTEGER));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_UNSIGNED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_UNSIGNED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_FLOAT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_FLOAT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_OCTET_STRING_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_OCTET_STRING));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_VISIBLE_STRING_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_VISIBLE_STRING));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_GENERALIZED_TIME_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_GENERALIZED_TIME));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_BINARY_TIME_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_BINARY_TIME));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_BCD_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_BCD));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_OBJ_ID_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_OBJ_ID));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_STRING_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_STRING));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_UTC_TIME_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_UTC_TIME));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_MMS_DATA_ACCESS_ERROR_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(MMS_DATA_ACCESS_ERROR));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_MmsAccessSpecifier_domain_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sMmsAccessSpecifier *arg1 = (sMmsAccessSpecifier *) 0 ;
  MmsDomain *arg2 = (MmsDomain *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsAccessSpecifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsAccessSpecifier_domain_set" "', argument " "1"" of type '" "sMmsAccessSpecifier *""'"); 
  }
  arg1 = reinterpret_cast< sMmsAccessSpecifier * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sMmsDomain, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsAccessSpecifier_domain_set" "', argument " "2"" of type '" "MmsDomain *""'"); 
  }
  arg2 = reinterpret_cast< MmsDomain * >(argp2);if (arg1) (arg1)->domain = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_MmsAccessSpecifier_domain_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sMmsAccessSpecifier *arg1 = (sMmsAccessSpecifier *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsDomain *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsAccessSpecifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsAccessSpecifier_domain_get" "', argument " "1"" of type '" "sMmsAccessSpecifier *""'"); 
  }
  arg1 = reinterpret_cast< sMmsAccessSpecifier * >(argp1);result = (MmsDomain *) ((arg1)->domain);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsDomain, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_MmsAccessSpecifier_variableName_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sMmsAccessSpecifier *arg1 = (sMmsAccessSpecifier *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsAccessSpecifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsAccessSpecifier_variableName_set" "', argument " "1"" of type '" "sMmsAccessSpecifier *""'"); 
  }
  arg1 = reinterpret_cast< sMmsAccessSpecifier * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsAccessSpecifier_variableName_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->variableName;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->variableName = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->variableName = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_MmsAccessSpecifier_variableName_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sMmsAccessSpecifier *arg1 = (sMmsAccessSpecifier *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsAccessSpecifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsAccessSpecifier_variableName_get" "', argument " "1"" of type '" "sMmsAccessSpecifier *""'"); 
  }
  arg1 = reinterpret_cast< sMmsAccessSpecifier * >(argp1);result = (char *) ((arg1)->variableName);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_MmsAccessSpecifier_arrayIndex_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sMmsAccessSpecifier *arg1 = (sMmsAccessSpecifier *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsAccessSpecifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsAccessSpecifier_arrayIndex_set" "', argument " "1"" of type '" "sMmsAccessSpecifier *""'"); 
  }
  arg1 = reinterpret_cast< sMmsAccessSpecifier * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsAccessSpecifier_arrayIndex_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);if (arg1) (arg1)->arrayIndex = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_MmsAccessSpecifier_arrayIndex_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sMmsAccessSpecifier *arg1 = (sMmsAccessSpecifier *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsAccessSpecifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsAccessSpecifier_arrayIndex_get" "', argument " "1"" of type '" "sMmsAccessSpecifier *""'"); 
  }
  arg1 = reinterpret_cast< sMmsAccessSpecifier * >(argp1);result = (int) ((arg1)->arrayIndex);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_MmsAccessSpecifier_componentName_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sMmsAccessSpecifier *arg1 = (sMmsAccessSpecifier *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsAccessSpecifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsAccessSpecifier_componentName_set" "', argument " "1"" of type '" "sMmsAccessSpecifier *""'"); 
  }
  arg1 = reinterpret_cast< sMmsAccessSpecifier * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsAccessSpecifier_componentName_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->componentName;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->componentName = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->componentName = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_MmsAccessSpecifier_componentName_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sMmsAccessSpecifier *arg1 = (sMmsAccessSpecifier *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sMmsAccessSpecifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsAccessSpecifier_componentName_get" "', argument " "1"" of type '" "sMmsAccessSpecifier *""'"); 
  }
  arg1 = reinterpret_cast< sMmsAccessSpecifier * >(argp1);result = (char *) ((arg1)->componentName);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_MmsAccessSpecifier(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  sMmsAccessSpecifier *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_MmsAccessSpecifier.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_MmsAccessSpecifier.");
  result = (sMmsAccessSpecifier *)new sMmsAccessSpecifier();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_sMmsAccessSpecifier, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_MmsAccessSpecifier(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    sMmsAccessSpecifier * arg1 = (sMmsAccessSpecifier *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_MmsVariableAccessSpecification_domainId_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  MmsVariableAccessSpecification *arg1 = (MmsVariableAccessSpecification *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_MmsVariableAccessSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsVariableAccessSpecification_domainId_set" "', argument " "1"" of type '" "MmsVariableAccessSpecification *""'"); 
  }
  arg1 = reinterpret_cast< MmsVariableAccessSpecification * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsVariableAccessSpecification_domainId_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->domainId;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->domainId = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->domainId = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_MmsVariableAccessSpecification_domainId_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsVariableAccessSpecification *arg1 = (MmsVariableAccessSpecification *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_MmsVariableAccessSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsVariableAccessSpecification_domainId_get" "', argument " "1"" of type '" "MmsVariableAccessSpecification *""'"); 
  }
  arg1 = reinterpret_cast< MmsVariableAccessSpecification * >(argp1);result = (char *) ((arg1)->domainId);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_MmsVariableAccessSpecification_itemId_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  MmsVariableAccessSpecification *arg1 = (MmsVariableAccessSpecification *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_MmsVariableAccessSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsVariableAccessSpecification_itemId_set" "', argument " "1"" of type '" "MmsVariableAccessSpecification *""'"); 
  }
  arg1 = reinterpret_cast< MmsVariableAccessSpecification * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsVariableAccessSpecification_itemId_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->itemId;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->itemId = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->itemId = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_MmsVariableAccessSpecification_itemId_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsVariableAccessSpecification *arg1 = (MmsVariableAccessSpecification *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_MmsVariableAccessSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsVariableAccessSpecification_itemId_get" "', argument " "1"" of type '" "MmsVariableAccessSpecification *""'"); 
  }
  arg1 = reinterpret_cast< MmsVariableAccessSpecification * >(argp1);result = (char *) ((arg1)->itemId);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_MmsVariableAccessSpecification_arrayIndex_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  MmsVariableAccessSpecification *arg1 = (MmsVariableAccessSpecification *) 0 ;
  int32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_MmsVariableAccessSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsVariableAccessSpecification_arrayIndex_set" "', argument " "1"" of type '" "MmsVariableAccessSpecification *""'"); 
  }
  arg1 = reinterpret_cast< MmsVariableAccessSpecification * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MmsVariableAccessSpecification_arrayIndex_set" "', argument " "2"" of type '" "int32_t""'");
  } 
  arg2 = static_cast< int32_t >(val2);if (arg1) (arg1)->arrayIndex = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_MmsVariableAccessSpecification_arrayIndex_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsVariableAccessSpecification *arg1 = (MmsVariableAccessSpecification *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int32_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_MmsVariableAccessSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsVariableAccessSpecification_arrayIndex_get" "', argument " "1"" of type '" "MmsVariableAccessSpecification *""'"); 
  }
  arg1 = reinterpret_cast< MmsVariableAccessSpecification * >(argp1);result = (int32_t) ((arg1)->arrayIndex);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_MmsVariableAccessSpecification_componentName_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  MmsVariableAccessSpecification *arg1 = (MmsVariableAccessSpecification *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_MmsVariableAccessSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsVariableAccessSpecification_componentName_set" "', argument " "1"" of type '" "MmsVariableAccessSpecification *""'"); 
  }
  arg1 = reinterpret_cast< MmsVariableAccessSpecification * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MmsVariableAccessSpecification_componentName_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->componentName;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->componentName = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->componentName = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_MmsVariableAccessSpecification_componentName_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsVariableAccessSpecification *arg1 = (MmsVariableAccessSpecification *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_MmsVariableAccessSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsVariableAccessSpecification_componentName_get" "', argument " "1"" of type '" "MmsVariableAccessSpecification *""'"); 
  }
  arg1 = reinterpret_cast< MmsVariableAccessSpecification * >(argp1);result = (char *) ((arg1)->componentName);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_MmsVariableAccessSpecification(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  MmsVariableAccessSpecification *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_MmsVariableAccessSpecification.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_MmsVariableAccessSpecification.");
  result = (MmsVariableAccessSpecification *)new MmsVariableAccessSpecification();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_MmsVariableAccessSpecification, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_MmsVariableAccessSpecification(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    MmsVariableAccessSpecification * arg1 = (MmsVariableAccessSpecification *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_ItuObjectIdentifier_arc_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  ItuObjectIdentifier *arg1 = (ItuObjectIdentifier *) 0 ;
  uint16_t *arg2 = (uint16_t *) (uint16_t *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_ItuObjectIdentifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ItuObjectIdentifier_arc_set" "', argument " "1"" of type '" "ItuObjectIdentifier *""'"); 
  }
  arg1 = reinterpret_cast< ItuObjectIdentifier * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_unsigned_short, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ItuObjectIdentifier_arc_set" "', argument " "2"" of type '" "uint16_t [10]""'"); 
  } 
  arg2 = reinterpret_cast< uint16_t * >(argp2);{
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)10; ++ii) *(uint16_t *)&arg1->arc[ii] = *((uint16_t *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""arc""' of type '""uint16_t [10]""'");
    }
  }
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_ItuObjectIdentifier_arc_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ItuObjectIdentifier *arg1 = (ItuObjectIdentifier *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint16_t *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_ItuObjectIdentifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ItuObjectIdentifier_arc_get" "', argument " "1"" of type '" "ItuObjectIdentifier *""'"); 
  }
  arg1 = reinterpret_cast< ItuObjectIdentifier * >(argp1);result = (uint16_t *)(uint16_t *) ((arg1)->arc);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_short, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_ItuObjectIdentifier_arcCount_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  ItuObjectIdentifier *arg1 = (ItuObjectIdentifier *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_ItuObjectIdentifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ItuObjectIdentifier_arcCount_set" "', argument " "1"" of type '" "ItuObjectIdentifier *""'"); 
  }
  arg1 = reinterpret_cast< ItuObjectIdentifier * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ItuObjectIdentifier_arcCount_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);if (arg1) (arg1)->arcCount = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_ItuObjectIdentifier_arcCount_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ItuObjectIdentifier *arg1 = (ItuObjectIdentifier *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_ItuObjectIdentifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ItuObjectIdentifier_arcCount_get" "', argument " "1"" of type '" "ItuObjectIdentifier *""'"); 
  }
  arg1 = reinterpret_cast< ItuObjectIdentifier * >(argp1);result = (int) ((arg1)->arcCount);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_ItuObjectIdentifier(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  ItuObjectIdentifier *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_ItuObjectIdentifier.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_ItuObjectIdentifier.");
  result = (ItuObjectIdentifier *)new ItuObjectIdentifier();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_ItuObjectIdentifier, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_ItuObjectIdentifier(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    ItuObjectIdentifier * arg1 = (ItuObjectIdentifier *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_IsoApplicationReference_apTitle_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  IsoApplicationReference *arg1 = (IsoApplicationReference *) 0 ;
  ItuObjectIdentifier *arg2 = (ItuObjectIdentifier *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_IsoApplicationReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IsoApplicationReference_apTitle_set" "', argument " "1"" of type '" "IsoApplicationReference *""'"); 
  }
  arg1 = reinterpret_cast< IsoApplicationReference * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_ItuObjectIdentifier, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IsoApplicationReference_apTitle_set" "', argument " "2"" of type '" "ItuObjectIdentifier *""'"); 
  }
  arg2 = reinterpret_cast< ItuObjectIdentifier * >(argp2);if (arg1) (arg1)->apTitle = *arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_IsoApplicationReference_apTitle_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IsoApplicationReference *arg1 = (IsoApplicationReference *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ItuObjectIdentifier *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_IsoApplicationReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IsoApplicationReference_apTitle_get" "', argument " "1"" of type '" "IsoApplicationReference *""'"); 
  }
  arg1 = reinterpret_cast< IsoApplicationReference * >(argp1);result = (ItuObjectIdentifier *)& ((arg1)->apTitle);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ItuObjectIdentifier, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_IsoApplicationReference_aeQualifier_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  IsoApplicationReference *arg1 = (IsoApplicationReference *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_IsoApplicationReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IsoApplicationReference_aeQualifier_set" "', argument " "1"" of type '" "IsoApplicationReference *""'"); 
  }
  arg1 = reinterpret_cast< IsoApplicationReference * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IsoApplicationReference_aeQualifier_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);if (arg1) (arg1)->aeQualifier = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_IsoApplicationReference_aeQualifier_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IsoApplicationReference *arg1 = (IsoApplicationReference *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_IsoApplicationReference, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IsoApplicationReference_aeQualifier_get" "', argument " "1"" of type '" "IsoApplicationReference *""'"); 
  }
  arg1 = reinterpret_cast< IsoApplicationReference * >(argp1);result = (int) ((arg1)->aeQualifier);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_IsoApplicationReference(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  IsoApplicationReference *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_IsoApplicationReference.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_IsoApplicationReference.");
  result = (IsoApplicationReference *)new IsoApplicationReference();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_IsoApplicationReference, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_IsoApplicationReference(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    IsoApplicationReference * arg1 = (IsoApplicationReference *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue exports_IEC61850_UNKNOWN_TYPE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_UNKNOWN_TYPE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_BOOLEAN_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_BOOLEAN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_INT8_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_INT8));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_INT16_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_INT16));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_INT32_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_INT32));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_INT64_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_INT64));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_INT128_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_INT128));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_INT8U_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_INT8U));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_INT16U_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_INT16U));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_INT24U_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_INT24U));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_INT32U_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_INT32U));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_FLOAT32_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_FLOAT32));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_FLOAT64_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_FLOAT64));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_ENUMERATED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_ENUMERATED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_OCTET_STRING_64_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_OCTET_STRING_64));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_OCTET_STRING_6_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_OCTET_STRING_6));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_OCTET_STRING_8_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_OCTET_STRING_8));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_VISIBLE_STRING_32_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_VISIBLE_STRING_32));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_VISIBLE_STRING_64_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_VISIBLE_STRING_64));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_VISIBLE_STRING_65_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_VISIBLE_STRING_65));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_VISIBLE_STRING_129_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_VISIBLE_STRING_129));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_VISIBLE_STRING_255_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_VISIBLE_STRING_255));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_UNICODE_STRING_255_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_UNICODE_STRING_255));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_TIMESTAMP_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_TIMESTAMP));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_QUALITY_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_QUALITY));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_CHECK_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_CHECK));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_CODEDENUM_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_CODEDENUM));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_GENERIC_BITSTRING_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_GENERIC_BITSTRING));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_CONSTRUCTED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_CONSTRUCTED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_ENTRY_TIME_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_ENTRY_TIME));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_PHYCOMADDR_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_PHYCOMADDR));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_CURRENCY_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_CURRENCY));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_OPTFLDS_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_OPTFLDS));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_TRGOPS_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(IEC61850_TRGOPS));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_LogicalDeviceModelType_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(LogicalDeviceModelType));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_LogicalNodeModelType_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(LogicalNodeModelType));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_DataObjectModelType_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(DataObjectModelType));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_DataAttributeModelType_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(DataAttributeModelType));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIedModel_name_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIedModel *arg1 = (sIedModel *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedModel_name_set" "', argument " "1"" of type '" "sIedModel *""'"); 
  }
  arg1 = reinterpret_cast< sIedModel * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sIedModel_name_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->name;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->name = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->name = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIedModel_name_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIedModel *arg1 = (sIedModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedModel_name_get" "', argument " "1"" of type '" "sIedModel *""'"); 
  }
  arg1 = reinterpret_cast< sIedModel * >(argp1);result = (char *) ((arg1)->name);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIedModel_firstChild_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIedModel *arg1 = (sIedModel *) 0 ;
  LogicalDevice *arg2 = (LogicalDevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedModel_firstChild_set" "', argument " "1"" of type '" "sIedModel *""'"); 
  }
  arg1 = reinterpret_cast< sIedModel * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sLogicalDevice, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sIedModel_firstChild_set" "', argument " "2"" of type '" "LogicalDevice *""'"); 
  }
  arg2 = reinterpret_cast< LogicalDevice * >(argp2);if (arg1) (arg1)->firstChild = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIedModel_firstChild_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIedModel *arg1 = (sIedModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  LogicalDevice *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedModel_firstChild_get" "', argument " "1"" of type '" "sIedModel *""'"); 
  }
  arg1 = reinterpret_cast< sIedModel * >(argp1);result = (LogicalDevice *) ((arg1)->firstChild);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLogicalDevice, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIedModel_dataSets_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIedModel *arg1 = (sIedModel *) 0 ;
  DataSet *arg2 = (DataSet *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedModel_dataSets_set" "', argument " "1"" of type '" "sIedModel *""'"); 
  }
  arg1 = reinterpret_cast< sIedModel * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sDataSet, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sIedModel_dataSets_set" "', argument " "2"" of type '" "DataSet *""'"); 
  }
  arg2 = reinterpret_cast< DataSet * >(argp2);if (arg1) (arg1)->dataSets = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIedModel_dataSets_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIedModel *arg1 = (sIedModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  DataSet *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedModel_dataSets_get" "', argument " "1"" of type '" "sIedModel *""'"); 
  }
  arg1 = reinterpret_cast< sIedModel * >(argp1);result = (DataSet *) ((arg1)->dataSets);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataSet, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIedModel_rcbs_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIedModel *arg1 = (sIedModel *) 0 ;
  ReportControlBlock *arg2 = (ReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedModel_rcbs_set" "', argument " "1"" of type '" "sIedModel *""'"); 
  }
  arg1 = reinterpret_cast< sIedModel * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sReportControlBlock, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sIedModel_rcbs_set" "', argument " "2"" of type '" "ReportControlBlock *""'"); 
  }
  arg2 = reinterpret_cast< ReportControlBlock * >(argp2);if (arg1) (arg1)->rcbs = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIedModel_rcbs_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIedModel *arg1 = (sIedModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ReportControlBlock *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedModel_rcbs_get" "', argument " "1"" of type '" "sIedModel *""'"); 
  }
  arg1 = reinterpret_cast< sIedModel * >(argp1);result = (ReportControlBlock *) ((arg1)->rcbs);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIedModel_gseCBs_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIedModel *arg1 = (sIedModel *) 0 ;
  GSEControlBlock *arg2 = (GSEControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedModel_gseCBs_set" "', argument " "1"" of type '" "sIedModel *""'"); 
  }
  arg1 = reinterpret_cast< sIedModel * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sGSEControlBlock, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sIedModel_gseCBs_set" "', argument " "2"" of type '" "GSEControlBlock *""'"); 
  }
  arg2 = reinterpret_cast< GSEControlBlock * >(argp2);if (arg1) (arg1)->gseCBs = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIedModel_gseCBs_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIedModel *arg1 = (sIedModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  GSEControlBlock *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedModel_gseCBs_get" "', argument " "1"" of type '" "sIedModel *""'"); 
  }
  arg1 = reinterpret_cast< sIedModel * >(argp1);result = (GSEControlBlock *) ((arg1)->gseCBs);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sGSEControlBlock, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIedModel_svCBs_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIedModel *arg1 = (sIedModel *) 0 ;
  SVControlBlock *arg2 = (SVControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedModel_svCBs_set" "', argument " "1"" of type '" "sIedModel *""'"); 
  }
  arg1 = reinterpret_cast< sIedModel * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sSVControlBlock, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sIedModel_svCBs_set" "', argument " "2"" of type '" "SVControlBlock *""'"); 
  }
  arg2 = reinterpret_cast< SVControlBlock * >(argp2);if (arg1) (arg1)->svCBs = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIedModel_svCBs_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIedModel *arg1 = (sIedModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  SVControlBlock *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedModel_svCBs_get" "', argument " "1"" of type '" "sIedModel *""'"); 
  }
  arg1 = reinterpret_cast< sIedModel * >(argp1);result = (SVControlBlock *) ((arg1)->svCBs);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIedModel_sgcbs_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIedModel *arg1 = (sIedModel *) 0 ;
  SettingGroupControlBlock *arg2 = (SettingGroupControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedModel_sgcbs_set" "', argument " "1"" of type '" "sIedModel *""'"); 
  }
  arg1 = reinterpret_cast< sIedModel * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sSettingGroupControlBlock, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sIedModel_sgcbs_set" "', argument " "2"" of type '" "SettingGroupControlBlock *""'"); 
  }
  arg2 = reinterpret_cast< SettingGroupControlBlock * >(argp2);if (arg1) (arg1)->sgcbs = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIedModel_sgcbs_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIedModel *arg1 = (sIedModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  SettingGroupControlBlock *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedModel_sgcbs_get" "', argument " "1"" of type '" "sIedModel *""'"); 
  }
  arg1 = reinterpret_cast< sIedModel * >(argp1);result = (SettingGroupControlBlock *) ((arg1)->sgcbs);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sSettingGroupControlBlock, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIedModel_lcbs_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIedModel *arg1 = (sIedModel *) 0 ;
  LogControlBlock *arg2 = (LogControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedModel_lcbs_set" "', argument " "1"" of type '" "sIedModel *""'"); 
  }
  arg1 = reinterpret_cast< sIedModel * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sLogControlBlock, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sIedModel_lcbs_set" "', argument " "2"" of type '" "LogControlBlock *""'"); 
  }
  arg2 = reinterpret_cast< LogControlBlock * >(argp2);if (arg1) (arg1)->lcbs = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIedModel_lcbs_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIedModel *arg1 = (sIedModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  LogControlBlock *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedModel_lcbs_get" "', argument " "1"" of type '" "sIedModel *""'"); 
  }
  arg1 = reinterpret_cast< sIedModel * >(argp1);result = (LogControlBlock *) ((arg1)->lcbs);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLogControlBlock, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIedModel_logs_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIedModel *arg1 = (sIedModel *) 0 ;
  Log *arg2 = (Log *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedModel_logs_set" "', argument " "1"" of type '" "sIedModel *""'"); 
  }
  arg1 = reinterpret_cast< sIedModel * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sLog, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sIedModel_logs_set" "', argument " "2"" of type '" "Log *""'"); 
  }
  arg2 = reinterpret_cast< Log * >(argp2);if (arg1) (arg1)->logs = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIedModel_logs_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIedModel *arg1 = (sIedModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Log *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedModel_logs_get" "', argument " "1"" of type '" "sIedModel *""'"); 
  }
  arg1 = reinterpret_cast< sIedModel * >(argp1);result = (Log *) ((arg1)->logs);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLog, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIedModel_initializer_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIedModel *arg1 = (sIedModel *) 0 ;
  void (*arg2)(void) = (void (*)(void)) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedModel_initializer_set" "', argument " "1"" of type '" "sIedModel *""'"); 
  }
  arg1 = reinterpret_cast< sIedModel * >(argp1);{
    {
      int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "sIedModel_initializer_set" "', argument " "2"" of type '" "void (*)(void)""'"); 
      }
    }
  }
  if (arg1) (arg1)->initializer = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIedModel_initializer_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIedModel *arg1 = (sIedModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void (*result)(void) = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedModel_initializer_get" "', argument " "1"" of type '" "sIedModel *""'"); 
  }
  arg1 = reinterpret_cast< sIedModel * >(argp1);result = (void (*)(void)) ((arg1)->initializer);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__void);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_sIedModel(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  sIedModel *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_sIedModel.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_sIedModel.");
  result = (sIedModel *)new sIedModel();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_sIedModel, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_sIedModel(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    sIedModel * arg1 = (sIedModel *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_sLogicalDevice_modelType_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sLogicalDevice *arg1 = (sLogicalDevice *) 0 ;
  ModelNodeType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogicalDevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogicalDevice_modelType_set" "', argument " "1"" of type '" "sLogicalDevice *""'"); 
  }
  arg1 = reinterpret_cast< sLogicalDevice * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sLogicalDevice_modelType_set" "', argument " "2"" of type '" "ModelNodeType""'");
  } 
  arg2 = static_cast< ModelNodeType >(val2);if (arg1) (arg1)->modelType = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sLogicalDevice_modelType_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sLogicalDevice *arg1 = (sLogicalDevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ModelNodeType result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogicalDevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogicalDevice_modelType_get" "', argument " "1"" of type '" "sLogicalDevice *""'"); 
  }
  arg1 = reinterpret_cast< sLogicalDevice * >(argp1);result = (ModelNodeType) ((arg1)->modelType);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sLogicalDevice_name_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sLogicalDevice *arg1 = (sLogicalDevice *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogicalDevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogicalDevice_name_set" "', argument " "1"" of type '" "sLogicalDevice *""'"); 
  }
  arg1 = reinterpret_cast< sLogicalDevice * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sLogicalDevice_name_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->name;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->name = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->name = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sLogicalDevice_name_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sLogicalDevice *arg1 = (sLogicalDevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogicalDevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogicalDevice_name_get" "', argument " "1"" of type '" "sLogicalDevice *""'"); 
  }
  arg1 = reinterpret_cast< sLogicalDevice * >(argp1);result = (char *) ((arg1)->name);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sLogicalDevice_parent_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sLogicalDevice *arg1 = (sLogicalDevice *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogicalDevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogicalDevice_parent_set" "', argument " "1"" of type '" "sLogicalDevice *""'"); 
  }
  arg1 = reinterpret_cast< sLogicalDevice * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sModelNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sLogicalDevice_parent_set" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);if (arg1) (arg1)->parent = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sLogicalDevice_parent_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sLogicalDevice *arg1 = (sLogicalDevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ModelNode *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogicalDevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogicalDevice_parent_get" "', argument " "1"" of type '" "sLogicalDevice *""'"); 
  }
  arg1 = reinterpret_cast< sLogicalDevice * >(argp1);result = (ModelNode *) ((arg1)->parent);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sModelNode, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sLogicalDevice_sibling_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sLogicalDevice *arg1 = (sLogicalDevice *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogicalDevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogicalDevice_sibling_set" "', argument " "1"" of type '" "sLogicalDevice *""'"); 
  }
  arg1 = reinterpret_cast< sLogicalDevice * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sModelNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sLogicalDevice_sibling_set" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);if (arg1) (arg1)->sibling = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sLogicalDevice_sibling_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sLogicalDevice *arg1 = (sLogicalDevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ModelNode *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogicalDevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogicalDevice_sibling_get" "', argument " "1"" of type '" "sLogicalDevice *""'"); 
  }
  arg1 = reinterpret_cast< sLogicalDevice * >(argp1);result = (ModelNode *) ((arg1)->sibling);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sModelNode, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sLogicalDevice_firstChild_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sLogicalDevice *arg1 = (sLogicalDevice *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogicalDevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogicalDevice_firstChild_set" "', argument " "1"" of type '" "sLogicalDevice *""'"); 
  }
  arg1 = reinterpret_cast< sLogicalDevice * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sModelNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sLogicalDevice_firstChild_set" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);if (arg1) (arg1)->firstChild = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sLogicalDevice_firstChild_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sLogicalDevice *arg1 = (sLogicalDevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ModelNode *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogicalDevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogicalDevice_firstChild_get" "', argument " "1"" of type '" "sLogicalDevice *""'"); 
  }
  arg1 = reinterpret_cast< sLogicalDevice * >(argp1);result = (ModelNode *) ((arg1)->firstChild);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sModelNode, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_sLogicalDevice(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  sLogicalDevice *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_sLogicalDevice.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_sLogicalDevice.");
  result = (sLogicalDevice *)new sLogicalDevice();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_sLogicalDevice, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_sLogicalDevice(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    sLogicalDevice * arg1 = (sLogicalDevice *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_sModelNode_modelType_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sModelNode *arg1 = (sModelNode *) 0 ;
  ModelNodeType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sModelNode_modelType_set" "', argument " "1"" of type '" "sModelNode *""'"); 
  }
  arg1 = reinterpret_cast< sModelNode * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sModelNode_modelType_set" "', argument " "2"" of type '" "ModelNodeType""'");
  } 
  arg2 = static_cast< ModelNodeType >(val2);if (arg1) (arg1)->modelType = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sModelNode_modelType_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sModelNode *arg1 = (sModelNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ModelNodeType result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sModelNode_modelType_get" "', argument " "1"" of type '" "sModelNode *""'"); 
  }
  arg1 = reinterpret_cast< sModelNode * >(argp1);result = (ModelNodeType) ((arg1)->modelType);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sModelNode_name_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sModelNode *arg1 = (sModelNode *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sModelNode_name_set" "', argument " "1"" of type '" "sModelNode *""'"); 
  }
  arg1 = reinterpret_cast< sModelNode * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sModelNode_name_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->name;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->name = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->name = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sModelNode_name_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sModelNode *arg1 = (sModelNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sModelNode_name_get" "', argument " "1"" of type '" "sModelNode *""'"); 
  }
  arg1 = reinterpret_cast< sModelNode * >(argp1);result = (char *) ((arg1)->name);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sModelNode_parent_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sModelNode *arg1 = (sModelNode *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sModelNode_parent_set" "', argument " "1"" of type '" "sModelNode *""'"); 
  }
  arg1 = reinterpret_cast< sModelNode * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sModelNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sModelNode_parent_set" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);if (arg1) (arg1)->parent = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sModelNode_parent_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sModelNode *arg1 = (sModelNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ModelNode *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sModelNode_parent_get" "', argument " "1"" of type '" "sModelNode *""'"); 
  }
  arg1 = reinterpret_cast< sModelNode * >(argp1);result = (ModelNode *) ((arg1)->parent);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sModelNode, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sModelNode_sibling_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sModelNode *arg1 = (sModelNode *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sModelNode_sibling_set" "', argument " "1"" of type '" "sModelNode *""'"); 
  }
  arg1 = reinterpret_cast< sModelNode * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sModelNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sModelNode_sibling_set" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);if (arg1) (arg1)->sibling = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sModelNode_sibling_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sModelNode *arg1 = (sModelNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ModelNode *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sModelNode_sibling_get" "', argument " "1"" of type '" "sModelNode *""'"); 
  }
  arg1 = reinterpret_cast< sModelNode * >(argp1);result = (ModelNode *) ((arg1)->sibling);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sModelNode, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sModelNode_firstChild_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sModelNode *arg1 = (sModelNode *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sModelNode_firstChild_set" "', argument " "1"" of type '" "sModelNode *""'"); 
  }
  arg1 = reinterpret_cast< sModelNode * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sModelNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sModelNode_firstChild_set" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);if (arg1) (arg1)->firstChild = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sModelNode_firstChild_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sModelNode *arg1 = (sModelNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ModelNode *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sModelNode_firstChild_get" "', argument " "1"" of type '" "sModelNode *""'"); 
  }
  arg1 = reinterpret_cast< sModelNode * >(argp1);result = (ModelNode *) ((arg1)->firstChild);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sModelNode, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_sModelNode(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  sModelNode *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_sModelNode.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_sModelNode.");
  result = (sModelNode *)new sModelNode();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_sModelNode, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_sModelNode(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    sModelNode * arg1 = (sModelNode *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_sLogicalNode_modelType_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sLogicalNode *arg1 = (sLogicalNode *) 0 ;
  ModelNodeType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogicalNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogicalNode_modelType_set" "', argument " "1"" of type '" "sLogicalNode *""'"); 
  }
  arg1 = reinterpret_cast< sLogicalNode * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sLogicalNode_modelType_set" "', argument " "2"" of type '" "ModelNodeType""'");
  } 
  arg2 = static_cast< ModelNodeType >(val2);if (arg1) (arg1)->modelType = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sLogicalNode_modelType_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sLogicalNode *arg1 = (sLogicalNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ModelNodeType result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogicalNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogicalNode_modelType_get" "', argument " "1"" of type '" "sLogicalNode *""'"); 
  }
  arg1 = reinterpret_cast< sLogicalNode * >(argp1);result = (ModelNodeType) ((arg1)->modelType);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sLogicalNode_name_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sLogicalNode *arg1 = (sLogicalNode *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogicalNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogicalNode_name_set" "', argument " "1"" of type '" "sLogicalNode *""'"); 
  }
  arg1 = reinterpret_cast< sLogicalNode * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sLogicalNode_name_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->name;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->name = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->name = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sLogicalNode_name_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sLogicalNode *arg1 = (sLogicalNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogicalNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogicalNode_name_get" "', argument " "1"" of type '" "sLogicalNode *""'"); 
  }
  arg1 = reinterpret_cast< sLogicalNode * >(argp1);result = (char *) ((arg1)->name);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sLogicalNode_parent_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sLogicalNode *arg1 = (sLogicalNode *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogicalNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogicalNode_parent_set" "', argument " "1"" of type '" "sLogicalNode *""'"); 
  }
  arg1 = reinterpret_cast< sLogicalNode * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sModelNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sLogicalNode_parent_set" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);if (arg1) (arg1)->parent = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sLogicalNode_parent_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sLogicalNode *arg1 = (sLogicalNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ModelNode *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogicalNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogicalNode_parent_get" "', argument " "1"" of type '" "sLogicalNode *""'"); 
  }
  arg1 = reinterpret_cast< sLogicalNode * >(argp1);result = (ModelNode *) ((arg1)->parent);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sModelNode, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sLogicalNode_sibling_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sLogicalNode *arg1 = (sLogicalNode *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogicalNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogicalNode_sibling_set" "', argument " "1"" of type '" "sLogicalNode *""'"); 
  }
  arg1 = reinterpret_cast< sLogicalNode * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sModelNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sLogicalNode_sibling_set" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);if (arg1) (arg1)->sibling = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sLogicalNode_sibling_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sLogicalNode *arg1 = (sLogicalNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ModelNode *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogicalNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogicalNode_sibling_get" "', argument " "1"" of type '" "sLogicalNode *""'"); 
  }
  arg1 = reinterpret_cast< sLogicalNode * >(argp1);result = (ModelNode *) ((arg1)->sibling);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sModelNode, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sLogicalNode_firstChild_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sLogicalNode *arg1 = (sLogicalNode *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogicalNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogicalNode_firstChild_set" "', argument " "1"" of type '" "sLogicalNode *""'"); 
  }
  arg1 = reinterpret_cast< sLogicalNode * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sModelNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sLogicalNode_firstChild_set" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);if (arg1) (arg1)->firstChild = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sLogicalNode_firstChild_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sLogicalNode *arg1 = (sLogicalNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ModelNode *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogicalNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogicalNode_firstChild_get" "', argument " "1"" of type '" "sLogicalNode *""'"); 
  }
  arg1 = reinterpret_cast< sLogicalNode * >(argp1);result = (ModelNode *) ((arg1)->firstChild);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sModelNode, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_sLogicalNode(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  sLogicalNode *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_sLogicalNode.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_sLogicalNode.");
  result = (sLogicalNode *)new sLogicalNode();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_sLogicalNode, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_sLogicalNode(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    sLogicalNode * arg1 = (sLogicalNode *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_sDataObject_modelType_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataObject *arg1 = (sDataObject *) 0 ;
  ModelNodeType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataObject_modelType_set" "', argument " "1"" of type '" "sDataObject *""'"); 
  }
  arg1 = reinterpret_cast< sDataObject * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sDataObject_modelType_set" "', argument " "2"" of type '" "ModelNodeType""'");
  } 
  arg2 = static_cast< ModelNodeType >(val2);if (arg1) (arg1)->modelType = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sDataObject_modelType_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataObject *arg1 = (sDataObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ModelNodeType result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataObject_modelType_get" "', argument " "1"" of type '" "sDataObject *""'"); 
  }
  arg1 = reinterpret_cast< sDataObject * >(argp1);result = (ModelNodeType) ((arg1)->modelType);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sDataObject_name_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataObject *arg1 = (sDataObject *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataObject_name_set" "', argument " "1"" of type '" "sDataObject *""'"); 
  }
  arg1 = reinterpret_cast< sDataObject * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sDataObject_name_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->name;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->name = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->name = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sDataObject_name_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataObject *arg1 = (sDataObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataObject_name_get" "', argument " "1"" of type '" "sDataObject *""'"); 
  }
  arg1 = reinterpret_cast< sDataObject * >(argp1);result = (char *) ((arg1)->name);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sDataObject_parent_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataObject *arg1 = (sDataObject *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataObject_parent_set" "', argument " "1"" of type '" "sDataObject *""'"); 
  }
  arg1 = reinterpret_cast< sDataObject * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sModelNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sDataObject_parent_set" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);if (arg1) (arg1)->parent = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sDataObject_parent_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataObject *arg1 = (sDataObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ModelNode *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataObject_parent_get" "', argument " "1"" of type '" "sDataObject *""'"); 
  }
  arg1 = reinterpret_cast< sDataObject * >(argp1);result = (ModelNode *) ((arg1)->parent);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sModelNode, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sDataObject_sibling_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataObject *arg1 = (sDataObject *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataObject_sibling_set" "', argument " "1"" of type '" "sDataObject *""'"); 
  }
  arg1 = reinterpret_cast< sDataObject * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sModelNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sDataObject_sibling_set" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);if (arg1) (arg1)->sibling = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sDataObject_sibling_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataObject *arg1 = (sDataObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ModelNode *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataObject_sibling_get" "', argument " "1"" of type '" "sDataObject *""'"); 
  }
  arg1 = reinterpret_cast< sDataObject * >(argp1);result = (ModelNode *) ((arg1)->sibling);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sModelNode, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sDataObject_firstChild_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataObject *arg1 = (sDataObject *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataObject_firstChild_set" "', argument " "1"" of type '" "sDataObject *""'"); 
  }
  arg1 = reinterpret_cast< sDataObject * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sModelNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sDataObject_firstChild_set" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);if (arg1) (arg1)->firstChild = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sDataObject_firstChild_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataObject *arg1 = (sDataObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ModelNode *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataObject_firstChild_get" "', argument " "1"" of type '" "sDataObject *""'"); 
  }
  arg1 = reinterpret_cast< sDataObject * >(argp1);result = (ModelNode *) ((arg1)->firstChild);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sModelNode, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sDataObject_elementCount_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataObject *arg1 = (sDataObject *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataObject_elementCount_set" "', argument " "1"" of type '" "sDataObject *""'"); 
  }
  arg1 = reinterpret_cast< sDataObject * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sDataObject_elementCount_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);if (arg1) (arg1)->elementCount = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sDataObject_elementCount_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataObject *arg1 = (sDataObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataObject_elementCount_get" "', argument " "1"" of type '" "sDataObject *""'"); 
  }
  arg1 = reinterpret_cast< sDataObject * >(argp1);result = (int) ((arg1)->elementCount);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_sDataObject(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  sDataObject *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_sDataObject.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_sDataObject.");
  result = (sDataObject *)new sDataObject();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_sDataObject, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_sDataObject(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    sDataObject * arg1 = (sDataObject *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_sDataAttribute_modelType_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataAttribute *arg1 = (sDataAttribute *) 0 ;
  ModelNodeType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataAttribute_modelType_set" "', argument " "1"" of type '" "sDataAttribute *""'"); 
  }
  arg1 = reinterpret_cast< sDataAttribute * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sDataAttribute_modelType_set" "', argument " "2"" of type '" "ModelNodeType""'");
  } 
  arg2 = static_cast< ModelNodeType >(val2);if (arg1) (arg1)->modelType = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sDataAttribute_modelType_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataAttribute *arg1 = (sDataAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ModelNodeType result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataAttribute_modelType_get" "', argument " "1"" of type '" "sDataAttribute *""'"); 
  }
  arg1 = reinterpret_cast< sDataAttribute * >(argp1);result = (ModelNodeType) ((arg1)->modelType);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sDataAttribute_name_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataAttribute *arg1 = (sDataAttribute *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataAttribute_name_set" "', argument " "1"" of type '" "sDataAttribute *""'"); 
  }
  arg1 = reinterpret_cast< sDataAttribute * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sDataAttribute_name_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->name;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->name = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->name = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sDataAttribute_name_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataAttribute *arg1 = (sDataAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataAttribute_name_get" "', argument " "1"" of type '" "sDataAttribute *""'"); 
  }
  arg1 = reinterpret_cast< sDataAttribute * >(argp1);result = (char *) ((arg1)->name);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sDataAttribute_parent_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataAttribute *arg1 = (sDataAttribute *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataAttribute_parent_set" "', argument " "1"" of type '" "sDataAttribute *""'"); 
  }
  arg1 = reinterpret_cast< sDataAttribute * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sModelNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sDataAttribute_parent_set" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);if (arg1) (arg1)->parent = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sDataAttribute_parent_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataAttribute *arg1 = (sDataAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ModelNode *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataAttribute_parent_get" "', argument " "1"" of type '" "sDataAttribute *""'"); 
  }
  arg1 = reinterpret_cast< sDataAttribute * >(argp1);result = (ModelNode *) ((arg1)->parent);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sModelNode, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sDataAttribute_sibling_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataAttribute *arg1 = (sDataAttribute *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataAttribute_sibling_set" "', argument " "1"" of type '" "sDataAttribute *""'"); 
  }
  arg1 = reinterpret_cast< sDataAttribute * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sModelNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sDataAttribute_sibling_set" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);if (arg1) (arg1)->sibling = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sDataAttribute_sibling_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataAttribute *arg1 = (sDataAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ModelNode *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataAttribute_sibling_get" "', argument " "1"" of type '" "sDataAttribute *""'"); 
  }
  arg1 = reinterpret_cast< sDataAttribute * >(argp1);result = (ModelNode *) ((arg1)->sibling);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sModelNode, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sDataAttribute_firstChild_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataAttribute *arg1 = (sDataAttribute *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataAttribute_firstChild_set" "', argument " "1"" of type '" "sDataAttribute *""'"); 
  }
  arg1 = reinterpret_cast< sDataAttribute * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sModelNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sDataAttribute_firstChild_set" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);if (arg1) (arg1)->firstChild = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sDataAttribute_firstChild_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataAttribute *arg1 = (sDataAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ModelNode *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataAttribute_firstChild_get" "', argument " "1"" of type '" "sDataAttribute *""'"); 
  }
  arg1 = reinterpret_cast< sDataAttribute * >(argp1);result = (ModelNode *) ((arg1)->firstChild);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sModelNode, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sDataAttribute_elementCount_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataAttribute *arg1 = (sDataAttribute *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataAttribute_elementCount_set" "', argument " "1"" of type '" "sDataAttribute *""'"); 
  }
  arg1 = reinterpret_cast< sDataAttribute * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sDataAttribute_elementCount_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);if (arg1) (arg1)->elementCount = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sDataAttribute_elementCount_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataAttribute *arg1 = (sDataAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataAttribute_elementCount_get" "', argument " "1"" of type '" "sDataAttribute *""'"); 
  }
  arg1 = reinterpret_cast< sDataAttribute * >(argp1);result = (int) ((arg1)->elementCount);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sDataAttribute_fc_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataAttribute *arg1 = (sDataAttribute *) 0 ;
  FunctionalConstraint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataAttribute_fc_set" "', argument " "1"" of type '" "sDataAttribute *""'"); 
  }
  arg1 = reinterpret_cast< sDataAttribute * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sDataAttribute_fc_set" "', argument " "2"" of type '" "FunctionalConstraint""'");
  } 
  arg2 = static_cast< FunctionalConstraint >(val2);if (arg1) (arg1)->fc = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sDataAttribute_fc_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataAttribute *arg1 = (sDataAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  FunctionalConstraint result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataAttribute_fc_get" "', argument " "1"" of type '" "sDataAttribute *""'"); 
  }
  arg1 = reinterpret_cast< sDataAttribute * >(argp1);result = (FunctionalConstraint) ((arg1)->fc);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sDataAttribute_type_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataAttribute *arg1 = (sDataAttribute *) 0 ;
  DataAttributeType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataAttribute_type_set" "', argument " "1"" of type '" "sDataAttribute *""'"); 
  }
  arg1 = reinterpret_cast< sDataAttribute * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sDataAttribute_type_set" "', argument " "2"" of type '" "DataAttributeType""'");
  } 
  arg2 = static_cast< DataAttributeType >(val2);if (arg1) (arg1)->type = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sDataAttribute_type_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataAttribute *arg1 = (sDataAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  DataAttributeType result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataAttribute_type_get" "', argument " "1"" of type '" "sDataAttribute *""'"); 
  }
  arg1 = reinterpret_cast< sDataAttribute * >(argp1);result = (DataAttributeType) ((arg1)->type);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sDataAttribute_triggerOptions_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataAttribute *arg1 = (sDataAttribute *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataAttribute_triggerOptions_set" "', argument " "1"" of type '" "sDataAttribute *""'"); 
  }
  arg1 = reinterpret_cast< sDataAttribute * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_char(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sDataAttribute_triggerOptions_set" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = static_cast< uint8_t >(val2);if (arg1) (arg1)->triggerOptions = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sDataAttribute_triggerOptions_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataAttribute *arg1 = (sDataAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataAttribute_triggerOptions_get" "', argument " "1"" of type '" "sDataAttribute *""'"); 
  }
  arg1 = reinterpret_cast< sDataAttribute * >(argp1);result = (uint8_t) ((arg1)->triggerOptions);
  jsresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sDataAttribute_mmsValue_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataAttribute *arg1 = (sDataAttribute *) 0 ;
  MmsValue *arg2 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataAttribute_mmsValue_set" "', argument " "1"" of type '" "sDataAttribute *""'"); 
  }
  arg1 = reinterpret_cast< sDataAttribute * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sMmsValue, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sDataAttribute_mmsValue_set" "', argument " "2"" of type '" "MmsValue *""'"); 
  }
  arg2 = reinterpret_cast< MmsValue * >(argp2);if (arg1) (arg1)->mmsValue = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sDataAttribute_mmsValue_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataAttribute *arg1 = (sDataAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsValue *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataAttribute_mmsValue_get" "', argument " "1"" of type '" "sDataAttribute *""'"); 
  }
  arg1 = reinterpret_cast< sDataAttribute * >(argp1);result = (MmsValue *) ((arg1)->mmsValue);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sDataAttribute_sAddr_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataAttribute *arg1 = (sDataAttribute *) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataAttribute_sAddr_set" "', argument " "1"" of type '" "sDataAttribute *""'"); 
  }
  arg1 = reinterpret_cast< sDataAttribute * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sDataAttribute_sAddr_set" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = static_cast< uint32_t >(val2);if (arg1) (arg1)->sAddr = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sDataAttribute_sAddr_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataAttribute *arg1 = (sDataAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataAttribute_sAddr_get" "', argument " "1"" of type '" "sDataAttribute *""'"); 
  }
  arg1 = reinterpret_cast< sDataAttribute * >(argp1);result = (uint32_t) ((arg1)->sAddr);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_sDataAttribute(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  sDataAttribute *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_sDataAttribute.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_sDataAttribute.");
  result = (sDataAttribute *)new sDataAttribute();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_sDataAttribute, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_sDataAttribute(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    sDataAttribute * arg1 = (sDataAttribute *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_DataSetEntry_logicalDeviceName_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataSetEntry *arg1 = (sDataSetEntry *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataSetEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetEntry_logicalDeviceName_set" "', argument " "1"" of type '" "sDataSetEntry *""'"); 
  }
  arg1 = reinterpret_cast< sDataSetEntry * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DataSetEntry_logicalDeviceName_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->logicalDeviceName;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->logicalDeviceName = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->logicalDeviceName = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_DataSetEntry_logicalDeviceName_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataSetEntry *arg1 = (sDataSetEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataSetEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetEntry_logicalDeviceName_get" "', argument " "1"" of type '" "sDataSetEntry *""'"); 
  }
  arg1 = reinterpret_cast< sDataSetEntry * >(argp1);result = (char *) ((arg1)->logicalDeviceName);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_DataSetEntry_isLDNameDynamicallyAllocated_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataSetEntry *arg1 = (sDataSetEntry *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataSetEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetEntry_isLDNameDynamicallyAllocated_set" "', argument " "1"" of type '" "sDataSetEntry *""'"); 
  }
  arg1 = reinterpret_cast< sDataSetEntry * >(argp1);ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DataSetEntry_isLDNameDynamicallyAllocated_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);if (arg1) (arg1)->isLDNameDynamicallyAllocated = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_DataSetEntry_isLDNameDynamicallyAllocated_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataSetEntry *arg1 = (sDataSetEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataSetEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetEntry_isLDNameDynamicallyAllocated_get" "', argument " "1"" of type '" "sDataSetEntry *""'"); 
  }
  arg1 = reinterpret_cast< sDataSetEntry * >(argp1);result = (bool) ((arg1)->isLDNameDynamicallyAllocated);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_DataSetEntry_variableName_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataSetEntry *arg1 = (sDataSetEntry *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataSetEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetEntry_variableName_set" "', argument " "1"" of type '" "sDataSetEntry *""'"); 
  }
  arg1 = reinterpret_cast< sDataSetEntry * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DataSetEntry_variableName_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->variableName;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->variableName = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->variableName = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_DataSetEntry_variableName_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataSetEntry *arg1 = (sDataSetEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataSetEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetEntry_variableName_get" "', argument " "1"" of type '" "sDataSetEntry *""'"); 
  }
  arg1 = reinterpret_cast< sDataSetEntry * >(argp1);result = (char *) ((arg1)->variableName);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_DataSetEntry_index_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataSetEntry *arg1 = (sDataSetEntry *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataSetEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetEntry_index_set" "', argument " "1"" of type '" "sDataSetEntry *""'"); 
  }
  arg1 = reinterpret_cast< sDataSetEntry * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DataSetEntry_index_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);if (arg1) (arg1)->index = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_DataSetEntry_index_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataSetEntry *arg1 = (sDataSetEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataSetEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetEntry_index_get" "', argument " "1"" of type '" "sDataSetEntry *""'"); 
  }
  arg1 = reinterpret_cast< sDataSetEntry * >(argp1);result = (int) ((arg1)->index);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_DataSetEntry_componentName_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataSetEntry *arg1 = (sDataSetEntry *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataSetEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetEntry_componentName_set" "', argument " "1"" of type '" "sDataSetEntry *""'"); 
  }
  arg1 = reinterpret_cast< sDataSetEntry * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DataSetEntry_componentName_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->componentName;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->componentName = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->componentName = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_DataSetEntry_componentName_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataSetEntry *arg1 = (sDataSetEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataSetEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetEntry_componentName_get" "', argument " "1"" of type '" "sDataSetEntry *""'"); 
  }
  arg1 = reinterpret_cast< sDataSetEntry * >(argp1);result = (char *) ((arg1)->componentName);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_DataSetEntry_value_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataSetEntry *arg1 = (sDataSetEntry *) 0 ;
  MmsValue *arg2 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataSetEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetEntry_value_set" "', argument " "1"" of type '" "sDataSetEntry *""'"); 
  }
  arg1 = reinterpret_cast< sDataSetEntry * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sMmsValue, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DataSetEntry_value_set" "', argument " "2"" of type '" "MmsValue *""'"); 
  }
  arg2 = reinterpret_cast< MmsValue * >(argp2);if (arg1) (arg1)->value = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_DataSetEntry_value_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataSetEntry *arg1 = (sDataSetEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsValue *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataSetEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetEntry_value_get" "', argument " "1"" of type '" "sDataSetEntry *""'"); 
  }
  arg1 = reinterpret_cast< sDataSetEntry * >(argp1);result = (MmsValue *) ((arg1)->value);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_DataSetEntry_sibling_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataSetEntry *arg1 = (sDataSetEntry *) 0 ;
  sDataSetEntry *arg2 = (sDataSetEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataSetEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetEntry_sibling_set" "', argument " "1"" of type '" "sDataSetEntry *""'"); 
  }
  arg1 = reinterpret_cast< sDataSetEntry * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sDataSetEntry, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DataSetEntry_sibling_set" "', argument " "2"" of type '" "sDataSetEntry *""'"); 
  }
  arg2 = reinterpret_cast< sDataSetEntry * >(argp2);if (arg1) (arg1)->sibling = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_DataSetEntry_sibling_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataSetEntry *arg1 = (sDataSetEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  sDataSetEntry *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataSetEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetEntry_sibling_get" "', argument " "1"" of type '" "sDataSetEntry *""'"); 
  }
  arg1 = reinterpret_cast< sDataSetEntry * >(argp1);result = (sDataSetEntry *) ((arg1)->sibling);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataSetEntry, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_DataSetEntry(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  sDataSetEntry *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_DataSetEntry.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_DataSetEntry.");
  result = (sDataSetEntry *)new sDataSetEntry();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_sDataSetEntry, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_DataSetEntry(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    sDataSetEntry * arg1 = (sDataSetEntry *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_sDataSet_logicalDeviceName_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataSet *arg1 = (sDataSet *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataSet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataSet_logicalDeviceName_set" "', argument " "1"" of type '" "sDataSet *""'"); 
  }
  arg1 = reinterpret_cast< sDataSet * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sDataSet_logicalDeviceName_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->logicalDeviceName;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->logicalDeviceName = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->logicalDeviceName = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sDataSet_logicalDeviceName_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataSet *arg1 = (sDataSet *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataSet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataSet_logicalDeviceName_get" "', argument " "1"" of type '" "sDataSet *""'"); 
  }
  arg1 = reinterpret_cast< sDataSet * >(argp1);result = (char *) ((arg1)->logicalDeviceName);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sDataSet_name_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataSet *arg1 = (sDataSet *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataSet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataSet_name_set" "', argument " "1"" of type '" "sDataSet *""'"); 
  }
  arg1 = reinterpret_cast< sDataSet * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sDataSet_name_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->name;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->name = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->name = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sDataSet_name_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataSet *arg1 = (sDataSet *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataSet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataSet_name_get" "', argument " "1"" of type '" "sDataSet *""'"); 
  }
  arg1 = reinterpret_cast< sDataSet * >(argp1);result = (char *) ((arg1)->name);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sDataSet_elementCount_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataSet *arg1 = (sDataSet *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataSet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataSet_elementCount_set" "', argument " "1"" of type '" "sDataSet *""'"); 
  }
  arg1 = reinterpret_cast< sDataSet * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sDataSet_elementCount_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);if (arg1) (arg1)->elementCount = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sDataSet_elementCount_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataSet *arg1 = (sDataSet *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataSet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataSet_elementCount_get" "', argument " "1"" of type '" "sDataSet *""'"); 
  }
  arg1 = reinterpret_cast< sDataSet * >(argp1);result = (int) ((arg1)->elementCount);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sDataSet_fcdas_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataSet *arg1 = (sDataSet *) 0 ;
  DataSetEntry *arg2 = (DataSetEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataSet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataSet_fcdas_set" "', argument " "1"" of type '" "sDataSet *""'"); 
  }
  arg1 = reinterpret_cast< sDataSet * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sDataSetEntry, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sDataSet_fcdas_set" "', argument " "2"" of type '" "DataSetEntry *""'"); 
  }
  arg2 = reinterpret_cast< DataSetEntry * >(argp2);if (arg1) (arg1)->fcdas = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sDataSet_fcdas_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataSet *arg1 = (sDataSet *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  DataSetEntry *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataSet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataSet_fcdas_get" "', argument " "1"" of type '" "sDataSet *""'"); 
  }
  arg1 = reinterpret_cast< sDataSet * >(argp1);result = (DataSetEntry *) ((arg1)->fcdas);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataSetEntry, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sDataSet_sibling_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sDataSet *arg1 = (sDataSet *) 0 ;
  DataSet *arg2 = (DataSet *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataSet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataSet_sibling_set" "', argument " "1"" of type '" "sDataSet *""'"); 
  }
  arg1 = reinterpret_cast< sDataSet * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sDataSet, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sDataSet_sibling_set" "', argument " "2"" of type '" "DataSet *""'"); 
  }
  arg2 = reinterpret_cast< DataSet * >(argp2);if (arg1) (arg1)->sibling = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sDataSet_sibling_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sDataSet *arg1 = (sDataSet *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  DataSet *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sDataSet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sDataSet_sibling_get" "', argument " "1"" of type '" "sDataSet *""'"); 
  }
  arg1 = reinterpret_cast< sDataSet * >(argp1);result = (DataSet *) ((arg1)->sibling);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataSet, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_sDataSet(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  sDataSet *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_sDataSet.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_sDataSet.");
  result = (sDataSet *)new sDataSet();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_sDataSet, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_sDataSet(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    sDataSet * arg1 = (sDataSet *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_sReportControlBlock_parent_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sReportControlBlock *arg1 = (sReportControlBlock *) 0 ;
  LogicalNode *arg2 = (LogicalNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sReportControlBlock_parent_set" "', argument " "1"" of type '" "sReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sReportControlBlock * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sLogicalNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sReportControlBlock_parent_set" "', argument " "2"" of type '" "LogicalNode *""'"); 
  }
  arg2 = reinterpret_cast< LogicalNode * >(argp2);if (arg1) (arg1)->parent = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sReportControlBlock_parent_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sReportControlBlock *arg1 = (sReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  LogicalNode *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sReportControlBlock_parent_get" "', argument " "1"" of type '" "sReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sReportControlBlock * >(argp1);result = (LogicalNode *) ((arg1)->parent);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLogicalNode, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sReportControlBlock_name_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sReportControlBlock *arg1 = (sReportControlBlock *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sReportControlBlock_name_set" "', argument " "1"" of type '" "sReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sReportControlBlock * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sReportControlBlock_name_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->name;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->name = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->name = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sReportControlBlock_name_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sReportControlBlock *arg1 = (sReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sReportControlBlock_name_get" "', argument " "1"" of type '" "sReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sReportControlBlock * >(argp1);result = (char *) ((arg1)->name);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sReportControlBlock_rptId_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sReportControlBlock *arg1 = (sReportControlBlock *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sReportControlBlock_rptId_set" "', argument " "1"" of type '" "sReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sReportControlBlock * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sReportControlBlock_rptId_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->rptId;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->rptId = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->rptId = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sReportControlBlock_rptId_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sReportControlBlock *arg1 = (sReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sReportControlBlock_rptId_get" "', argument " "1"" of type '" "sReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sReportControlBlock * >(argp1);result = (char *) ((arg1)->rptId);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sReportControlBlock_buffered_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sReportControlBlock *arg1 = (sReportControlBlock *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sReportControlBlock_buffered_set" "', argument " "1"" of type '" "sReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sReportControlBlock * >(argp1);ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sReportControlBlock_buffered_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);if (arg1) (arg1)->buffered = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sReportControlBlock_buffered_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sReportControlBlock *arg1 = (sReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sReportControlBlock_buffered_get" "', argument " "1"" of type '" "sReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sReportControlBlock * >(argp1);result = (bool) ((arg1)->buffered);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sReportControlBlock_dataSetName_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sReportControlBlock *arg1 = (sReportControlBlock *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sReportControlBlock_dataSetName_set" "', argument " "1"" of type '" "sReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sReportControlBlock * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sReportControlBlock_dataSetName_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->dataSetName;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->dataSetName = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->dataSetName = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sReportControlBlock_dataSetName_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sReportControlBlock *arg1 = (sReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sReportControlBlock_dataSetName_get" "', argument " "1"" of type '" "sReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sReportControlBlock * >(argp1);result = (char *) ((arg1)->dataSetName);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sReportControlBlock_confRef_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sReportControlBlock *arg1 = (sReportControlBlock *) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sReportControlBlock_confRef_set" "', argument " "1"" of type '" "sReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sReportControlBlock * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sReportControlBlock_confRef_set" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = static_cast< uint32_t >(val2);if (arg1) (arg1)->confRef = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sReportControlBlock_confRef_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sReportControlBlock *arg1 = (sReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sReportControlBlock_confRef_get" "', argument " "1"" of type '" "sReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sReportControlBlock * >(argp1);result = (uint32_t) ((arg1)->confRef);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sReportControlBlock_trgOps_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sReportControlBlock *arg1 = (sReportControlBlock *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sReportControlBlock_trgOps_set" "', argument " "1"" of type '" "sReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sReportControlBlock * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_char(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sReportControlBlock_trgOps_set" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = static_cast< uint8_t >(val2);if (arg1) (arg1)->trgOps = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sReportControlBlock_trgOps_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sReportControlBlock *arg1 = (sReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sReportControlBlock_trgOps_get" "', argument " "1"" of type '" "sReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sReportControlBlock * >(argp1);result = (uint8_t) ((arg1)->trgOps);
  jsresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sReportControlBlock_options_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sReportControlBlock *arg1 = (sReportControlBlock *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sReportControlBlock_options_set" "', argument " "1"" of type '" "sReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sReportControlBlock * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_char(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sReportControlBlock_options_set" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = static_cast< uint8_t >(val2);if (arg1) (arg1)->options = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sReportControlBlock_options_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sReportControlBlock *arg1 = (sReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sReportControlBlock_options_get" "', argument " "1"" of type '" "sReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sReportControlBlock * >(argp1);result = (uint8_t) ((arg1)->options);
  jsresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sReportControlBlock_bufferTime_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sReportControlBlock *arg1 = (sReportControlBlock *) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sReportControlBlock_bufferTime_set" "', argument " "1"" of type '" "sReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sReportControlBlock * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sReportControlBlock_bufferTime_set" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = static_cast< uint32_t >(val2);if (arg1) (arg1)->bufferTime = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sReportControlBlock_bufferTime_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sReportControlBlock *arg1 = (sReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sReportControlBlock_bufferTime_get" "', argument " "1"" of type '" "sReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sReportControlBlock * >(argp1);result = (uint32_t) ((arg1)->bufferTime);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sReportControlBlock_intPeriod_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sReportControlBlock *arg1 = (sReportControlBlock *) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sReportControlBlock_intPeriod_set" "', argument " "1"" of type '" "sReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sReportControlBlock * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sReportControlBlock_intPeriod_set" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = static_cast< uint32_t >(val2);if (arg1) (arg1)->intPeriod = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sReportControlBlock_intPeriod_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sReportControlBlock *arg1 = (sReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sReportControlBlock_intPeriod_get" "', argument " "1"" of type '" "sReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sReportControlBlock * >(argp1);result = (uint32_t) ((arg1)->intPeriod);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sReportControlBlock_clientReservation_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sReportControlBlock *arg1 = (sReportControlBlock *) 0 ;
  uint8_t *arg2 = (uint8_t *) (uint8_t *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sReportControlBlock_clientReservation_set" "', argument " "1"" of type '" "sReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sReportControlBlock * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sReportControlBlock_clientReservation_set" "', argument " "2"" of type '" "uint8_t [17]""'"); 
  } 
  arg2 = reinterpret_cast< uint8_t * >(argp2);{
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)17; ++ii) *(uint8_t *)&arg1->clientReservation[ii] = *((uint8_t *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""clientReservation""' of type '""uint8_t [17]""'");
    }
  }
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sReportControlBlock_clientReservation_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sReportControlBlock *arg1 = (sReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sReportControlBlock_clientReservation_get" "', argument " "1"" of type '" "sReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sReportControlBlock * >(argp1);result = (uint8_t *)(uint8_t *) ((arg1)->clientReservation);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sReportControlBlock_sibling_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sReportControlBlock *arg1 = (sReportControlBlock *) 0 ;
  ReportControlBlock *arg2 = (ReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sReportControlBlock_sibling_set" "', argument " "1"" of type '" "sReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sReportControlBlock * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sReportControlBlock, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sReportControlBlock_sibling_set" "', argument " "2"" of type '" "ReportControlBlock *""'"); 
  }
  arg2 = reinterpret_cast< ReportControlBlock * >(argp2);if (arg1) (arg1)->sibling = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sReportControlBlock_sibling_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sReportControlBlock *arg1 = (sReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ReportControlBlock *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sReportControlBlock_sibling_get" "', argument " "1"" of type '" "sReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sReportControlBlock * >(argp1);result = (ReportControlBlock *) ((arg1)->sibling);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_sReportControlBlock(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  sReportControlBlock *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_sReportControlBlock.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_sReportControlBlock.");
  result = (sReportControlBlock *)new sReportControlBlock();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_sReportControlBlock, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_sReportControlBlock(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    sReportControlBlock * arg1 = (sReportControlBlock *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_sLogControlBlock_parent_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sLogControlBlock *arg1 = (sLogControlBlock *) 0 ;
  LogicalNode *arg2 = (LogicalNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogControlBlock_parent_set" "', argument " "1"" of type '" "sLogControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sLogControlBlock * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sLogicalNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sLogControlBlock_parent_set" "', argument " "2"" of type '" "LogicalNode *""'"); 
  }
  arg2 = reinterpret_cast< LogicalNode * >(argp2);if (arg1) (arg1)->parent = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sLogControlBlock_parent_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sLogControlBlock *arg1 = (sLogControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  LogicalNode *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogControlBlock_parent_get" "', argument " "1"" of type '" "sLogControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sLogControlBlock * >(argp1);result = (LogicalNode *) ((arg1)->parent);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLogicalNode, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sLogControlBlock_name_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sLogControlBlock *arg1 = (sLogControlBlock *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogControlBlock_name_set" "', argument " "1"" of type '" "sLogControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sLogControlBlock * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sLogControlBlock_name_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->name;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->name = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->name = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sLogControlBlock_name_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sLogControlBlock *arg1 = (sLogControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogControlBlock_name_get" "', argument " "1"" of type '" "sLogControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sLogControlBlock * >(argp1);result = (char *) ((arg1)->name);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sLogControlBlock_dataSetName_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sLogControlBlock *arg1 = (sLogControlBlock *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogControlBlock_dataSetName_set" "', argument " "1"" of type '" "sLogControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sLogControlBlock * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sLogControlBlock_dataSetName_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->dataSetName;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->dataSetName = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->dataSetName = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sLogControlBlock_dataSetName_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sLogControlBlock *arg1 = (sLogControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogControlBlock_dataSetName_get" "', argument " "1"" of type '" "sLogControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sLogControlBlock * >(argp1);result = (char *) ((arg1)->dataSetName);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sLogControlBlock_logRef_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sLogControlBlock *arg1 = (sLogControlBlock *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogControlBlock_logRef_set" "', argument " "1"" of type '" "sLogControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sLogControlBlock * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sLogControlBlock_logRef_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->logRef;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->logRef = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->logRef = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sLogControlBlock_logRef_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sLogControlBlock *arg1 = (sLogControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogControlBlock_logRef_get" "', argument " "1"" of type '" "sLogControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sLogControlBlock * >(argp1);result = (char *) ((arg1)->logRef);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sLogControlBlock_trgOps_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sLogControlBlock *arg1 = (sLogControlBlock *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogControlBlock_trgOps_set" "', argument " "1"" of type '" "sLogControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sLogControlBlock * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_char(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sLogControlBlock_trgOps_set" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = static_cast< uint8_t >(val2);if (arg1) (arg1)->trgOps = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sLogControlBlock_trgOps_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sLogControlBlock *arg1 = (sLogControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogControlBlock_trgOps_get" "', argument " "1"" of type '" "sLogControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sLogControlBlock * >(argp1);result = (uint8_t) ((arg1)->trgOps);
  jsresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sLogControlBlock_intPeriod_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sLogControlBlock *arg1 = (sLogControlBlock *) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogControlBlock_intPeriod_set" "', argument " "1"" of type '" "sLogControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sLogControlBlock * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sLogControlBlock_intPeriod_set" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = static_cast< uint32_t >(val2);if (arg1) (arg1)->intPeriod = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sLogControlBlock_intPeriod_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sLogControlBlock *arg1 = (sLogControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogControlBlock_intPeriod_get" "', argument " "1"" of type '" "sLogControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sLogControlBlock * >(argp1);result = (uint32_t) ((arg1)->intPeriod);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sLogControlBlock_logEna_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sLogControlBlock *arg1 = (sLogControlBlock *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogControlBlock_logEna_set" "', argument " "1"" of type '" "sLogControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sLogControlBlock * >(argp1);ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sLogControlBlock_logEna_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);if (arg1) (arg1)->logEna = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sLogControlBlock_logEna_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sLogControlBlock *arg1 = (sLogControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogControlBlock_logEna_get" "', argument " "1"" of type '" "sLogControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sLogControlBlock * >(argp1);result = (bool) ((arg1)->logEna);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sLogControlBlock_reasonCode_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sLogControlBlock *arg1 = (sLogControlBlock *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogControlBlock_reasonCode_set" "', argument " "1"" of type '" "sLogControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sLogControlBlock * >(argp1);ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sLogControlBlock_reasonCode_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);if (arg1) (arg1)->reasonCode = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sLogControlBlock_reasonCode_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sLogControlBlock *arg1 = (sLogControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogControlBlock_reasonCode_get" "', argument " "1"" of type '" "sLogControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sLogControlBlock * >(argp1);result = (bool) ((arg1)->reasonCode);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sLogControlBlock_sibling_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sLogControlBlock *arg1 = (sLogControlBlock *) 0 ;
  LogControlBlock *arg2 = (LogControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogControlBlock_sibling_set" "', argument " "1"" of type '" "sLogControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sLogControlBlock * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sLogControlBlock, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sLogControlBlock_sibling_set" "', argument " "2"" of type '" "LogControlBlock *""'"); 
  }
  arg2 = reinterpret_cast< LogControlBlock * >(argp2);if (arg1) (arg1)->sibling = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sLogControlBlock_sibling_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sLogControlBlock *arg1 = (sLogControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  LogControlBlock *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLogControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLogControlBlock_sibling_get" "', argument " "1"" of type '" "sLogControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sLogControlBlock * >(argp1);result = (LogControlBlock *) ((arg1)->sibling);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLogControlBlock, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_sLogControlBlock(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  sLogControlBlock *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_sLogControlBlock.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_sLogControlBlock.");
  result = (sLogControlBlock *)new sLogControlBlock();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_sLogControlBlock, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_sLogControlBlock(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    sLogControlBlock * arg1 = (sLogControlBlock *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_sLog_parent_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sLog *arg1 = (sLog *) 0 ;
  LogicalNode *arg2 = (LogicalNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLog_parent_set" "', argument " "1"" of type '" "sLog *""'"); 
  }
  arg1 = reinterpret_cast< sLog * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sLogicalNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sLog_parent_set" "', argument " "2"" of type '" "LogicalNode *""'"); 
  }
  arg2 = reinterpret_cast< LogicalNode * >(argp2);if (arg1) (arg1)->parent = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sLog_parent_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sLog *arg1 = (sLog *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  LogicalNode *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLog_parent_get" "', argument " "1"" of type '" "sLog *""'"); 
  }
  arg1 = reinterpret_cast< sLog * >(argp1);result = (LogicalNode *) ((arg1)->parent);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLogicalNode, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sLog_name_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sLog *arg1 = (sLog *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLog_name_set" "', argument " "1"" of type '" "sLog *""'"); 
  }
  arg1 = reinterpret_cast< sLog * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sLog_name_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->name;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->name = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->name = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sLog_name_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sLog *arg1 = (sLog *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLog_name_get" "', argument " "1"" of type '" "sLog *""'"); 
  }
  arg1 = reinterpret_cast< sLog * >(argp1);result = (char *) ((arg1)->name);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sLog_sibling_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sLog *arg1 = (sLog *) 0 ;
  Log *arg2 = (Log *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLog_sibling_set" "', argument " "1"" of type '" "sLog *""'"); 
  }
  arg1 = reinterpret_cast< sLog * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sLog, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sLog_sibling_set" "', argument " "2"" of type '" "Log *""'"); 
  }
  arg2 = reinterpret_cast< Log * >(argp2);if (arg1) (arg1)->sibling = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sLog_sibling_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sLog *arg1 = (sLog *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Log *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLog_sibling_get" "', argument " "1"" of type '" "sLog *""'"); 
  }
  arg1 = reinterpret_cast< sLog * >(argp1);result = (Log *) ((arg1)->sibling);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLog, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_sLog(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  sLog *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_sLog.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_sLog.");
  result = (sLog *)new sLog();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_sLog, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_sLog(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    sLog * arg1 = (sLog *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_sSettingGroupControlBlock_parent_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sSettingGroupControlBlock *arg1 = (sSettingGroupControlBlock *) 0 ;
  LogicalNode *arg2 = (LogicalNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSettingGroupControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSettingGroupControlBlock_parent_set" "', argument " "1"" of type '" "sSettingGroupControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSettingGroupControlBlock * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sLogicalNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sSettingGroupControlBlock_parent_set" "', argument " "2"" of type '" "LogicalNode *""'"); 
  }
  arg2 = reinterpret_cast< LogicalNode * >(argp2);if (arg1) (arg1)->parent = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sSettingGroupControlBlock_parent_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sSettingGroupControlBlock *arg1 = (sSettingGroupControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  LogicalNode *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSettingGroupControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSettingGroupControlBlock_parent_get" "', argument " "1"" of type '" "sSettingGroupControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSettingGroupControlBlock * >(argp1);result = (LogicalNode *) ((arg1)->parent);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLogicalNode, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sSettingGroupControlBlock_actSG_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sSettingGroupControlBlock *arg1 = (sSettingGroupControlBlock *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSettingGroupControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSettingGroupControlBlock_actSG_set" "', argument " "1"" of type '" "sSettingGroupControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSettingGroupControlBlock * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_char(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sSettingGroupControlBlock_actSG_set" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = static_cast< uint8_t >(val2);if (arg1) (arg1)->actSG = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sSettingGroupControlBlock_actSG_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sSettingGroupControlBlock *arg1 = (sSettingGroupControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSettingGroupControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSettingGroupControlBlock_actSG_get" "', argument " "1"" of type '" "sSettingGroupControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSettingGroupControlBlock * >(argp1);result = (uint8_t) ((arg1)->actSG);
  jsresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sSettingGroupControlBlock_numOfSGs_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sSettingGroupControlBlock *arg1 = (sSettingGroupControlBlock *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSettingGroupControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSettingGroupControlBlock_numOfSGs_set" "', argument " "1"" of type '" "sSettingGroupControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSettingGroupControlBlock * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_char(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sSettingGroupControlBlock_numOfSGs_set" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = static_cast< uint8_t >(val2);if (arg1) (arg1)->numOfSGs = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sSettingGroupControlBlock_numOfSGs_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sSettingGroupControlBlock *arg1 = (sSettingGroupControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSettingGroupControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSettingGroupControlBlock_numOfSGs_get" "', argument " "1"" of type '" "sSettingGroupControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSettingGroupControlBlock * >(argp1);result = (uint8_t) ((arg1)->numOfSGs);
  jsresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sSettingGroupControlBlock_editSG_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sSettingGroupControlBlock *arg1 = (sSettingGroupControlBlock *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSettingGroupControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSettingGroupControlBlock_editSG_set" "', argument " "1"" of type '" "sSettingGroupControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSettingGroupControlBlock * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_char(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sSettingGroupControlBlock_editSG_set" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = static_cast< uint8_t >(val2);if (arg1) (arg1)->editSG = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sSettingGroupControlBlock_editSG_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sSettingGroupControlBlock *arg1 = (sSettingGroupControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSettingGroupControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSettingGroupControlBlock_editSG_get" "', argument " "1"" of type '" "sSettingGroupControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSettingGroupControlBlock * >(argp1);result = (uint8_t) ((arg1)->editSG);
  jsresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sSettingGroupControlBlock_cnfEdit_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sSettingGroupControlBlock *arg1 = (sSettingGroupControlBlock *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSettingGroupControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSettingGroupControlBlock_cnfEdit_set" "', argument " "1"" of type '" "sSettingGroupControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSettingGroupControlBlock * >(argp1);ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sSettingGroupControlBlock_cnfEdit_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);if (arg1) (arg1)->cnfEdit = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sSettingGroupControlBlock_cnfEdit_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sSettingGroupControlBlock *arg1 = (sSettingGroupControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSettingGroupControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSettingGroupControlBlock_cnfEdit_get" "', argument " "1"" of type '" "sSettingGroupControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSettingGroupControlBlock * >(argp1);result = (bool) ((arg1)->cnfEdit);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sSettingGroupControlBlock_timestamp_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sSettingGroupControlBlock *arg1 = (sSettingGroupControlBlock *) 0 ;
  uint64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSettingGroupControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSettingGroupControlBlock_timestamp_set" "', argument " "1"" of type '" "sSettingGroupControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSettingGroupControlBlock * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sSettingGroupControlBlock_timestamp_set" "', argument " "2"" of type '" "uint64_t""'");
  } 
  arg2 = static_cast< uint64_t >(val2);if (arg1) (arg1)->timestamp = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sSettingGroupControlBlock_timestamp_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sSettingGroupControlBlock *arg1 = (sSettingGroupControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint64_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSettingGroupControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSettingGroupControlBlock_timestamp_get" "', argument " "1"" of type '" "sSettingGroupControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSettingGroupControlBlock * >(argp1);result = (uint64_t) ((arg1)->timestamp);
  jsresult = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sSettingGroupControlBlock_resvTms_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sSettingGroupControlBlock *arg1 = (sSettingGroupControlBlock *) 0 ;
  uint16_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSettingGroupControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSettingGroupControlBlock_resvTms_set" "', argument " "1"" of type '" "sSettingGroupControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSettingGroupControlBlock * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_short(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sSettingGroupControlBlock_resvTms_set" "', argument " "2"" of type '" "uint16_t""'");
  } 
  arg2 = static_cast< uint16_t >(val2);if (arg1) (arg1)->resvTms = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sSettingGroupControlBlock_resvTms_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sSettingGroupControlBlock *arg1 = (sSettingGroupControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint16_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSettingGroupControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSettingGroupControlBlock_resvTms_get" "', argument " "1"" of type '" "sSettingGroupControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSettingGroupControlBlock * >(argp1);result = (uint16_t) ((arg1)->resvTms);
  jsresult = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sSettingGroupControlBlock_sibling_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sSettingGroupControlBlock *arg1 = (sSettingGroupControlBlock *) 0 ;
  SettingGroupControlBlock *arg2 = (SettingGroupControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSettingGroupControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSettingGroupControlBlock_sibling_set" "', argument " "1"" of type '" "sSettingGroupControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSettingGroupControlBlock * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sSettingGroupControlBlock, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sSettingGroupControlBlock_sibling_set" "', argument " "2"" of type '" "SettingGroupControlBlock *""'"); 
  }
  arg2 = reinterpret_cast< SettingGroupControlBlock * >(argp2);if (arg1) (arg1)->sibling = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sSettingGroupControlBlock_sibling_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sSettingGroupControlBlock *arg1 = (sSettingGroupControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  SettingGroupControlBlock *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSettingGroupControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSettingGroupControlBlock_sibling_get" "', argument " "1"" of type '" "sSettingGroupControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSettingGroupControlBlock * >(argp1);result = (SettingGroupControlBlock *) ((arg1)->sibling);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sSettingGroupControlBlock, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_sSettingGroupControlBlock(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  sSettingGroupControlBlock *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_sSettingGroupControlBlock.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_sSettingGroupControlBlock.");
  result = (sSettingGroupControlBlock *)new sSettingGroupControlBlock();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_sSettingGroupControlBlock, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_sSettingGroupControlBlock(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    sSettingGroupControlBlock * arg1 = (sSettingGroupControlBlock *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_sGSEControlBlock_parent_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sGSEControlBlock *arg1 = (sGSEControlBlock *) 0 ;
  LogicalNode *arg2 = (LogicalNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sGSEControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sGSEControlBlock_parent_set" "', argument " "1"" of type '" "sGSEControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sGSEControlBlock * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sLogicalNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sGSEControlBlock_parent_set" "', argument " "2"" of type '" "LogicalNode *""'"); 
  }
  arg2 = reinterpret_cast< LogicalNode * >(argp2);if (arg1) (arg1)->parent = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sGSEControlBlock_parent_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sGSEControlBlock *arg1 = (sGSEControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  LogicalNode *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sGSEControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sGSEControlBlock_parent_get" "', argument " "1"" of type '" "sGSEControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sGSEControlBlock * >(argp1);result = (LogicalNode *) ((arg1)->parent);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLogicalNode, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sGSEControlBlock_name_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sGSEControlBlock *arg1 = (sGSEControlBlock *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sGSEControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sGSEControlBlock_name_set" "', argument " "1"" of type '" "sGSEControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sGSEControlBlock * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sGSEControlBlock_name_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->name;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->name = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->name = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sGSEControlBlock_name_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sGSEControlBlock *arg1 = (sGSEControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sGSEControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sGSEControlBlock_name_get" "', argument " "1"" of type '" "sGSEControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sGSEControlBlock * >(argp1);result = (char *) ((arg1)->name);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sGSEControlBlock_appId_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sGSEControlBlock *arg1 = (sGSEControlBlock *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sGSEControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sGSEControlBlock_appId_set" "', argument " "1"" of type '" "sGSEControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sGSEControlBlock * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sGSEControlBlock_appId_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->appId;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->appId = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->appId = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sGSEControlBlock_appId_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sGSEControlBlock *arg1 = (sGSEControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sGSEControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sGSEControlBlock_appId_get" "', argument " "1"" of type '" "sGSEControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sGSEControlBlock * >(argp1);result = (char *) ((arg1)->appId);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sGSEControlBlock_dataSetName_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sGSEControlBlock *arg1 = (sGSEControlBlock *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sGSEControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sGSEControlBlock_dataSetName_set" "', argument " "1"" of type '" "sGSEControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sGSEControlBlock * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sGSEControlBlock_dataSetName_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->dataSetName;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->dataSetName = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->dataSetName = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sGSEControlBlock_dataSetName_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sGSEControlBlock *arg1 = (sGSEControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sGSEControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sGSEControlBlock_dataSetName_get" "', argument " "1"" of type '" "sGSEControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sGSEControlBlock * >(argp1);result = (char *) ((arg1)->dataSetName);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sGSEControlBlock_confRev_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sGSEControlBlock *arg1 = (sGSEControlBlock *) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sGSEControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sGSEControlBlock_confRev_set" "', argument " "1"" of type '" "sGSEControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sGSEControlBlock * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sGSEControlBlock_confRev_set" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = static_cast< uint32_t >(val2);if (arg1) (arg1)->confRev = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sGSEControlBlock_confRev_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sGSEControlBlock *arg1 = (sGSEControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sGSEControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sGSEControlBlock_confRev_get" "', argument " "1"" of type '" "sGSEControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sGSEControlBlock * >(argp1);result = (uint32_t) ((arg1)->confRev);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sGSEControlBlock_fixedOffs_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sGSEControlBlock *arg1 = (sGSEControlBlock *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sGSEControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sGSEControlBlock_fixedOffs_set" "', argument " "1"" of type '" "sGSEControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sGSEControlBlock * >(argp1);ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sGSEControlBlock_fixedOffs_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);if (arg1) (arg1)->fixedOffs = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sGSEControlBlock_fixedOffs_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sGSEControlBlock *arg1 = (sGSEControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sGSEControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sGSEControlBlock_fixedOffs_get" "', argument " "1"" of type '" "sGSEControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sGSEControlBlock * >(argp1);result = (bool) ((arg1)->fixedOffs);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sGSEControlBlock_address_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sGSEControlBlock *arg1 = (sGSEControlBlock *) 0 ;
  PhyComAddress *arg2 = (PhyComAddress *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sGSEControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sGSEControlBlock_address_set" "', argument " "1"" of type '" "sGSEControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sGSEControlBlock * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_PhyComAddress, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sGSEControlBlock_address_set" "', argument " "2"" of type '" "PhyComAddress *""'"); 
  }
  arg2 = reinterpret_cast< PhyComAddress * >(argp2);if (arg1) (arg1)->address = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sGSEControlBlock_address_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sGSEControlBlock *arg1 = (sGSEControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PhyComAddress *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sGSEControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sGSEControlBlock_address_get" "', argument " "1"" of type '" "sGSEControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sGSEControlBlock * >(argp1);result = (PhyComAddress *) ((arg1)->address);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PhyComAddress, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sGSEControlBlock_minTime_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sGSEControlBlock *arg1 = (sGSEControlBlock *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sGSEControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sGSEControlBlock_minTime_set" "', argument " "1"" of type '" "sGSEControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sGSEControlBlock * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sGSEControlBlock_minTime_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);if (arg1) (arg1)->minTime = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sGSEControlBlock_minTime_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sGSEControlBlock *arg1 = (sGSEControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sGSEControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sGSEControlBlock_minTime_get" "', argument " "1"" of type '" "sGSEControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sGSEControlBlock * >(argp1);result = (int) ((arg1)->minTime);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sGSEControlBlock_maxTime_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sGSEControlBlock *arg1 = (sGSEControlBlock *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sGSEControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sGSEControlBlock_maxTime_set" "', argument " "1"" of type '" "sGSEControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sGSEControlBlock * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sGSEControlBlock_maxTime_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);if (arg1) (arg1)->maxTime = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sGSEControlBlock_maxTime_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sGSEControlBlock *arg1 = (sGSEControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sGSEControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sGSEControlBlock_maxTime_get" "', argument " "1"" of type '" "sGSEControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sGSEControlBlock * >(argp1);result = (int) ((arg1)->maxTime);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sGSEControlBlock_sibling_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sGSEControlBlock *arg1 = (sGSEControlBlock *) 0 ;
  GSEControlBlock *arg2 = (GSEControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sGSEControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sGSEControlBlock_sibling_set" "', argument " "1"" of type '" "sGSEControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sGSEControlBlock * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sGSEControlBlock, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sGSEControlBlock_sibling_set" "', argument " "2"" of type '" "GSEControlBlock *""'"); 
  }
  arg2 = reinterpret_cast< GSEControlBlock * >(argp2);if (arg1) (arg1)->sibling = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sGSEControlBlock_sibling_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sGSEControlBlock *arg1 = (sGSEControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  GSEControlBlock *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sGSEControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sGSEControlBlock_sibling_get" "', argument " "1"" of type '" "sGSEControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sGSEControlBlock * >(argp1);result = (GSEControlBlock *) ((arg1)->sibling);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sGSEControlBlock, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_sGSEControlBlock(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  sGSEControlBlock *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_sGSEControlBlock.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_sGSEControlBlock.");
  result = (sGSEControlBlock *)new sGSEControlBlock();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_sGSEControlBlock, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_sGSEControlBlock(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    sGSEControlBlock * arg1 = (sGSEControlBlock *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_sSVControlBlock_parent_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sSVControlBlock *arg1 = (sSVControlBlock *) 0 ;
  LogicalNode *arg2 = (LogicalNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSVControlBlock_parent_set" "', argument " "1"" of type '" "sSVControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSVControlBlock * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sLogicalNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sSVControlBlock_parent_set" "', argument " "2"" of type '" "LogicalNode *""'"); 
  }
  arg2 = reinterpret_cast< LogicalNode * >(argp2);if (arg1) (arg1)->parent = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sSVControlBlock_parent_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sSVControlBlock *arg1 = (sSVControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  LogicalNode *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSVControlBlock_parent_get" "', argument " "1"" of type '" "sSVControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSVControlBlock * >(argp1);result = (LogicalNode *) ((arg1)->parent);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLogicalNode, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sSVControlBlock_name_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sSVControlBlock *arg1 = (sSVControlBlock *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSVControlBlock_name_set" "', argument " "1"" of type '" "sSVControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSVControlBlock * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sSVControlBlock_name_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->name;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->name = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->name = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sSVControlBlock_name_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sSVControlBlock *arg1 = (sSVControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSVControlBlock_name_get" "', argument " "1"" of type '" "sSVControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSVControlBlock * >(argp1);result = (char *) ((arg1)->name);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sSVControlBlock_svId_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sSVControlBlock *arg1 = (sSVControlBlock *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSVControlBlock_svId_set" "', argument " "1"" of type '" "sSVControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSVControlBlock * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sSVControlBlock_svId_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->svId;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->svId = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->svId = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sSVControlBlock_svId_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sSVControlBlock *arg1 = (sSVControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSVControlBlock_svId_get" "', argument " "1"" of type '" "sSVControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSVControlBlock * >(argp1);result = (char *) ((arg1)->svId);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sSVControlBlock_dataSetName_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sSVControlBlock *arg1 = (sSVControlBlock *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSVControlBlock_dataSetName_set" "', argument " "1"" of type '" "sSVControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSVControlBlock * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sSVControlBlock_dataSetName_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->dataSetName;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->dataSetName = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->dataSetName = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sSVControlBlock_dataSetName_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sSVControlBlock *arg1 = (sSVControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSVControlBlock_dataSetName_get" "', argument " "1"" of type '" "sSVControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSVControlBlock * >(argp1);result = (char *) ((arg1)->dataSetName);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sSVControlBlock_optFlds_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sSVControlBlock *arg1 = (sSVControlBlock *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSVControlBlock_optFlds_set" "', argument " "1"" of type '" "sSVControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSVControlBlock * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_char(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sSVControlBlock_optFlds_set" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = static_cast< uint8_t >(val2);if (arg1) (arg1)->optFlds = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sSVControlBlock_optFlds_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sSVControlBlock *arg1 = (sSVControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSVControlBlock_optFlds_get" "', argument " "1"" of type '" "sSVControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSVControlBlock * >(argp1);result = (uint8_t) ((arg1)->optFlds);
  jsresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sSVControlBlock_smpMod_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sSVControlBlock *arg1 = (sSVControlBlock *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSVControlBlock_smpMod_set" "', argument " "1"" of type '" "sSVControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSVControlBlock * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_char(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sSVControlBlock_smpMod_set" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = static_cast< uint8_t >(val2);if (arg1) (arg1)->smpMod = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sSVControlBlock_smpMod_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sSVControlBlock *arg1 = (sSVControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSVControlBlock_smpMod_get" "', argument " "1"" of type '" "sSVControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSVControlBlock * >(argp1);result = (uint8_t) ((arg1)->smpMod);
  jsresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sSVControlBlock_smpRate_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sSVControlBlock *arg1 = (sSVControlBlock *) 0 ;
  uint16_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSVControlBlock_smpRate_set" "', argument " "1"" of type '" "sSVControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSVControlBlock * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_short(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sSVControlBlock_smpRate_set" "', argument " "2"" of type '" "uint16_t""'");
  } 
  arg2 = static_cast< uint16_t >(val2);if (arg1) (arg1)->smpRate = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sSVControlBlock_smpRate_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sSVControlBlock *arg1 = (sSVControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint16_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSVControlBlock_smpRate_get" "', argument " "1"" of type '" "sSVControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSVControlBlock * >(argp1);result = (uint16_t) ((arg1)->smpRate);
  jsresult = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sSVControlBlock_confRev_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sSVControlBlock *arg1 = (sSVControlBlock *) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSVControlBlock_confRev_set" "', argument " "1"" of type '" "sSVControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSVControlBlock * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sSVControlBlock_confRev_set" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = static_cast< uint32_t >(val2);if (arg1) (arg1)->confRev = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sSVControlBlock_confRev_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sSVControlBlock *arg1 = (sSVControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSVControlBlock_confRev_get" "', argument " "1"" of type '" "sSVControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSVControlBlock * >(argp1);result = (uint32_t) ((arg1)->confRev);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sSVControlBlock_dstAddress_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sSVControlBlock *arg1 = (sSVControlBlock *) 0 ;
  PhyComAddress *arg2 = (PhyComAddress *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSVControlBlock_dstAddress_set" "', argument " "1"" of type '" "sSVControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSVControlBlock * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_PhyComAddress, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sSVControlBlock_dstAddress_set" "', argument " "2"" of type '" "PhyComAddress *""'"); 
  }
  arg2 = reinterpret_cast< PhyComAddress * >(argp2);if (arg1) (arg1)->dstAddress = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sSVControlBlock_dstAddress_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sSVControlBlock *arg1 = (sSVControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PhyComAddress *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSVControlBlock_dstAddress_get" "', argument " "1"" of type '" "sSVControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSVControlBlock * >(argp1);result = (PhyComAddress *) ((arg1)->dstAddress);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PhyComAddress, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sSVControlBlock_isUnicast_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sSVControlBlock *arg1 = (sSVControlBlock *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSVControlBlock_isUnicast_set" "', argument " "1"" of type '" "sSVControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSVControlBlock * >(argp1);ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sSVControlBlock_isUnicast_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);if (arg1) (arg1)->isUnicast = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sSVControlBlock_isUnicast_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sSVControlBlock *arg1 = (sSVControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSVControlBlock_isUnicast_get" "', argument " "1"" of type '" "sSVControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSVControlBlock * >(argp1);result = (bool) ((arg1)->isUnicast);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sSVControlBlock_noASDU_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sSVControlBlock *arg1 = (sSVControlBlock *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSVControlBlock_noASDU_set" "', argument " "1"" of type '" "sSVControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSVControlBlock * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sSVControlBlock_noASDU_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);if (arg1) (arg1)->noASDU = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sSVControlBlock_noASDU_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sSVControlBlock *arg1 = (sSVControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSVControlBlock_noASDU_get" "', argument " "1"" of type '" "sSVControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSVControlBlock * >(argp1);result = (int) ((arg1)->noASDU);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sSVControlBlock_sibling_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sSVControlBlock *arg1 = (sSVControlBlock *) 0 ;
  SVControlBlock *arg2 = (SVControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSVControlBlock_sibling_set" "', argument " "1"" of type '" "sSVControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSVControlBlock * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sSVControlBlock, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sSVControlBlock_sibling_set" "', argument " "2"" of type '" "SVControlBlock *""'"); 
  }
  arg2 = reinterpret_cast< SVControlBlock * >(argp2);if (arg1) (arg1)->sibling = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sSVControlBlock_sibling_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sSVControlBlock *arg1 = (sSVControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  SVControlBlock *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sSVControlBlock_sibling_get" "', argument " "1"" of type '" "sSVControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< sSVControlBlock * >(argp1);result = (SVControlBlock *) ((arg1)->sibling);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_sSVControlBlock(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  sSVControlBlock *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_sSVControlBlock.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_sSVControlBlock.");
  result = (sSVControlBlock *)new sSVControlBlock();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_sSVControlBlock, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_sSVControlBlock(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    sSVControlBlock * arg1 = (sSVControlBlock *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue _wrap_ModelNode_getChildCount(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ModelNode *arg1 = (ModelNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ModelNode_getChildCount.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModelNode_getChildCount" "', argument " "1"" of type '" "ModelNode *""'"); 
  }
  arg1 = reinterpret_cast< ModelNode * >(argp1);result = (int)ModelNode_getChildCount(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ModelNode_getChild(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ModelNode *arg1 = (ModelNode *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  ModelNode *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ModelNode_getChild.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModelNode_getChild" "', argument " "1"" of type '" "ModelNode *""'"); 
  }
  arg1 = reinterpret_cast< ModelNode * >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ModelNode_getChild" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);result = (ModelNode *)ModelNode_getChild(arg1,(char const *)arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sModelNode, 0 |  0 );
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ModelNode_getChildWithFc(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ModelNode *arg1 = (ModelNode *) 0 ;
  char *arg2 = (char *) 0 ;
  FunctionalConstraint arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  ModelNode *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ModelNode_getChildWithFc.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModelNode_getChildWithFc" "', argument " "1"" of type '" "ModelNode *""'"); 
  }
  arg1 = reinterpret_cast< ModelNode * >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ModelNode_getChildWithFc" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ModelNode_getChildWithFc" "', argument " "3"" of type '" "FunctionalConstraint""'");
  } 
  arg3 = static_cast< FunctionalConstraint >(val3);result = (ModelNode *)ModelNode_getChildWithFc(arg1,(char const *)arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sModelNode, 0 |  0 );
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ModelNode_getObjectReference(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ModelNode *arg1 = (ModelNode *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ModelNode_getObjectReference.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModelNode_getObjectReference" "', argument " "1"" of type '" "ModelNode *""'"); 
  }
  arg1 = reinterpret_cast< ModelNode * >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ModelNode_getObjectReference" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);result = (char *)ModelNode_getObjectReference(arg1,arg2);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ModelNode_getObjectReferenceEx(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ModelNode *arg1 = (ModelNode *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ModelNode_getObjectReferenceEx.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModelNode_getObjectReferenceEx" "', argument " "1"" of type '" "ModelNode *""'"); 
  }
  arg1 = reinterpret_cast< ModelNode * >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ModelNode_getObjectReferenceEx" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);ecode3 = SWIG_AsVal_bool(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ModelNode_getObjectReferenceEx" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);result = (char *)ModelNode_getObjectReferenceEx(arg1,arg2,arg3);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ModelNode_getType(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ModelNode *arg1 = (ModelNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ModelNodeType result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ModelNode_getType.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModelNode_getType" "', argument " "1"" of type '" "ModelNode *""'"); 
  }
  arg1 = reinterpret_cast< ModelNode * >(argp1);result = (ModelNodeType)ModelNode_getType(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ModelNode_getName(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ModelNode *arg1 = (ModelNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ModelNode_getName.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModelNode_getName" "', argument " "1"" of type '" "ModelNode *""'"); 
  }
  arg1 = reinterpret_cast< ModelNode * >(argp1);result = (char *)ModelNode_getName(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ModelNode_getParent(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ModelNode *arg1 = (ModelNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ModelNode *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ModelNode_getParent.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModelNode_getParent" "', argument " "1"" of type '" "ModelNode *""'"); 
  }
  arg1 = reinterpret_cast< ModelNode * >(argp1);result = (ModelNode *)ModelNode_getParent(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sModelNode, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ModelNode_getChildren(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ModelNode *arg1 = (ModelNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  LinkedList result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ModelNode_getChildren.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModelNode_getChildren" "', argument " "1"" of type '" "ModelNode *""'"); 
  }
  arg1 = reinterpret_cast< ModelNode * >(argp1);result = (LinkedList)ModelNode_getChildren(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedModel_setIedName(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedModel *arg1 = (IedModel *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedModel_setIedName.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedModel_setIedName" "', argument " "1"" of type '" "IedModel *""'"); 
  }
  arg1 = reinterpret_cast< IedModel * >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedModel_setIedName" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);IedModel_setIedName(arg1,(char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedModel_getModelNodeByObjectReference(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedModel *arg1 = (IedModel *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  ModelNode *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedModel_getModelNodeByObjectReference.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedModel_getModelNodeByObjectReference" "', argument " "1"" of type '" "IedModel *""'"); 
  }
  arg1 = reinterpret_cast< IedModel * >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedModel_getModelNodeByObjectReference" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);result = (ModelNode *)IedModel_getModelNodeByObjectReference(arg1,(char const *)arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sModelNode, 0 |  0 );
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedModel_getSVControlBlock(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedModel *arg1 = (IedModel *) 0 ;
  LogicalNode *arg2 = (LogicalNode *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  SVControlBlock *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedModel_getSVControlBlock.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedModel_getSVControlBlock" "', argument " "1"" of type '" "IedModel *""'"); 
  }
  arg1 = reinterpret_cast< IedModel * >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sLogicalNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedModel_getSVControlBlock" "', argument " "2"" of type '" "LogicalNode *""'"); 
  }
  arg2 = reinterpret_cast< LogicalNode * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedModel_getSVControlBlock" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);result = (SVControlBlock *)IedModel_getSVControlBlock(arg1,arg2,(char const *)arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedModel_getModelNodeByShortObjectReference(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedModel *arg1 = (IedModel *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  ModelNode *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedModel_getModelNodeByShortObjectReference.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedModel_getModelNodeByShortObjectReference" "', argument " "1"" of type '" "IedModel *""'"); 
  }
  arg1 = reinterpret_cast< IedModel * >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedModel_getModelNodeByShortObjectReference" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);result = (ModelNode *)IedModel_getModelNodeByShortObjectReference(arg1,(char const *)arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sModelNode, 0 |  0 );
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedModel_getModelNodeByShortAddress(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedModel *arg1 = (IedModel *) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  ModelNode *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedModel_getModelNodeByShortAddress.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedModel_getModelNodeByShortAddress" "', argument " "1"" of type '" "IedModel *""'"); 
  }
  arg1 = reinterpret_cast< IedModel * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IedModel_getModelNodeByShortAddress" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = static_cast< uint32_t >(val2);result = (ModelNode *)IedModel_getModelNodeByShortAddress(arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sModelNode, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedModel_getDeviceByInst(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedModel *arg1 = (IedModel *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  LogicalDevice *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedModel_getDeviceByInst.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedModel_getDeviceByInst" "', argument " "1"" of type '" "IedModel *""'"); 
  }
  arg1 = reinterpret_cast< IedModel * >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedModel_getDeviceByInst" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);result = (LogicalDevice *)IedModel_getDeviceByInst(arg1,(char const *)arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLogicalDevice, 0 |  0 );
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedModel_getDeviceByIndex(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedModel *arg1 = (IedModel *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  LogicalDevice *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedModel_getDeviceByIndex.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedModel_getDeviceByIndex" "', argument " "1"" of type '" "IedModel *""'"); 
  }
  arg1 = reinterpret_cast< IedModel * >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IedModel_getDeviceByIndex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);result = (LogicalDevice *)IedModel_getDeviceByIndex(arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLogicalDevice, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_LogicalDevice_getLogicalNode(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  LogicalDevice *arg1 = (LogicalDevice *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  LogicalNode *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_LogicalDevice_getLogicalNode.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sLogicalDevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogicalDevice_getLogicalNode" "', argument " "1"" of type '" "LogicalDevice *""'"); 
  }
  arg1 = reinterpret_cast< LogicalDevice * >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LogicalDevice_getLogicalNode" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);result = (LogicalNode *)LogicalDevice_getLogicalNode(arg1,(char const *)arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLogicalNode, 0 |  0 );
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_LogicalDevice_getSettingGroupControlBlock(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  LogicalDevice *arg1 = (LogicalDevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  SettingGroupControlBlock *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_LogicalDevice_getSettingGroupControlBlock.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sLogicalDevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogicalDevice_getSettingGroupControlBlock" "', argument " "1"" of type '" "LogicalDevice *""'"); 
  }
  arg1 = reinterpret_cast< LogicalDevice * >(argp1);result = (SettingGroupControlBlock *)LogicalDevice_getSettingGroupControlBlock(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sSettingGroupControlBlock, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedModel_setAttributeValuesToNull(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedModel *arg1 = (IedModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedModel_setAttributeValuesToNull.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedModel_setAttributeValuesToNull" "', argument " "1"" of type '" "IedModel *""'"); 
  }
  arg1 = reinterpret_cast< IedModel * >(argp1);IedModel_setAttributeValuesToNull(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedModel_getDevice(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedModel *arg1 = (IedModel *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  LogicalDevice *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedModel_getDevice.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedModel_getDevice" "', argument " "1"" of type '" "IedModel *""'"); 
  }
  arg1 = reinterpret_cast< IedModel * >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedModel_getDevice" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);result = (LogicalDevice *)IedModel_getDevice(arg1,(char const *)arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLogicalDevice, 0 |  0 );
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedModel_lookupDataSet(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedModel *arg1 = (IedModel *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  DataSet *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedModel_lookupDataSet.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedModel_lookupDataSet" "', argument " "1"" of type '" "IedModel *""'"); 
  }
  arg1 = reinterpret_cast< IedModel * >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedModel_lookupDataSet" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);result = (DataSet *)IedModel_lookupDataSet(arg1,(char const *)arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataSet, 0 |  0 );
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedModel_lookupDataAttributeByMmsValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedModel *arg1 = (IedModel *) 0 ;
  MmsValue *arg2 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  DataAttribute *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedModel_lookupDataAttributeByMmsValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedModel_lookupDataAttributeByMmsValue" "', argument " "1"" of type '" "IedModel *""'"); 
  }
  arg1 = reinterpret_cast< IedModel * >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedModel_lookupDataAttributeByMmsValue" "', argument " "2"" of type '" "MmsValue *""'"); 
  }
  arg2 = reinterpret_cast< MmsValue * >(argp2);result = (DataAttribute *)IedModel_lookupDataAttributeByMmsValue(arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataAttribute, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedModel_getLogicalDeviceCount(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedModel *arg1 = (IedModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedModel_getLogicalDeviceCount.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedModel_getLogicalDeviceCount" "', argument " "1"" of type '" "IedModel *""'"); 
  }
  arg1 = reinterpret_cast< IedModel * >(argp1);result = (int)IedModel_getLogicalDeviceCount(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_LogicalDevice_getLogicalNodeCount(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  LogicalDevice *arg1 = (LogicalDevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_LogicalDevice_getLogicalNodeCount.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sLogicalDevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogicalDevice_getLogicalNodeCount" "', argument " "1"" of type '" "LogicalDevice *""'"); 
  }
  arg1 = reinterpret_cast< LogicalDevice * >(argp1);result = (int)LogicalDevice_getLogicalNodeCount(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_LogicalDevice_getChildByMmsVariableName(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  LogicalDevice *arg1 = (LogicalDevice *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  ModelNode *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_LogicalDevice_getChildByMmsVariableName.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sLogicalDevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogicalDevice_getChildByMmsVariableName" "', argument " "1"" of type '" "LogicalDevice *""'"); 
  }
  arg1 = reinterpret_cast< LogicalDevice * >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LogicalDevice_getChildByMmsVariableName" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);result = (ModelNode *)LogicalDevice_getChildByMmsVariableName(arg1,(char const *)arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sModelNode, 0 |  0 );
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_LogicalNode_hasFCData(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  LogicalNode *arg1 = (LogicalNode *) 0 ;
  FunctionalConstraint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_LogicalNode_hasFCData.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sLogicalNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogicalNode_hasFCData" "', argument " "1"" of type '" "LogicalNode *""'"); 
  }
  arg1 = reinterpret_cast< LogicalNode * >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LogicalNode_hasFCData" "', argument " "2"" of type '" "FunctionalConstraint""'");
  } 
  arg2 = static_cast< FunctionalConstraint >(val2);result = (bool)LogicalNode_hasFCData(arg1,arg2);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_LogicalNode_getDataSet(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  LogicalNode *arg1 = (LogicalNode *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  DataSet *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_LogicalNode_getDataSet.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sLogicalNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogicalNode_getDataSet" "', argument " "1"" of type '" "LogicalNode *""'"); 
  }
  arg1 = reinterpret_cast< LogicalNode * >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LogicalNode_getDataSet" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);result = (DataSet *)LogicalNode_getDataSet(arg1,(char const *)arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataSet, 0 |  0 );
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_DataObject_hasFCData(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  DataObject *arg1 = (DataObject *) 0 ;
  FunctionalConstraint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_DataObject_hasFCData.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sDataObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataObject_hasFCData" "', argument " "1"" of type '" "DataObject *""'"); 
  }
  arg1 = reinterpret_cast< DataObject * >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DataObject_hasFCData" "', argument " "2"" of type '" "FunctionalConstraint""'");
  } 
  arg2 = static_cast< FunctionalConstraint >(val2);result = (bool)DataObject_hasFCData(arg1,arg2);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_sIedServerConfig_reportBufferSize_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_reportBufferSize_set" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sIedServerConfig_reportBufferSize_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);if (arg1) (arg1)->reportBufferSize = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIedServerConfig_reportBufferSize_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_reportBufferSize_get" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);result = (int) ((arg1)->reportBufferSize);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIedServerConfig_reportBufferSizeURCBs_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_reportBufferSizeURCBs_set" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sIedServerConfig_reportBufferSizeURCBs_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);if (arg1) (arg1)->reportBufferSizeURCBs = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIedServerConfig_reportBufferSizeURCBs_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_reportBufferSizeURCBs_get" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);result = (int) ((arg1)->reportBufferSizeURCBs);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIedServerConfig_fileServiceBasepath_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_fileServiceBasepath_set" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sIedServerConfig_fileServiceBasepath_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);delete[] arg1->fileServiceBasepath;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->fileServiceBasepath = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->fileServiceBasepath = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIedServerConfig_fileServiceBasepath_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_fileServiceBasepath_get" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);result = (char *) ((arg1)->fileServiceBasepath);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIedServerConfig_enableFileService_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_enableFileService_set" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sIedServerConfig_enableFileService_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);if (arg1) (arg1)->enableFileService = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIedServerConfig_enableFileService_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_enableFileService_get" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);result = (bool) ((arg1)->enableFileService);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIedServerConfig_enableDynamicDataSetService_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_enableDynamicDataSetService_set" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sIedServerConfig_enableDynamicDataSetService_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);if (arg1) (arg1)->enableDynamicDataSetService = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIedServerConfig_enableDynamicDataSetService_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_enableDynamicDataSetService_get" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);result = (bool) ((arg1)->enableDynamicDataSetService);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIedServerConfig_maxAssociationSpecificDataSets_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_maxAssociationSpecificDataSets_set" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sIedServerConfig_maxAssociationSpecificDataSets_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);if (arg1) (arg1)->maxAssociationSpecificDataSets = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIedServerConfig_maxAssociationSpecificDataSets_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_maxAssociationSpecificDataSets_get" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);result = (int) ((arg1)->maxAssociationSpecificDataSets);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIedServerConfig_maxDomainSpecificDataSets_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_maxDomainSpecificDataSets_set" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sIedServerConfig_maxDomainSpecificDataSets_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);if (arg1) (arg1)->maxDomainSpecificDataSets = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIedServerConfig_maxDomainSpecificDataSets_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_maxDomainSpecificDataSets_get" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);result = (int) ((arg1)->maxDomainSpecificDataSets);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIedServerConfig_maxDataSetEntries_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_maxDataSetEntries_set" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sIedServerConfig_maxDataSetEntries_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);if (arg1) (arg1)->maxDataSetEntries = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIedServerConfig_maxDataSetEntries_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_maxDataSetEntries_get" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);result = (int) ((arg1)->maxDataSetEntries);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIedServerConfig_enableLogService_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_enableLogService_set" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sIedServerConfig_enableLogService_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);if (arg1) (arg1)->enableLogService = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIedServerConfig_enableLogService_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_enableLogService_get" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);result = (bool) ((arg1)->enableLogService);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIedServerConfig_useIntegratedGoosePublisher_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_useIntegratedGoosePublisher_set" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sIedServerConfig_useIntegratedGoosePublisher_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);if (arg1) (arg1)->useIntegratedGoosePublisher = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIedServerConfig_useIntegratedGoosePublisher_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_useIntegratedGoosePublisher_get" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);result = (bool) ((arg1)->useIntegratedGoosePublisher);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIedServerConfig_edition_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_edition_set" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_char(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sIedServerConfig_edition_set" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = static_cast< uint8_t >(val2);if (arg1) (arg1)->edition = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIedServerConfig_edition_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_edition_get" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);result = (uint8_t) ((arg1)->edition);
  jsresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIedServerConfig_maxMmsConnections_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_maxMmsConnections_set" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sIedServerConfig_maxMmsConnections_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);if (arg1) (arg1)->maxMmsConnections = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIedServerConfig_maxMmsConnections_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_maxMmsConnections_get" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);result = (int) ((arg1)->maxMmsConnections);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIedServerConfig_enableEditSG_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_enableEditSG_set" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sIedServerConfig_enableEditSG_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);if (arg1) (arg1)->enableEditSG = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIedServerConfig_enableEditSG_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_enableEditSG_get" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);result = (bool) ((arg1)->enableEditSG);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIedServerConfig_enableResvTmsForSGCB_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_enableResvTmsForSGCB_set" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sIedServerConfig_enableResvTmsForSGCB_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);if (arg1) (arg1)->enableResvTmsForSGCB = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIedServerConfig_enableResvTmsForSGCB_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_enableResvTmsForSGCB_get" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);result = (bool) ((arg1)->enableResvTmsForSGCB);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIedServerConfig_enableResvTmsForBRCB_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_enableResvTmsForBRCB_set" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sIedServerConfig_enableResvTmsForBRCB_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);if (arg1) (arg1)->enableResvTmsForBRCB = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIedServerConfig_enableResvTmsForBRCB_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_enableResvTmsForBRCB_get" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);result = (bool) ((arg1)->enableResvTmsForBRCB);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sIedServerConfig_enableOwnerForRCB_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_enableOwnerForRCB_set" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sIedServerConfig_enableOwnerForRCB_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);if (arg1) (arg1)->enableOwnerForRCB = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sIedServerConfig_enableOwnerForRCB_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sIedServerConfig *arg1 = (sIedServerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sIedServerConfig_enableOwnerForRCB_get" "', argument " "1"" of type '" "sIedServerConfig *""'"); 
  }
  arg1 = reinterpret_cast< sIedServerConfig * >(argp1);result = (bool) ((arg1)->enableOwnerForRCB);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_sIedServerConfig(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  sIedServerConfig *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_sIedServerConfig.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_sIedServerConfig.");
  result = (sIedServerConfig *)new sIedServerConfig();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_sIedServerConfig, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_sIedServerConfig(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    sIedServerConfig * arg1 = (sIedServerConfig *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue _wrap_IedServerConfig_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig result;
  
  if (args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_create.");
  
  result = (IedServerConfig)IedServerConfig_create();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_destroy(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_destroy.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_destroy" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);IedServerConfig_destroy(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_setEdition(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_setEdition.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_setEdition" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_char(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IedServerConfig_setEdition" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = static_cast< uint8_t >(val2);IedServerConfig_setEdition(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_getEdition(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_getEdition.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_getEdition" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);result = (uint8_t)IedServerConfig_getEdition(arg1);
  jsresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_setReportBufferSize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_setReportBufferSize.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_setReportBufferSize" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IedServerConfig_setReportBufferSize" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);IedServerConfig_setReportBufferSize(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_getReportBufferSize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_getReportBufferSize.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_getReportBufferSize" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);result = (int)IedServerConfig_getReportBufferSize(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_setReportBufferSizeForURCBs(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_setReportBufferSizeForURCBs.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_setReportBufferSizeForURCBs" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IedServerConfig_setReportBufferSizeForURCBs" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);IedServerConfig_setReportBufferSizeForURCBs(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_getReportBufferSizeForURCBs(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_getReportBufferSizeForURCBs.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_getReportBufferSizeForURCBs" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);result = (int)IedServerConfig_getReportBufferSizeForURCBs(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_setMaxMmsConnections(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_setMaxMmsConnections.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_setMaxMmsConnections" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IedServerConfig_setMaxMmsConnections" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);IedServerConfig_setMaxMmsConnections(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_getMaxMmsConnections(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_getMaxMmsConnections.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_getMaxMmsConnections" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);result = (int)IedServerConfig_getMaxMmsConnections(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_setFileServiceBasePath(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_setFileServiceBasePath.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_setFileServiceBasePath" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServerConfig_setFileServiceBasePath" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);IedServerConfig_setFileServiceBasePath(arg1,(char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_getFileServiceBasePath(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_getFileServiceBasePath.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_getFileServiceBasePath" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);result = (char *)IedServerConfig_getFileServiceBasePath(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_enableFileService(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_enableFileService.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_enableFileService" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IedServerConfig_enableFileService" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);IedServerConfig_enableFileService(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_isFileServiceEnabled(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_isFileServiceEnabled.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_isFileServiceEnabled" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);result = (bool)IedServerConfig_isFileServiceEnabled(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_enableDynamicDataSetService(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_enableDynamicDataSetService.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_enableDynamicDataSetService" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IedServerConfig_enableDynamicDataSetService" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);IedServerConfig_enableDynamicDataSetService(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_isDynamicDataSetServiceEnabled(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_isDynamicDataSetServiceEnabled.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_isDynamicDataSetServiceEnabled" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);result = (bool)IedServerConfig_isDynamicDataSetServiceEnabled(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_setMaxAssociationSpecificDataSets(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_setMaxAssociationSpecificDataSets.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_setMaxAssociationSpecificDataSets" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IedServerConfig_setMaxAssociationSpecificDataSets" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);IedServerConfig_setMaxAssociationSpecificDataSets(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_getMaxAssociationSpecificDataSets(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_getMaxAssociationSpecificDataSets.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_getMaxAssociationSpecificDataSets" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);result = (int)IedServerConfig_getMaxAssociationSpecificDataSets(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_setMaxDomainSpecificDataSets(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_setMaxDomainSpecificDataSets.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_setMaxDomainSpecificDataSets" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IedServerConfig_setMaxDomainSpecificDataSets" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);IedServerConfig_setMaxDomainSpecificDataSets(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_getMaxDomainSpecificDataSets(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_getMaxDomainSpecificDataSets.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_getMaxDomainSpecificDataSets" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);result = (int)IedServerConfig_getMaxDomainSpecificDataSets(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_setMaxDataSetEntries(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_setMaxDataSetEntries.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_setMaxDataSetEntries" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IedServerConfig_setMaxDataSetEntries" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);IedServerConfig_setMaxDataSetEntries(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_getMaxDatasSetEntries(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_getMaxDatasSetEntries.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_getMaxDatasSetEntries" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);result = (int)IedServerConfig_getMaxDatasSetEntries(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_enableLogService(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_enableLogService.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_enableLogService" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IedServerConfig_enableLogService" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);IedServerConfig_enableLogService(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_enableEditSG(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_enableEditSG.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_enableEditSG" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IedServerConfig_enableEditSG" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);IedServerConfig_enableEditSG(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_enableResvTmsForSGCB(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_enableResvTmsForSGCB.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_enableResvTmsForSGCB" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IedServerConfig_enableResvTmsForSGCB" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);IedServerConfig_enableResvTmsForSGCB(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_enableResvTmsForBRCB(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_enableResvTmsForBRCB.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_enableResvTmsForBRCB" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IedServerConfig_enableResvTmsForBRCB" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);IedServerConfig_enableResvTmsForBRCB(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_isResvTmsForBRCBEnabled(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_isResvTmsForBRCBEnabled.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_isResvTmsForBRCBEnabled" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);result = (bool)IedServerConfig_isResvTmsForBRCBEnabled(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_enableOwnerForRCB(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_enableOwnerForRCB.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_enableOwnerForRCB" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IedServerConfig_enableOwnerForRCB" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);IedServerConfig_enableOwnerForRCB(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_isOwnerForRCBEnabled(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_isOwnerForRCBEnabled.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_isOwnerForRCBEnabled" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);result = (bool)IedServerConfig_isOwnerForRCBEnabled(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_useIntegratedGoosePublisher(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_useIntegratedGoosePublisher.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_useIntegratedGoosePublisher" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IedServerConfig_useIntegratedGoosePublisher" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);IedServerConfig_useIntegratedGoosePublisher(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServerConfig_isLogServiceEnabled(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServerConfig arg1 = (IedServerConfig) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServerConfig_isLogServiceEnabled.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServerConfig_isLogServiceEnabled" "', argument " "1"" of type '" "IedServerConfig""'"); 
  }
  arg1 = reinterpret_cast< IedServerConfig >(argp1);result = (bool)IedServerConfig_isLogServiceEnabled(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedModel *arg1 = (IedModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedServer result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_create.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_create" "', argument " "1"" of type '" "IedModel *""'"); 
  }
  arg1 = reinterpret_cast< IedModel * >(argp1);result = (IedServer)IedServer_create(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sIedServer, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_createWithTlsSupport(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedModel *arg1 = (IedModel *) 0 ;
  TLSConfiguration arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  IedServer result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_createWithTlsSupport.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_createWithTlsSupport" "', argument " "1"" of type '" "IedModel *""'"); 
  }
  arg1 = reinterpret_cast< IedModel * >(argp1);{
    {
      res2 = SWIG_ConvertPtr(args[1], &argp2, SWIGTYPE_p_TLSConfiguration,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_createWithTlsSupport" "', argument " "2"" of type '" "TLSConfiguration""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IedServer_createWithTlsSupport" "', argument " "2"" of type '" "TLSConfiguration""'");
      } else {
        arg2 = *(reinterpret_cast< TLSConfiguration * >(argp2));
      }
    }
  }
  result = (IedServer)IedServer_createWithTlsSupport(arg1,SWIG_STD_MOVE(arg2));
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sIedServer, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_createWithConfig(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedModel *arg1 = (IedModel *) 0 ;
  TLSConfiguration arg2 ;
  IedServerConfig arg3 = (IedServerConfig) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  IedServer result;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_createWithConfig.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_createWithConfig" "', argument " "1"" of type '" "IedModel *""'"); 
  }
  arg1 = reinterpret_cast< IedModel * >(argp1);{
    {
      res2 = SWIG_ConvertPtr(args[1], &argp2, SWIGTYPE_p_TLSConfiguration,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_createWithConfig" "', argument " "2"" of type '" "TLSConfiguration""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IedServer_createWithConfig" "', argument " "2"" of type '" "TLSConfiguration""'");
      } else {
        arg2 = *(reinterpret_cast< TLSConfiguration * >(argp2));
      }
    }
  }
  res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_sIedServerConfig, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedServer_createWithConfig" "', argument " "3"" of type '" "IedServerConfig""'"); 
  }
  arg3 = reinterpret_cast< IedServerConfig >(argp3);result = (IedServer)IedServer_createWithConfig(arg1,SWIG_STD_MOVE(arg2),arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sIedServer, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_destroy(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_destroy.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_destroy" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);IedServer_destroy(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_addAccessPoint(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  TLSConfiguration arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  bool result;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_addAccessPoint.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_addAccessPoint" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_addAccessPoint" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IedServer_addAccessPoint" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);{
    {
      res4 = SWIG_ConvertPtr(args[3], &argp4, SWIGTYPE_p_TLSConfiguration,  0 );
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedServer_addAccessPoint" "', argument " "4"" of type '" "TLSConfiguration""'"); 
      }  
      if (!argp4) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IedServer_addAccessPoint" "', argument " "4"" of type '" "TLSConfiguration""'");
      } else {
        arg4 = *(reinterpret_cast< TLSConfiguration * >(argp4));
      }
    }
  }
  result = (bool)IedServer_addAccessPoint(arg1,(char const *)arg2,arg3,SWIG_STD_MOVE(arg4));
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_setLocalIpAddress(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_setLocalIpAddress.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_setLocalIpAddress" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_setLocalIpAddress" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);IedServer_setLocalIpAddress(arg1,(char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_setServerIdentity(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_setServerIdentity.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_setServerIdentity" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_setServerIdentity" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedServer_setServerIdentity" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedServer_setServerIdentity" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);IedServer_setServerIdentity(arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_setFilestoreBasepath(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_setFilestoreBasepath.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_setFilestoreBasepath" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_setFilestoreBasepath" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);IedServer_setFilestoreBasepath(arg1,(char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_start(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_start.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_start" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IedServer_start" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);IedServer_start(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_stop(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_stop.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_stop" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);IedServer_stop(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_startThreadless(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_startThreadless.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_startThreadless" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IedServer_startThreadless" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);IedServer_startThreadless(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_waitReady(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_waitReady.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_waitReady" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IedServer_waitReady" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);result = (int)IedServer_waitReady(arg1,arg2);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_processIncomingData(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_processIncomingData.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_processIncomingData" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);IedServer_processIncomingData(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_performPeriodicTasks(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_performPeriodicTasks.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_performPeriodicTasks" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);IedServer_performPeriodicTasks(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_stopThreadless(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_stopThreadless.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_stopThreadless" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);IedServer_stopThreadless(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_getDataModel(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  IedModel *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_getDataModel.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_getDataModel" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);result = (IedModel *)IedServer_getDataModel(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sIedModel, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_isRunning(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_isRunning.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_isRunning" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);result = (bool)IedServer_isRunning(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_getNumberOfOpenConnections(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_getNumberOfOpenConnections.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_getNumberOfOpenConnections" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);result = (int)IedServer_getNumberOfOpenConnections(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_getMmsServer(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsServer result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_getMmsServer.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_getMmsServer" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);result = IedServer_getMmsServer(arg1);
  jsresult = SWIG_NewPointerObj((new MmsServer(result)), SWIGTYPE_p_MmsServer, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_enableGoosePublishing(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_enableGoosePublishing.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_enableGoosePublishing" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);IedServer_enableGoosePublishing(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_disableGoosePublishing(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_disableGoosePublishing.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_disableGoosePublishing" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);IedServer_disableGoosePublishing(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_setGooseInterfaceId(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_setGooseInterfaceId.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_setGooseInterfaceId" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_setGooseInterfaceId" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);IedServer_setGooseInterfaceId(arg1,(char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_setGooseInterfaceIdEx(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  LogicalNode *arg2 = (LogicalNode *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_setGooseInterfaceIdEx.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_setGooseInterfaceIdEx" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sLogicalNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_setGooseInterfaceIdEx" "', argument " "2"" of type '" "LogicalNode *""'"); 
  }
  arg2 = reinterpret_cast< LogicalNode * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedServer_setGooseInterfaceIdEx" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedServer_setGooseInterfaceIdEx" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);IedServer_setGooseInterfaceIdEx(arg1,arg2,(char const *)arg3,(char const *)arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_useGooseVlanTag(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  LogicalNode *arg2 = (LogicalNode *) 0 ;
  char *arg3 = (char *) 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_useGooseVlanTag.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_useGooseVlanTag" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sLogicalNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_useGooseVlanTag" "', argument " "2"" of type '" "LogicalNode *""'"); 
  }
  arg2 = reinterpret_cast< LogicalNode * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedServer_useGooseVlanTag" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_bool(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IedServer_useGooseVlanTag" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);IedServer_useGooseVlanTag(arg1,arg2,(char const *)arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_setAuthenticator(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  AcseAuthenticator arg2 = (AcseAuthenticator) 0 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_setAuthenticator.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_setAuthenticator" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);{
    {
      int res = SWIG_ConvertFunctionPtr(args[1], (void**)(&arg2), SWIGTYPE_p_f_p_void_p_sAcseAuthenticationParameter_p_p_void_p_IsoApplicationReference__bool);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedServer_setAuthenticator" "', argument " "2"" of type '" "AcseAuthenticator""'"); 
      }
    }
  }
  res3 = SWIG_ConvertPtr(args[2],SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedServer_setAuthenticator" "', argument " "3"" of type '" "void *""'"); 
  }IedServer_setAuthenticator(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientConnection_getPeerAddress(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientConnection arg1 = (ClientConnection) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientConnection_getPeerAddress.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientConnection_getPeerAddress" "', argument " "1"" of type '" "ClientConnection""'"); 
  }
  arg1 = reinterpret_cast< ClientConnection >(argp1);result = (char *)ClientConnection_getPeerAddress(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientConnection_getLocalAddress(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientConnection arg1 = (ClientConnection) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientConnection_getLocalAddress.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientConnection_getLocalAddress" "', argument " "1"" of type '" "ClientConnection""'"); 
  }
  arg1 = reinterpret_cast< ClientConnection >(argp1);result = (char *)ClientConnection_getLocalAddress(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ClientConnection_getSecurityToken(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ClientConnection arg1 = (ClientConnection) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ClientConnection_getSecurityToken.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sClientConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClientConnection_getSecurityToken" "', argument " "1"" of type '" "ClientConnection""'"); 
  }
  arg1 = reinterpret_cast< ClientConnection >(argp1);result = (void *)ClientConnection_getSecurityToken(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_setConnectionIndicationHandler(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  IedConnectionIndicationHandler arg2 = (IedConnectionIndicationHandler) 0 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_setConnectionIndicationHandler.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_setConnectionIndicationHandler" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);{
    {
      int res = SWIG_ConvertFunctionPtr(args[1], (void**)(&arg2), SWIGTYPE_p_f_p_sIedServer_p_sClientConnection_bool_p_void__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedServer_setConnectionIndicationHandler" "', argument " "2"" of type '" "IedConnectionIndicationHandler""'"); 
      }
    }
  }
  res3 = SWIG_ConvertPtr(args[2],SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedServer_setConnectionIndicationHandler" "', argument " "3"" of type '" "void *""'"); 
  }IedServer_setConnectionIndicationHandler(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_lockDataModel(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_lockDataModel.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_lockDataModel" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);IedServer_lockDataModel(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_unlockDataModel(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_unlockDataModel.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_unlockDataModel" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);IedServer_unlockDataModel(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_getAttributeValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataAttribute *arg2 = (DataAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_getAttributeValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_getAttributeValue" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_getAttributeValue" "', argument " "2"" of type '" "DataAttribute *""'"); 
  }
  arg2 = reinterpret_cast< DataAttribute * >(argp2);result = (MmsValue *)IedServer_getAttributeValue(arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_getBooleanAttributeValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataAttribute *arg2 = (DataAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_getBooleanAttributeValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_getBooleanAttributeValue" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_getBooleanAttributeValue" "', argument " "2"" of type '" "DataAttribute const *""'"); 
  }
  arg2 = reinterpret_cast< DataAttribute * >(argp2);result = (bool)IedServer_getBooleanAttributeValue(arg1,(sDataAttribute const *)arg2);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_getInt32AttributeValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataAttribute *arg2 = (DataAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int32_t result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_getInt32AttributeValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_getInt32AttributeValue" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_getInt32AttributeValue" "', argument " "2"" of type '" "DataAttribute const *""'"); 
  }
  arg2 = reinterpret_cast< DataAttribute * >(argp2);result = (int32_t)IedServer_getInt32AttributeValue(arg1,(sDataAttribute const *)arg2);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_getInt64AttributeValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataAttribute *arg2 = (DataAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int64_t result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_getInt64AttributeValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_getInt64AttributeValue" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_getInt64AttributeValue" "', argument " "2"" of type '" "DataAttribute const *""'"); 
  }
  arg2 = reinterpret_cast< DataAttribute * >(argp2);result = (int64_t)IedServer_getInt64AttributeValue(arg1,(sDataAttribute const *)arg2);
  jsresult = SWIG_From_long_SS_long(static_cast< long long >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_getUInt32AttributeValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataAttribute *arg2 = (DataAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  uint32_t result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_getUInt32AttributeValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_getUInt32AttributeValue" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_getUInt32AttributeValue" "', argument " "2"" of type '" "DataAttribute const *""'"); 
  }
  arg2 = reinterpret_cast< DataAttribute * >(argp2);result = (uint32_t)IedServer_getUInt32AttributeValue(arg1,(sDataAttribute const *)arg2);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_getFloatAttributeValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataAttribute *arg2 = (DataAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_getFloatAttributeValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_getFloatAttributeValue" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_getFloatAttributeValue" "', argument " "2"" of type '" "DataAttribute const *""'"); 
  }
  arg2 = reinterpret_cast< DataAttribute * >(argp2);result = (float)IedServer_getFloatAttributeValue(arg1,(sDataAttribute const *)arg2);
  jsresult = SWIG_From_float(static_cast< float >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_getUTCTimeAttributeValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataAttribute *arg2 = (DataAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  uint64_t result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_getUTCTimeAttributeValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_getUTCTimeAttributeValue" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_getUTCTimeAttributeValue" "', argument " "2"" of type '" "DataAttribute const *""'"); 
  }
  arg2 = reinterpret_cast< DataAttribute * >(argp2);result = (uint64_t)IedServer_getUTCTimeAttributeValue(arg1,(sDataAttribute const *)arg2);
  jsresult = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_getBitStringAttributeValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataAttribute *arg2 = (DataAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  uint32_t result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_getBitStringAttributeValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_getBitStringAttributeValue" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_getBitStringAttributeValue" "', argument " "2"" of type '" "DataAttribute const *""'"); 
  }
  arg2 = reinterpret_cast< DataAttribute * >(argp2);result = (uint32_t)IedServer_getBitStringAttributeValue(arg1,(sDataAttribute const *)arg2);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_getStringAttributeValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataAttribute *arg2 = (DataAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_getStringAttributeValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_getStringAttributeValue" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_getStringAttributeValue" "', argument " "2"" of type '" "DataAttribute const *""'"); 
  }
  arg2 = reinterpret_cast< DataAttribute * >(argp2);result = (char *)IedServer_getStringAttributeValue(arg1,(sDataAttribute const *)arg2);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_getFunctionalConstrainedData(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataObject *arg2 = (DataObject *) 0 ;
  FunctionalConstraint arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_getFunctionalConstrainedData.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_getFunctionalConstrainedData" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_getFunctionalConstrainedData" "', argument " "2"" of type '" "DataObject *""'"); 
  }
  arg2 = reinterpret_cast< DataObject * >(argp2);ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IedServer_getFunctionalConstrainedData" "', argument " "3"" of type '" "FunctionalConstraint""'");
  } 
  arg3 = static_cast< FunctionalConstraint >(val3);result = (MmsValue *)IedServer_getFunctionalConstrainedData(arg1,arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_updateAttributeValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataAttribute *arg2 = (DataAttribute *) 0 ;
  MmsValue *arg3 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_updateAttributeValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_updateAttributeValue" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_updateAttributeValue" "', argument " "2"" of type '" "DataAttribute *""'"); 
  }
  arg2 = reinterpret_cast< DataAttribute * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedServer_updateAttributeValue" "', argument " "3"" of type '" "MmsValue *""'"); 
  }
  arg3 = reinterpret_cast< MmsValue * >(argp3);IedServer_updateAttributeValue(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_updateFloatAttributeValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataAttribute *arg2 = (DataAttribute *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_updateFloatAttributeValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_updateFloatAttributeValue" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_updateFloatAttributeValue" "', argument " "2"" of type '" "DataAttribute *""'"); 
  }
  arg2 = reinterpret_cast< DataAttribute * >(argp2);ecode3 = SWIG_AsVal_float(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IedServer_updateFloatAttributeValue" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);IedServer_updateFloatAttributeValue(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_updateInt32AttributeValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataAttribute *arg2 = (DataAttribute *) 0 ;
  int32_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_updateInt32AttributeValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_updateInt32AttributeValue" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_updateInt32AttributeValue" "', argument " "2"" of type '" "DataAttribute *""'"); 
  }
  arg2 = reinterpret_cast< DataAttribute * >(argp2);ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IedServer_updateInt32AttributeValue" "', argument " "3"" of type '" "int32_t""'");
  } 
  arg3 = static_cast< int32_t >(val3);IedServer_updateInt32AttributeValue(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_updateDbposValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataAttribute *arg2 = (DataAttribute *) 0 ;
  Dbpos arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_updateDbposValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_updateDbposValue" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_updateDbposValue" "', argument " "2"" of type '" "DataAttribute *""'"); 
  }
  arg2 = reinterpret_cast< DataAttribute * >(argp2);ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IedServer_updateDbposValue" "', argument " "3"" of type '" "Dbpos""'");
  } 
  arg3 = static_cast< Dbpos >(val3);IedServer_updateDbposValue(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_updateInt64AttributeValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataAttribute *arg2 = (DataAttribute *) 0 ;
  int64_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  long long val3 ;
  int ecode3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_updateInt64AttributeValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_updateInt64AttributeValue" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_updateInt64AttributeValue" "', argument " "2"" of type '" "DataAttribute *""'"); 
  }
  arg2 = reinterpret_cast< DataAttribute * >(argp2);ecode3 = SWIG_AsVal_long_SS_long(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IedServer_updateInt64AttributeValue" "', argument " "3"" of type '" "int64_t""'");
  } 
  arg3 = static_cast< int64_t >(val3);IedServer_updateInt64AttributeValue(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_updateUnsignedAttributeValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataAttribute *arg2 = (DataAttribute *) 0 ;
  uint32_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_updateUnsignedAttributeValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_updateUnsignedAttributeValue" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_updateUnsignedAttributeValue" "', argument " "2"" of type '" "DataAttribute *""'"); 
  }
  arg2 = reinterpret_cast< DataAttribute * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IedServer_updateUnsignedAttributeValue" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);IedServer_updateUnsignedAttributeValue(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_updateBitStringAttributeValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataAttribute *arg2 = (DataAttribute *) 0 ;
  uint32_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_updateBitStringAttributeValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_updateBitStringAttributeValue" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_updateBitStringAttributeValue" "', argument " "2"" of type '" "DataAttribute *""'"); 
  }
  arg2 = reinterpret_cast< DataAttribute * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IedServer_updateBitStringAttributeValue" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);IedServer_updateBitStringAttributeValue(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_updateBooleanAttributeValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataAttribute *arg2 = (DataAttribute *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_updateBooleanAttributeValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_updateBooleanAttributeValue" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_updateBooleanAttributeValue" "', argument " "2"" of type '" "DataAttribute *""'"); 
  }
  arg2 = reinterpret_cast< DataAttribute * >(argp2);ecode3 = SWIG_AsVal_bool(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IedServer_updateBooleanAttributeValue" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);IedServer_updateBooleanAttributeValue(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_updateVisibleStringAttributeValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataAttribute *arg2 = (DataAttribute *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_updateVisibleStringAttributeValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_updateVisibleStringAttributeValue" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_updateVisibleStringAttributeValue" "', argument " "2"" of type '" "DataAttribute *""'"); 
  }
  arg2 = reinterpret_cast< DataAttribute * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedServer_updateVisibleStringAttributeValue" "', argument " "3"" of type '" "char *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);IedServer_updateVisibleStringAttributeValue(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_updateUTCTimeAttributeValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataAttribute *arg2 = (DataAttribute *) 0 ;
  uint64_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned long long val3 ;
  int ecode3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_updateUTCTimeAttributeValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_updateUTCTimeAttributeValue" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_updateUTCTimeAttributeValue" "', argument " "2"" of type '" "DataAttribute *""'"); 
  }
  arg2 = reinterpret_cast< DataAttribute * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_long_SS_long(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IedServer_updateUTCTimeAttributeValue" "', argument " "3"" of type '" "uint64_t""'");
  } 
  arg3 = static_cast< uint64_t >(val3);IedServer_updateUTCTimeAttributeValue(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_updateTimestampAttributeValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataAttribute *arg2 = (DataAttribute *) 0 ;
  Timestamp *arg3 = (Timestamp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_updateTimestampAttributeValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_updateTimestampAttributeValue" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_updateTimestampAttributeValue" "', argument " "2"" of type '" "DataAttribute *""'"); 
  }
  arg2 = reinterpret_cast< DataAttribute * >(argp2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_Timestamp, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedServer_updateTimestampAttributeValue" "', argument " "3"" of type '" "Timestamp *""'"); 
  }
  arg3 = reinterpret_cast< Timestamp * >(argp3);IedServer_updateTimestampAttributeValue(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_updateQuality(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataAttribute *arg2 = (DataAttribute *) 0 ;
  Quality arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_updateQuality.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_updateQuality" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_updateQuality" "', argument " "2"" of type '" "DataAttribute *""'"); 
  }
  arg2 = reinterpret_cast< DataAttribute * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_short(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IedServer_updateQuality" "', argument " "3"" of type '" "Quality""'");
  } 
  arg3 = static_cast< Quality >(val3);IedServer_updateQuality(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_setLogStorage(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  char *arg2 = (char *) 0 ;
  LogStorage arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_setLogStorage.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_setLogStorage" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_setLogStorage" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);{
    {
      res3 = SWIG_ConvertPtr(args[2], &argp3, SWIGTYPE_p_LogStorage,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedServer_setLogStorage" "', argument " "3"" of type '" "LogStorage""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IedServer_setLogStorage" "', argument " "3"" of type '" "LogStorage""'");
      } else {
        arg3 = *(reinterpret_cast< LogStorage * >(argp3));
      }
    }
  }
  IedServer_setLogStorage(arg1,(char const *)arg2,SWIG_STD_MOVE(arg3));
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_changeActiveSettingGroup(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  SettingGroupControlBlock *arg2 = (SettingGroupControlBlock *) 0 ;
  uint8_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned char val3 ;
  int ecode3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_changeActiveSettingGroup.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_changeActiveSettingGroup" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sSettingGroupControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_changeActiveSettingGroup" "', argument " "2"" of type '" "SettingGroupControlBlock *""'"); 
  }
  arg2 = reinterpret_cast< SettingGroupControlBlock * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_char(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IedServer_changeActiveSettingGroup" "', argument " "3"" of type '" "uint8_t""'");
  } 
  arg3 = static_cast< uint8_t >(val3);IedServer_changeActiveSettingGroup(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_getActiveSettingGroup(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  SettingGroupControlBlock *arg2 = (SettingGroupControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  uint8_t result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_getActiveSettingGroup.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_getActiveSettingGroup" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sSettingGroupControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_getActiveSettingGroup" "', argument " "2"" of type '" "SettingGroupControlBlock *""'"); 
  }
  arg2 = reinterpret_cast< SettingGroupControlBlock * >(argp2);result = (uint8_t)IedServer_getActiveSettingGroup(arg1,arg2);
  jsresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_setActiveSettingGroupChangedHandler(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  SettingGroupControlBlock *arg2 = (SettingGroupControlBlock *) 0 ;
  ActiveSettingGroupChangedHandler arg3 = (ActiveSettingGroupChangedHandler) 0 ;
  void *arg4 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res4 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_setActiveSettingGroupChangedHandler.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_setActiveSettingGroupChangedHandler" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sSettingGroupControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_setActiveSettingGroupChangedHandler" "', argument " "2"" of type '" "SettingGroupControlBlock *""'"); 
  }
  arg2 = reinterpret_cast< SettingGroupControlBlock * >(argp2);{
    {
      int res = SWIG_ConvertFunctionPtr(args[2], (void**)(&arg3), SWIGTYPE_p_f_p_void_p_sSettingGroupControlBlock_unsigned_char_p_sClientConnection__bool);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedServer_setActiveSettingGroupChangedHandler" "', argument " "3"" of type '" "ActiveSettingGroupChangedHandler""'"); 
      }
    }
  }
  res4 = SWIG_ConvertPtr(args[3],SWIG_as_voidptrptr(&arg4), 0, 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedServer_setActiveSettingGroupChangedHandler" "', argument " "4"" of type '" "void *""'"); 
  }IedServer_setActiveSettingGroupChangedHandler(arg1,arg2,arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_setEditSettingGroupChangedHandler(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  SettingGroupControlBlock *arg2 = (SettingGroupControlBlock *) 0 ;
  EditSettingGroupChangedHandler arg3 = (EditSettingGroupChangedHandler) 0 ;
  void *arg4 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res4 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_setEditSettingGroupChangedHandler.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_setEditSettingGroupChangedHandler" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sSettingGroupControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_setEditSettingGroupChangedHandler" "', argument " "2"" of type '" "SettingGroupControlBlock *""'"); 
  }
  arg2 = reinterpret_cast< SettingGroupControlBlock * >(argp2);{
    {
      int res = SWIG_ConvertFunctionPtr(args[2], (void**)(&arg3), SWIGTYPE_p_f_p_void_p_sSettingGroupControlBlock_unsigned_char_p_sClientConnection__bool);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedServer_setEditSettingGroupChangedHandler" "', argument " "3"" of type '" "EditSettingGroupChangedHandler""'"); 
      }
    }
  }
  res4 = SWIG_ConvertPtr(args[3],SWIG_as_voidptrptr(&arg4), 0, 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedServer_setEditSettingGroupChangedHandler" "', argument " "4"" of type '" "void *""'"); 
  }IedServer_setEditSettingGroupChangedHandler(arg1,arg2,arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_setEditSettingGroupConfirmationHandler(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  SettingGroupControlBlock *arg2 = (SettingGroupControlBlock *) 0 ;
  EditSettingGroupConfirmationHandler arg3 = (EditSettingGroupConfirmationHandler) 0 ;
  void *arg4 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res4 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_setEditSettingGroupConfirmationHandler.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_setEditSettingGroupConfirmationHandler" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sSettingGroupControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_setEditSettingGroupConfirmationHandler" "', argument " "2"" of type '" "SettingGroupControlBlock *""'"); 
  }
  arg2 = reinterpret_cast< SettingGroupControlBlock * >(argp2);{
    {
      int res = SWIG_ConvertFunctionPtr(args[2], (void**)(&arg3), SWIGTYPE_p_f_p_void_p_sSettingGroupControlBlock_unsigned_char__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedServer_setEditSettingGroupConfirmationHandler" "', argument " "3"" of type '" "EditSettingGroupConfirmationHandler""'"); 
      }
    }
  }
  res4 = SWIG_ConvertPtr(args[3],SWIG_as_voidptrptr(&arg4), 0, 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedServer_setEditSettingGroupConfirmationHandler" "', argument " "4"" of type '" "void *""'"); 
  }IedServer_setEditSettingGroupConfirmationHandler(arg1,arg2,arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue exports_CONTROL_ACCEPTED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(CONTROL_ACCEPTED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_WAITING_FOR_SELECT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(CONTROL_WAITING_FOR_SELECT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_HARDWARE_FAULT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(CONTROL_HARDWARE_FAULT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_TEMPORARILY_UNAVAILABLE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(CONTROL_TEMPORARILY_UNAVAILABLE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_OBJECT_ACCESS_DENIED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(CONTROL_OBJECT_ACCESS_DENIED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_OBJECT_UNDEFINED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(CONTROL_OBJECT_UNDEFINED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_VALUE_INVALID_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(CONTROL_VALUE_INVALID));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_RESULT_FAILED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(CONTROL_RESULT_FAILED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_RESULT_OK_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(CONTROL_RESULT_OK));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CONTROL_RESULT_WAITING_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(CONTROL_RESULT_WAITING));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_ControlAction_setError(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlAction arg1 = (ControlAction) 0 ;
  ControlLastApplError arg2 ;
  int res1 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlAction_setError.");
  
  res1 = SWIG_ConvertPtr(args[0],SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlAction_setError" "', argument " "1"" of type '" "ControlAction""'"); 
  }ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ControlAction_setError" "', argument " "2"" of type '" "ControlLastApplError""'");
  } 
  arg2 = static_cast< ControlLastApplError >(val2);ControlAction_setError(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlAction_setAddCause(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlAction arg1 = (ControlAction) 0 ;
  ControlAddCause arg2 ;
  int res1 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlAction_setAddCause.");
  
  res1 = SWIG_ConvertPtr(args[0],SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlAction_setAddCause" "', argument " "1"" of type '" "ControlAction""'"); 
  }ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ControlAction_setAddCause" "', argument " "2"" of type '" "ControlAddCause""'");
  } 
  arg2 = static_cast< ControlAddCause >(val2);ControlAction_setAddCause(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlAction_getOrCat(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlAction arg1 = (ControlAction) 0 ;
  int res1 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlAction_getOrCat.");
  
  res1 = SWIG_ConvertPtr(args[0],SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlAction_getOrCat" "', argument " "1"" of type '" "ControlAction""'"); 
  }result = (int)ControlAction_getOrCat(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlAction_getOrIdent(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlAction arg1 = (ControlAction) 0 ;
  int *arg2 = (int *) 0 ;
  int res1 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  uint8_t *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlAction_getOrIdent.");
  
  res1 = SWIG_ConvertPtr(args[0],SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlAction_getOrIdent" "', argument " "1"" of type '" "ControlAction""'"); 
  }res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ControlAction_getOrIdent" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);result = (uint8_t *)ControlAction_getOrIdent(arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlAction_getCtlNum(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlAction arg1 = (ControlAction) 0 ;
  int res1 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlAction_getCtlNum.");
  
  res1 = SWIG_ConvertPtr(args[0],SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlAction_getCtlNum" "', argument " "1"" of type '" "ControlAction""'"); 
  }result = (int)ControlAction_getCtlNum(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlAction_isSelect(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlAction arg1 = (ControlAction) 0 ;
  int res1 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlAction_isSelect.");
  
  res1 = SWIG_ConvertPtr(args[0],SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlAction_isSelect" "', argument " "1"" of type '" "ControlAction""'"); 
  }result = (bool)ControlAction_isSelect(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlAction_getClientConnection(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlAction arg1 = (ControlAction) 0 ;
  int res1 ;
  ClientConnection result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlAction_getClientConnection.");
  
  res1 = SWIG_ConvertPtr(args[0],SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlAction_getClientConnection" "', argument " "1"" of type '" "ControlAction""'"); 
  }result = (ClientConnection)ControlAction_getClientConnection(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sClientConnection, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlAction_getControlObject(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlAction arg1 = (ControlAction) 0 ;
  int res1 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlAction_getControlObject.");
  
  res1 = SWIG_ConvertPtr(args[0],SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlAction_getControlObject" "', argument " "1"" of type '" "ControlAction""'"); 
  }result = (DataObject *)ControlAction_getControlObject(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ControlAction_getControlTime(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ControlAction arg1 = (ControlAction) 0 ;
  int res1 ;
  uint64_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ControlAction_getControlTime.");
  
  res1 = SWIG_ConvertPtr(args[0],SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ControlAction_getControlTime" "', argument " "1"" of type '" "ControlAction""'"); 
  }result = (uint64_t)ControlAction_getControlTime(arg1);
  jsresult = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue exports_SELECT_STATE_REASON_SELECTED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(SELECT_STATE_REASON_SELECTED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_SELECT_STATE_REASON_CANCELED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(SELECT_STATE_REASON_CANCELED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_SELECT_STATE_REASON_TIMEOUT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(SELECT_STATE_REASON_TIMEOUT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_SELECT_STATE_REASON_OPERATED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(SELECT_STATE_REASON_OPERATED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_SELECT_STATE_REASON_OPERATE_FAILED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(SELECT_STATE_REASON_OPERATE_FAILED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_SELECT_STATE_REASON_DISCONNECTED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(SELECT_STATE_REASON_DISCONNECTED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_IedServer_setControlHandler(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataObject *arg2 = (DataObject *) 0 ;
  ControlHandler arg3 = (ControlHandler) 0 ;
  void *arg4 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res4 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_setControlHandler.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_setControlHandler" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_setControlHandler" "', argument " "2"" of type '" "DataObject *""'"); 
  }
  arg2 = reinterpret_cast< DataObject * >(argp2);{
    {
      int res = SWIG_ConvertFunctionPtr(args[2], (void**)(&arg3), SWIGTYPE_p_f_p_void_p_void_p_sMmsValue_bool__ControlHandlerResult);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedServer_setControlHandler" "', argument " "3"" of type '" "ControlHandler""'"); 
      }
    }
  }
  res4 = SWIG_ConvertPtr(args[3],SWIG_as_voidptrptr(&arg4), 0, 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedServer_setControlHandler" "', argument " "4"" of type '" "void *""'"); 
  }IedServer_setControlHandler(arg1,arg2,arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_setPerformCheckHandler(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataObject *arg2 = (DataObject *) 0 ;
  ControlPerformCheckHandler arg3 = (ControlPerformCheckHandler) 0 ;
  void *arg4 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res4 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_setPerformCheckHandler.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_setPerformCheckHandler" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_setPerformCheckHandler" "', argument " "2"" of type '" "DataObject *""'"); 
  }
  arg2 = reinterpret_cast< DataObject * >(argp2);{
    {
      int res = SWIG_ConvertFunctionPtr(args[2], (void**)(&arg3), SWIGTYPE_p_f_p_void_p_void_p_sMmsValue_bool_bool__CheckHandlerResult);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedServer_setPerformCheckHandler" "', argument " "3"" of type '" "ControlPerformCheckHandler""'"); 
      }
    }
  }
  res4 = SWIG_ConvertPtr(args[3],SWIG_as_voidptrptr(&arg4), 0, 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedServer_setPerformCheckHandler" "', argument " "4"" of type '" "void *""'"); 
  }IedServer_setPerformCheckHandler(arg1,arg2,arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_setWaitForExecutionHandler(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataObject *arg2 = (DataObject *) 0 ;
  ControlWaitForExecutionHandler arg3 = (ControlWaitForExecutionHandler) 0 ;
  void *arg4 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res4 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_setWaitForExecutionHandler.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_setWaitForExecutionHandler" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_setWaitForExecutionHandler" "', argument " "2"" of type '" "DataObject *""'"); 
  }
  arg2 = reinterpret_cast< DataObject * >(argp2);{
    {
      int res = SWIG_ConvertFunctionPtr(args[2], (void**)(&arg3), SWIGTYPE_p_f_p_void_p_void_p_sMmsValue_bool_bool__ControlHandlerResult);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedServer_setWaitForExecutionHandler" "', argument " "3"" of type '" "ControlWaitForExecutionHandler""'"); 
      }
    }
  }
  res4 = SWIG_ConvertPtr(args[3],SWIG_as_voidptrptr(&arg4), 0, 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedServer_setWaitForExecutionHandler" "', argument " "4"" of type '" "void *""'"); 
  }IedServer_setWaitForExecutionHandler(arg1,arg2,arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_setSelectStateChangedHandler(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataObject *arg2 = (DataObject *) 0 ;
  ControlSelectStateChangedHandler arg3 = (ControlSelectStateChangedHandler) 0 ;
  void *arg4 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res4 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_setSelectStateChangedHandler.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_setSelectStateChangedHandler" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_setSelectStateChangedHandler" "', argument " "2"" of type '" "DataObject *""'"); 
  }
  arg2 = reinterpret_cast< DataObject * >(argp2);{
    {
      int res = SWIG_ConvertFunctionPtr(args[2], (void**)(&arg3), SWIGTYPE_p_f_p_void_p_void_bool_enum_SelectStateChangedReason__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedServer_setSelectStateChangedHandler" "', argument " "3"" of type '" "ControlSelectStateChangedHandler""'"); 
      }
    }
  }
  res4 = SWIG_ConvertPtr(args[3],SWIG_as_voidptrptr(&arg4), 0, 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedServer_setSelectStateChangedHandler" "', argument " "4"" of type '" "void *""'"); 
  }IedServer_setSelectStateChangedHandler(arg1,arg2,arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_updateCtlModel(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataObject *arg2 = (DataObject *) 0 ;
  ControlModel arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_updateCtlModel.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_updateCtlModel" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_updateCtlModel" "', argument " "2"" of type '" "DataObject *""'"); 
  }
  arg2 = reinterpret_cast< DataObject * >(argp2);ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IedServer_updateCtlModel" "', argument " "3"" of type '" "ControlModel""'");
  } 
  arg3 = static_cast< ControlModel >(val3);IedServer_updateCtlModel(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue exports_RCB_EVENT_GET_PARAMETER_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RCB_EVENT_GET_PARAMETER));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RCB_EVENT_SET_PARAMETER_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RCB_EVENT_SET_PARAMETER));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RCB_EVENT_UNRESERVED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RCB_EVENT_UNRESERVED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RCB_EVENT_RESERVED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RCB_EVENT_RESERVED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RCB_EVENT_ENABLE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RCB_EVENT_ENABLE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RCB_EVENT_DISABLE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RCB_EVENT_DISABLE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RCB_EVENT_GI_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RCB_EVENT_GI));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_RCB_EVENT_PURGEBUF_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RCB_EVENT_PURGEBUF));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_IedServer_setRCBEventHandler(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  IedServer_RCBEventHandler arg2 = (IedServer_RCBEventHandler) 0 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_setRCBEventHandler.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_setRCBEventHandler" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);{
    {
      int res = SWIG_ConvertFunctionPtr(args[1], (void**)(&arg2), SWIGTYPE_p_f_p_void_p_sReportControlBlock_p_sClientConnection_enum_IedServer_RCBEventType_p_q_const__char_enum_MmsDataAccessError__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedServer_setRCBEventHandler" "', argument " "2"" of type '" "IedServer_RCBEventHandler""'"); 
      }
    }
  }
  res3 = SWIG_ConvertPtr(args[2],SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedServer_setRCBEventHandler" "', argument " "3"" of type '" "void *""'"); 
  }IedServer_setRCBEventHandler(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue exports_IEC61850_SVCB_EVENT_ENABLE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_SVCB_EVENT_DISABLE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_IedServer_setSVCBHandler(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  SVControlBlock *arg2 = (SVControlBlock *) 0 ;
  SVCBEventHandler arg3 = (SVCBEventHandler) 0 ;
  void *arg4 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res4 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_setSVCBHandler.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_setSVCBHandler" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_setSVCBHandler" "', argument " "2"" of type '" "SVControlBlock *""'"); 
  }
  arg2 = reinterpret_cast< SVControlBlock * >(argp2);{
    {
      int res = SWIG_ConvertFunctionPtr(args[2], (void**)(&arg3), SWIGTYPE_p_f_p_sSVControlBlock_int_p_void__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedServer_setSVCBHandler" "', argument " "3"" of type '" "SVCBEventHandler""'"); 
      }
    }
  }
  res4 = SWIG_ConvertPtr(args[3],SWIG_as_voidptrptr(&arg4), 0, 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedServer_setSVCBHandler" "', argument " "4"" of type '" "void *""'"); 
  }IedServer_setSVCBHandler(arg1,arg2,arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue exports_IEC61850_GOCB_EVENT_ENABLE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_IEC61850_GOCB_EVENT_DISABLE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_IedServer_setGoCBHandler(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  GoCBEventHandler arg2 = (GoCBEventHandler) 0 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_setGoCBHandler.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_setGoCBHandler" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);{
    {
      int res = SWIG_ConvertFunctionPtr(args[1], (void**)(&arg2), SWIGTYPE_p_f_p_sMmsGooseControlBlock_int_p_void__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedServer_setGoCBHandler" "', argument " "2"" of type '" "GoCBEventHandler""'"); 
      }
    }
  }
  res3 = SWIG_ConvertPtr(args[2],SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedServer_setGoCBHandler" "', argument " "3"" of type '" "void *""'"); 
  }IedServer_setGoCBHandler(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsGooseControlBlock_getName(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsGooseControlBlock arg1 = (MmsGooseControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsGooseControlBlock_getName.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsGooseControlBlock_getName" "', argument " "1"" of type '" "MmsGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< MmsGooseControlBlock >(argp1);result = (char *)MmsGooseControlBlock_getName(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsGooseControlBlock_getLogicalNode(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsGooseControlBlock arg1 = (MmsGooseControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  LogicalNode *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsGooseControlBlock_getLogicalNode.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsGooseControlBlock_getLogicalNode" "', argument " "1"" of type '" "MmsGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< MmsGooseControlBlock >(argp1);result = (LogicalNode *)MmsGooseControlBlock_getLogicalNode(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLogicalNode, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsGooseControlBlock_getDataSet(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsGooseControlBlock arg1 = (MmsGooseControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  DataSet *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsGooseControlBlock_getDataSet.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsGooseControlBlock_getDataSet" "', argument " "1"" of type '" "MmsGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< MmsGooseControlBlock >(argp1);result = (DataSet *)MmsGooseControlBlock_getDataSet(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataSet, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsGooseControlBlock_getGoEna(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsGooseControlBlock arg1 = (MmsGooseControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsGooseControlBlock_getGoEna.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsGooseControlBlock_getGoEna" "', argument " "1"" of type '" "MmsGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< MmsGooseControlBlock >(argp1);result = (bool)MmsGooseControlBlock_getGoEna(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsGooseControlBlock_getMinTime(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsGooseControlBlock arg1 = (MmsGooseControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsGooseControlBlock_getMinTime.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsGooseControlBlock_getMinTime" "', argument " "1"" of type '" "MmsGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< MmsGooseControlBlock >(argp1);result = (int)MmsGooseControlBlock_getMinTime(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsGooseControlBlock_getMaxTime(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsGooseControlBlock arg1 = (MmsGooseControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsGooseControlBlock_getMaxTime.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsGooseControlBlock_getMaxTime" "', argument " "1"" of type '" "MmsGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< MmsGooseControlBlock >(argp1);result = (int)MmsGooseControlBlock_getMaxTime(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsGooseControlBlock_getFixedOffs(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsGooseControlBlock arg1 = (MmsGooseControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsGooseControlBlock_getFixedOffs.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsGooseControlBlock_getFixedOffs" "', argument " "1"" of type '" "MmsGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< MmsGooseControlBlock >(argp1);result = (bool)MmsGooseControlBlock_getFixedOffs(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_MmsGooseControlBlock_getNdsCom(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  MmsGooseControlBlock arg1 = (MmsGooseControlBlock) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_MmsGooseControlBlock_getNdsCom.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sMmsGooseControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MmsGooseControlBlock_getNdsCom" "', argument " "1"" of type '" "MmsGooseControlBlock""'"); 
  }
  arg1 = reinterpret_cast< MmsGooseControlBlock >(argp1);result = (bool)MmsGooseControlBlock_getNdsCom(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_handleWriteAccess(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataAttribute *arg2 = (DataAttribute *) 0 ;
  WriteAccessHandler arg3 = (WriteAccessHandler) 0 ;
  void *arg4 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res4 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_handleWriteAccess.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_handleWriteAccess" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_handleWriteAccess" "', argument " "2"" of type '" "DataAttribute *""'"); 
  }
  arg2 = reinterpret_cast< DataAttribute * >(argp2);{
    {
      int res = SWIG_ConvertFunctionPtr(args[2], (void**)(&arg3), SWIGTYPE_p_f_p_sDataAttribute_p_sMmsValue_p_sClientConnection_p_void__MmsDataAccessError);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedServer_handleWriteAccess" "', argument " "3"" of type '" "WriteAccessHandler""'"); 
      }
    }
  }
  res4 = SWIG_ConvertPtr(args[3],SWIG_as_voidptrptr(&arg4), 0, 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedServer_handleWriteAccess" "', argument " "4"" of type '" "void *""'"); 
  }IedServer_handleWriteAccess(arg1,arg2,arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_handleWriteAccessForComplexAttribute(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  DataAttribute *arg2 = (DataAttribute *) 0 ;
  WriteAccessHandler arg3 = (WriteAccessHandler) 0 ;
  void *arg4 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res4 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_handleWriteAccessForComplexAttribute.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_handleWriteAccessForComplexAttribute" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedServer_handleWriteAccessForComplexAttribute" "', argument " "2"" of type '" "DataAttribute *""'"); 
  }
  arg2 = reinterpret_cast< DataAttribute * >(argp2);{
    {
      int res = SWIG_ConvertFunctionPtr(args[2], (void**)(&arg3), SWIGTYPE_p_f_p_sDataAttribute_p_sMmsValue_p_sClientConnection_p_void__MmsDataAccessError);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedServer_handleWriteAccessForComplexAttribute" "', argument " "3"" of type '" "WriteAccessHandler""'"); 
      }
    }
  }
  res4 = SWIG_ConvertPtr(args[3],SWIG_as_voidptrptr(&arg4), 0, 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IedServer_handleWriteAccessForComplexAttribute" "', argument " "4"" of type '" "void *""'"); 
  }IedServer_handleWriteAccessForComplexAttribute(arg1,arg2,arg3,arg4);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue exports_ACCESS_POLICY_ALLOW_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ACCESS_POLICY_ALLOW));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_ACCESS_POLICY_DENY_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(ACCESS_POLICY_DENY));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_IedServer_setWriteAccessPolicy(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  FunctionalConstraint arg2 ;
  AccessPolicy arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_setWriteAccessPolicy.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_setWriteAccessPolicy" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IedServer_setWriteAccessPolicy" "', argument " "2"" of type '" "FunctionalConstraint""'");
  } 
  arg2 = static_cast< FunctionalConstraint >(val2);ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IedServer_setWriteAccessPolicy" "', argument " "3"" of type '" "AccessPolicy""'");
  } 
  arg3 = static_cast< AccessPolicy >(val3);IedServer_setWriteAccessPolicy(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedServer_setReadAccessHandler(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedServer arg1 = (IedServer) 0 ;
  ReadAccessHandler arg2 = (ReadAccessHandler) 0 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedServer_setReadAccessHandler.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedServer_setReadAccessHandler" "', argument " "1"" of type '" "IedServer""'"); 
  }
  arg1 = reinterpret_cast< IedServer >(argp1);{
    {
      int res = SWIG_ConvertFunctionPtr(args[1], (void**)(&arg2), SWIGTYPE_p_f_p_sLogicalDevice_p_sLogicalNode_p_sDataObject_enum_eFunctionalConstraint_p_sClientConnection_p_void__MmsDataAccessError);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "IedServer_setReadAccessHandler" "', argument " "2"" of type '" "ReadAccessHandler""'"); 
      }
    }
  }
  res3 = SWIG_ConvertPtr(args[2],SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IedServer_setReadAccessHandler" "', argument " "3"" of type '" "void *""'"); 
  }IedServer_setReadAccessHandler(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedModel_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  IedModel *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedModel_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedModel_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);result = (IedModel *)IedModel_create((char const *)arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sIedModel, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedModel_setIedNameForDynamicModel(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedModel *arg1 = (IedModel *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedModel_setIedNameForDynamicModel.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedModel_setIedNameForDynamicModel" "', argument " "1"" of type '" "IedModel *""'"); 
  }
  arg1 = reinterpret_cast< IedModel * >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IedModel_setIedNameForDynamicModel" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);IedModel_setIedNameForDynamicModel(arg1,(char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_IedModel_destroy(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  IedModel *arg1 = (IedModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_IedModel_destroy.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IedModel_destroy" "', argument " "1"" of type '" "IedModel *""'"); 
  }
  arg1 = reinterpret_cast< IedModel * >(argp1);IedModel_destroy(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_LogicalDevice_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  IedModel *arg2 = (IedModel *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  LogicalDevice *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_LogicalDevice_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogicalDevice_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sIedModel, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LogicalDevice_create" "', argument " "2"" of type '" "IedModel *""'"); 
  }
  arg2 = reinterpret_cast< IedModel * >(argp2);result = (LogicalDevice *)LogicalDevice_create((char const *)arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLogicalDevice, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_LogicalNode_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  LogicalDevice *arg2 = (LogicalDevice *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  LogicalNode *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_LogicalNode_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogicalNode_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sLogicalDevice, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LogicalNode_create" "', argument " "2"" of type '" "LogicalDevice *""'"); 
  }
  arg2 = reinterpret_cast< LogicalDevice * >(argp2);result = (LogicalNode *)LogicalNode_create((char const *)arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLogicalNode, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_DataObject_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  int arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_DataObject_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataObject_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DataObject_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DataObject_create" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);result = (DataObject *)DataObject_create((char const *)arg1,arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_DataAttribute_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  DataAttributeType arg3 ;
  FunctionalConstraint arg4 ;
  uint8_t arg5 ;
  int arg6 ;
  uint32_t arg7 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  unsigned char val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  unsigned int val7 ;
  int ecode7 = 0 ;
  DataAttribute *result = 0 ;
  
  if (args.Length() < 7 || args.Length() > 7) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_DataAttribute_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataAttribute_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DataAttribute_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DataAttribute_create" "', argument " "3"" of type '" "DataAttributeType""'");
  } 
  arg3 = static_cast< DataAttributeType >(val3);ecode4 = SWIG_AsVal_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "DataAttribute_create" "', argument " "4"" of type '" "FunctionalConstraint""'");
  } 
  arg4 = static_cast< FunctionalConstraint >(val4);ecode5 = SWIG_AsVal_unsigned_SS_char(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "DataAttribute_create" "', argument " "5"" of type '" "uint8_t""'");
  } 
  arg5 = static_cast< uint8_t >(val5);ecode6 = SWIG_AsVal_int(args[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "DataAttribute_create" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);ecode7 = SWIG_AsVal_unsigned_SS_int(args[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "DataAttribute_create" "', argument " "7"" of type '" "uint32_t""'");
  } 
  arg7 = static_cast< uint32_t >(val7);result = (DataAttribute *)DataAttribute_create((char const *)arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_DataAttribute_getType(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  DataAttribute *arg1 = (DataAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  DataAttributeType result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_DataAttribute_getType.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataAttribute_getType" "', argument " "1"" of type '" "DataAttribute *""'"); 
  }
  arg1 = reinterpret_cast< DataAttribute * >(argp1);result = (DataAttributeType)DataAttribute_getType(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_DataAttribute_getFC(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  DataAttribute *arg1 = (DataAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  FunctionalConstraint result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_DataAttribute_getFC.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataAttribute_getFC" "', argument " "1"" of type '" "DataAttribute *""'"); 
  }
  arg1 = reinterpret_cast< DataAttribute * >(argp1);result = (FunctionalConstraint)DataAttribute_getFC(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_DataAttribute_getTrgOps(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  DataAttribute *arg1 = (DataAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_DataAttribute_getTrgOps.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataAttribute_getTrgOps" "', argument " "1"" of type '" "DataAttribute *""'"); 
  }
  arg1 = reinterpret_cast< DataAttribute * >(argp1);result = (uint8_t)DataAttribute_getTrgOps(arg1);
  jsresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_DataAttribute_setValue(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  DataAttribute *arg1 = (DataAttribute *) 0 ;
  MmsValue *arg2 = (MmsValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_DataAttribute_setValue.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataAttribute_setValue" "', argument " "1"" of type '" "DataAttribute *""'"); 
  }
  arg1 = reinterpret_cast< DataAttribute * >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DataAttribute_setValue" "', argument " "2"" of type '" "MmsValue *""'"); 
  }
  arg2 = reinterpret_cast< MmsValue * >(argp2);DataAttribute_setValue(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ReportControlBlock_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  LogicalNode *arg2 = (LogicalNode *) 0 ;
  char *arg3 = (char *) 0 ;
  bool arg4 ;
  char *arg5 = (char *) 0 ;
  uint32_t arg6 ;
  uint8_t arg7 ;
  uint8_t arg8 ;
  uint32_t arg9 ;
  uint32_t arg10 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  unsigned int val6 ;
  int ecode6 = 0 ;
  unsigned char val7 ;
  int ecode7 = 0 ;
  unsigned char val8 ;
  int ecode8 = 0 ;
  unsigned int val9 ;
  int ecode9 = 0 ;
  unsigned int val10 ;
  int ecode10 = 0 ;
  ReportControlBlock *result = 0 ;
  
  if (args.Length() < 10 || args.Length() > 10) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ReportControlBlock_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReportControlBlock_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sLogicalNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ReportControlBlock_create" "', argument " "2"" of type '" "LogicalNode *""'"); 
  }
  arg2 = reinterpret_cast< LogicalNode * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ReportControlBlock_create" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);ecode4 = SWIG_AsVal_bool(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ReportControlBlock_create" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);res5 = SWIG_AsCharPtrAndSize(args[4], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ReportControlBlock_create" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);ecode6 = SWIG_AsVal_unsigned_SS_int(args[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "ReportControlBlock_create" "', argument " "6"" of type '" "uint32_t""'");
  } 
  arg6 = static_cast< uint32_t >(val6);ecode7 = SWIG_AsVal_unsigned_SS_char(args[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "ReportControlBlock_create" "', argument " "7"" of type '" "uint8_t""'");
  } 
  arg7 = static_cast< uint8_t >(val7);ecode8 = SWIG_AsVal_unsigned_SS_char(args[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "ReportControlBlock_create" "', argument " "8"" of type '" "uint8_t""'");
  } 
  arg8 = static_cast< uint8_t >(val8);ecode9 = SWIG_AsVal_unsigned_SS_int(args[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "ReportControlBlock_create" "', argument " "9"" of type '" "uint32_t""'");
  } 
  arg9 = static_cast< uint32_t >(val9);ecode10 = SWIG_AsVal_unsigned_SS_int(args[9], &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "ReportControlBlock_create" "', argument " "10"" of type '" "uint32_t""'");
  } 
  arg10 = static_cast< uint32_t >(val10);result = (ReportControlBlock *)ReportControlBlock_create((char const *)arg1,arg2,(char const *)arg3,arg4,(char const *)arg5,arg6,arg7,arg8,arg9,arg10);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ReportControlBlock_setPreconfiguredClient(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ReportControlBlock *arg1 = (ReportControlBlock *) 0 ;
  uint8_t arg2 ;
  uint8_t *arg3 = (uint8_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ReportControlBlock_setPreconfiguredClient.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReportControlBlock_setPreconfiguredClient" "', argument " "1"" of type '" "ReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< ReportControlBlock * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_char(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ReportControlBlock_setPreconfiguredClient" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = static_cast< uint8_t >(val2);res3 = SWIG_ConvertPtr(args[2], &argp3,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ReportControlBlock_setPreconfiguredClient" "', argument " "3"" of type '" "uint8_t const *""'"); 
  }
  arg3 = reinterpret_cast< uint8_t * >(argp3);ReportControlBlock_setPreconfiguredClient(arg1,arg2,(unsigned char const *)arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ReportControlBlock_getName(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ReportControlBlock *arg1 = (ReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ReportControlBlock_getName.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReportControlBlock_getName" "', argument " "1"" of type '" "ReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< ReportControlBlock * >(argp1);result = (char *)ReportControlBlock_getName(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ReportControlBlock_isBuffered(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ReportControlBlock *arg1 = (ReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ReportControlBlock_isBuffered.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReportControlBlock_isBuffered" "', argument " "1"" of type '" "ReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< ReportControlBlock * >(argp1);result = (bool)ReportControlBlock_isBuffered(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ReportControlBlock_getParent(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ReportControlBlock *arg1 = (ReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  LogicalNode *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ReportControlBlock_getParent.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReportControlBlock_getParent" "', argument " "1"" of type '" "ReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< ReportControlBlock * >(argp1);result = (LogicalNode *)ReportControlBlock_getParent(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLogicalNode, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ReportControlBlock_getRptID(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ReportControlBlock *arg1 = (ReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ReportControlBlock_getRptID.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReportControlBlock_getRptID" "', argument " "1"" of type '" "ReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< ReportControlBlock * >(argp1);result = (char *)ReportControlBlock_getRptID(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ReportControlBlock_getRptEna(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ReportControlBlock *arg1 = (ReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ReportControlBlock_getRptEna.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReportControlBlock_getRptEna" "', argument " "1"" of type '" "ReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< ReportControlBlock * >(argp1);result = (int)ReportControlBlock_getRptEna(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ReportControlBlock_getDataSet(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ReportControlBlock *arg1 = (ReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ReportControlBlock_getDataSet.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReportControlBlock_getDataSet" "', argument " "1"" of type '" "ReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< ReportControlBlock * >(argp1);result = (char *)ReportControlBlock_getDataSet(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ReportControlBlock_getConfRev(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ReportControlBlock *arg1 = (ReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ReportControlBlock_getConfRev.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReportControlBlock_getConfRev" "', argument " "1"" of type '" "ReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< ReportControlBlock * >(argp1);result = (uint32_t)ReportControlBlock_getConfRev(arg1);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ReportControlBlock_getOptFlds(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ReportControlBlock *arg1 = (ReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ReportControlBlock_getOptFlds.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReportControlBlock_getOptFlds" "', argument " "1"" of type '" "ReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< ReportControlBlock * >(argp1);result = (uint32_t)ReportControlBlock_getOptFlds(arg1);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ReportControlBlock_getBufTm(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ReportControlBlock *arg1 = (ReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ReportControlBlock_getBufTm.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReportControlBlock_getBufTm" "', argument " "1"" of type '" "ReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< ReportControlBlock * >(argp1);result = (uint32_t)ReportControlBlock_getBufTm(arg1);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ReportControlBlock_getSqNum(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ReportControlBlock *arg1 = (ReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint16_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ReportControlBlock_getSqNum.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReportControlBlock_getSqNum" "', argument " "1"" of type '" "ReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< ReportControlBlock * >(argp1);result = (uint16_t)ReportControlBlock_getSqNum(arg1);
  jsresult = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ReportControlBlock_getTrgOps(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ReportControlBlock *arg1 = (ReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ReportControlBlock_getTrgOps.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReportControlBlock_getTrgOps" "', argument " "1"" of type '" "ReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< ReportControlBlock * >(argp1);result = (uint32_t)ReportControlBlock_getTrgOps(arg1);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ReportControlBlock_getIntgPd(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ReportControlBlock *arg1 = (ReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ReportControlBlock_getIntgPd.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReportControlBlock_getIntgPd" "', argument " "1"" of type '" "ReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< ReportControlBlock * >(argp1);result = (uint32_t)ReportControlBlock_getIntgPd(arg1);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ReportControlBlock_getGI(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ReportControlBlock *arg1 = (ReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ReportControlBlock_getGI.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReportControlBlock_getGI" "', argument " "1"" of type '" "ReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< ReportControlBlock * >(argp1);result = (bool)ReportControlBlock_getGI(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ReportControlBlock_getPurgeBuf(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ReportControlBlock *arg1 = (ReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ReportControlBlock_getPurgeBuf.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReportControlBlock_getPurgeBuf" "', argument " "1"" of type '" "ReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< ReportControlBlock * >(argp1);result = (bool)ReportControlBlock_getPurgeBuf(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ReportControlBlock_getEntryId(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ReportControlBlock *arg1 = (ReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ReportControlBlock_getEntryId.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReportControlBlock_getEntryId" "', argument " "1"" of type '" "ReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< ReportControlBlock * >(argp1);result = (MmsValue *)ReportControlBlock_getEntryId(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ReportControlBlock_getTimeofEntry(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ReportControlBlock *arg1 = (ReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint64_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ReportControlBlock_getTimeofEntry.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReportControlBlock_getTimeofEntry" "', argument " "1"" of type '" "ReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< ReportControlBlock * >(argp1);result = (uint64_t)ReportControlBlock_getTimeofEntry(arg1);
  jsresult = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ReportControlBlock_getResvTms(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ReportControlBlock *arg1 = (ReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int16_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ReportControlBlock_getResvTms.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReportControlBlock_getResvTms" "', argument " "1"" of type '" "ReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< ReportControlBlock * >(argp1);result = (int16_t)ReportControlBlock_getResvTms(arg1);
  jsresult = SWIG_From_short(static_cast< short >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ReportControlBlock_getOwner(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ReportControlBlock *arg1 = (ReportControlBlock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ReportControlBlock_getOwner.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sReportControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReportControlBlock_getOwner" "', argument " "1"" of type '" "ReportControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< ReportControlBlock * >(argp1);result = (MmsValue *)ReportControlBlock_getOwner(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_LogControlBlock_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  LogicalNode *arg2 = (LogicalNode *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  uint8_t arg5 ;
  uint32_t arg6 ;
  bool arg7 ;
  bool arg8 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  unsigned char val5 ;
  int ecode5 = 0 ;
  unsigned int val6 ;
  int ecode6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  bool val8 ;
  int ecode8 = 0 ;
  LogControlBlock *result = 0 ;
  
  if (args.Length() < 8 || args.Length() > 8) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_LogControlBlock_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogControlBlock_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sLogicalNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LogControlBlock_create" "', argument " "2"" of type '" "LogicalNode *""'"); 
  }
  arg2 = reinterpret_cast< LogicalNode * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "LogControlBlock_create" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "LogControlBlock_create" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);ecode5 = SWIG_AsVal_unsigned_SS_char(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "LogControlBlock_create" "', argument " "5"" of type '" "uint8_t""'");
  } 
  arg5 = static_cast< uint8_t >(val5);ecode6 = SWIG_AsVal_unsigned_SS_int(args[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "LogControlBlock_create" "', argument " "6"" of type '" "uint32_t""'");
  } 
  arg6 = static_cast< uint32_t >(val6);ecode7 = SWIG_AsVal_bool(args[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "LogControlBlock_create" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);ecode8 = SWIG_AsVal_bool(args[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "LogControlBlock_create" "', argument " "8"" of type '" "bool""'");
  } 
  arg8 = static_cast< bool >(val8);result = (LogControlBlock *)LogControlBlock_create((char const *)arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,arg6,arg7,arg8);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLogControlBlock, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_Log_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  LogicalNode *arg2 = (LogicalNode *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  Log *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_Log_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Log_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sLogicalNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Log_create" "', argument " "2"" of type '" "LogicalNode *""'"); 
  }
  arg2 = reinterpret_cast< LogicalNode * >(argp2);result = (Log *)Log_create((char const *)arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLog, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_SettingGroupControlBlock_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  LogicalNode *arg1 = (LogicalNode *) 0 ;
  uint8_t arg2 ;
  uint8_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  unsigned char val3 ;
  int ecode3 = 0 ;
  SettingGroupControlBlock *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_SettingGroupControlBlock_create.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sLogicalNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SettingGroupControlBlock_create" "', argument " "1"" of type '" "LogicalNode *""'"); 
  }
  arg1 = reinterpret_cast< LogicalNode * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_char(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SettingGroupControlBlock_create" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = static_cast< uint8_t >(val2);ecode3 = SWIG_AsVal_unsigned_SS_char(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SettingGroupControlBlock_create" "', argument " "3"" of type '" "uint8_t""'");
  } 
  arg3 = static_cast< uint8_t >(val3);result = (SettingGroupControlBlock *)SettingGroupControlBlock_create(arg1,arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sSettingGroupControlBlock, 0 |  0 );
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GSEControlBlock_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  LogicalNode *arg2 = (LogicalNode *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  uint32_t arg5 ;
  bool arg6 ;
  int arg7 ;
  int arg8 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  int val8 ;
  int ecode8 = 0 ;
  GSEControlBlock *result = 0 ;
  
  if (args.Length() < 8 || args.Length() > 8) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GSEControlBlock_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GSEControlBlock_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sLogicalNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GSEControlBlock_create" "', argument " "2"" of type '" "LogicalNode *""'"); 
  }
  arg2 = reinterpret_cast< LogicalNode * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GSEControlBlock_create" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "GSEControlBlock_create" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);ecode5 = SWIG_AsVal_unsigned_SS_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GSEControlBlock_create" "', argument " "5"" of type '" "uint32_t""'");
  } 
  arg5 = static_cast< uint32_t >(val5);ecode6 = SWIG_AsVal_bool(args[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GSEControlBlock_create" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);ecode7 = SWIG_AsVal_int(args[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "GSEControlBlock_create" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);ecode8 = SWIG_AsVal_int(args[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "GSEControlBlock_create" "', argument " "8"" of type '" "int""'");
  } 
  arg8 = static_cast< int >(val8);result = (GSEControlBlock *)GSEControlBlock_create((char const *)arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,arg6,arg7,arg8);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sGSEControlBlock, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_SVControlBlock_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  LogicalNode *arg2 = (LogicalNode *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  uint32_t arg5 ;
  uint8_t arg6 ;
  uint16_t arg7 ;
  uint8_t arg8 ;
  bool arg9 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  unsigned char val6 ;
  int ecode6 = 0 ;
  unsigned short val7 ;
  int ecode7 = 0 ;
  unsigned char val8 ;
  int ecode8 = 0 ;
  bool val9 ;
  int ecode9 = 0 ;
  SVControlBlock *result = 0 ;
  
  if (args.Length() < 9 || args.Length() > 9) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_SVControlBlock_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SVControlBlock_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sLogicalNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SVControlBlock_create" "', argument " "2"" of type '" "LogicalNode *""'"); 
  }
  arg2 = reinterpret_cast< LogicalNode * >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SVControlBlock_create" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "SVControlBlock_create" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);ecode5 = SWIG_AsVal_unsigned_SS_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "SVControlBlock_create" "', argument " "5"" of type '" "uint32_t""'");
  } 
  arg5 = static_cast< uint32_t >(val5);ecode6 = SWIG_AsVal_unsigned_SS_char(args[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "SVControlBlock_create" "', argument " "6"" of type '" "uint8_t""'");
  } 
  arg6 = static_cast< uint8_t >(val6);ecode7 = SWIG_AsVal_unsigned_SS_short(args[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "SVControlBlock_create" "', argument " "7"" of type '" "uint16_t""'");
  } 
  arg7 = static_cast< uint16_t >(val7);ecode8 = SWIG_AsVal_unsigned_SS_char(args[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "SVControlBlock_create" "', argument " "8"" of type '" "uint8_t""'");
  } 
  arg8 = static_cast< uint8_t >(val8);ecode9 = SWIG_AsVal_bool(args[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "SVControlBlock_create" "', argument " "9"" of type '" "bool""'");
  } 
  arg9 = static_cast< bool >(val9);result = (SVControlBlock *)SVControlBlock_create((char const *)arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,arg6,arg7,arg8,arg9);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_SVControlBlock_addPhyComAddress(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  SVControlBlock *arg1 = (SVControlBlock *) 0 ;
  PhyComAddress *arg2 = (PhyComAddress *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_SVControlBlock_addPhyComAddress.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sSVControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SVControlBlock_addPhyComAddress" "', argument " "1"" of type '" "SVControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< SVControlBlock * >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_PhyComAddress, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SVControlBlock_addPhyComAddress" "', argument " "2"" of type '" "PhyComAddress *""'"); 
  }
  arg2 = reinterpret_cast< PhyComAddress * >(argp2);SVControlBlock_addPhyComAddress(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GSEControlBlock_addPhyComAddress(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GSEControlBlock *arg1 = (GSEControlBlock *) 0 ;
  PhyComAddress *arg2 = (PhyComAddress *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GSEControlBlock_addPhyComAddress.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGSEControlBlock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GSEControlBlock_addPhyComAddress" "', argument " "1"" of type '" "GSEControlBlock *""'"); 
  }
  arg1 = reinterpret_cast< GSEControlBlock * >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_PhyComAddress, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GSEControlBlock_addPhyComAddress" "', argument " "2"" of type '" "PhyComAddress *""'"); 
  }
  arg2 = reinterpret_cast< PhyComAddress * >(argp2);GSEControlBlock_addPhyComAddress(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_PhyComAddress_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  uint8_t arg1 ;
  uint16_t arg2 ;
  uint16_t arg3 ;
  uint8_t *arg4 = (uint8_t *) (uint8_t *)0 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PhyComAddress *result = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_PhyComAddress_create.");
  
  ecode1 = SWIG_AsVal_unsigned_SS_char(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "PhyComAddress_create" "', argument " "1"" of type '" "uint8_t""'");
  } 
  arg1 = static_cast< uint8_t >(val1);ecode2 = SWIG_AsVal_unsigned_SS_short(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PhyComAddress_create" "', argument " "2"" of type '" "uint16_t""'");
  } 
  arg2 = static_cast< uint16_t >(val2);ecode3 = SWIG_AsVal_unsigned_SS_short(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PhyComAddress_create" "', argument " "3"" of type '" "uint16_t""'");
  } 
  arg3 = static_cast< uint16_t >(val3);res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "PhyComAddress_create" "', argument " "4"" of type '" "uint8_t []""'"); 
  } 
  arg4 = reinterpret_cast< uint8_t * >(argp4);result = (PhyComAddress *)PhyComAddress_create(arg1,arg2,arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PhyComAddress, 0 |  0 );
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_DataSet_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  LogicalNode *arg2 = (LogicalNode *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  DataSet *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_DataSet_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSet_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sLogicalNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DataSet_create" "', argument " "2"" of type '" "LogicalNode *""'"); 
  }
  arg2 = reinterpret_cast< LogicalNode * >(argp2);result = (DataSet *)DataSet_create((char const *)arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataSet, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_DataSet_getName(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  DataSet *arg1 = (DataSet *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_DataSet_getName.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sDataSet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSet_getName" "', argument " "1"" of type '" "DataSet *""'"); 
  }
  arg1 = reinterpret_cast< DataSet * >(argp1);result = (char *)DataSet_getName(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_DataSet_getSize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  DataSet *arg1 = (DataSet *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_DataSet_getSize.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sDataSet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSet_getSize" "', argument " "1"" of type '" "DataSet *""'"); 
  }
  arg1 = reinterpret_cast< DataSet * >(argp1);result = (int)DataSet_getSize(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_DataSet_getFirstEntry(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  DataSet *arg1 = (DataSet *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  DataSetEntry *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_DataSet_getFirstEntry.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sDataSet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSet_getFirstEntry" "', argument " "1"" of type '" "DataSet *""'"); 
  }
  arg1 = reinterpret_cast< DataSet * >(argp1);result = (DataSetEntry *)DataSet_getFirstEntry(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataSetEntry, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_DataSetEntry_getNext(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  DataSetEntry *arg1 = (DataSetEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  DataSetEntry *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_DataSetEntry_getNext.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sDataSetEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetEntry_getNext" "', argument " "1"" of type '" "DataSetEntry *""'"); 
  }
  arg1 = reinterpret_cast< DataSetEntry * >(argp1);result = (DataSetEntry *)DataSetEntry_getNext(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataSetEntry, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_DataSetEntry_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  DataSet *arg1 = (DataSet *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  DataSetEntry *result = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_DataSetEntry_create.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sDataSet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetEntry_create" "', argument " "1"" of type '" "DataSet *""'"); 
  }
  arg1 = reinterpret_cast< DataSet * >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DataSetEntry_create" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DataSetEntry_create" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);res4 = SWIG_AsCharPtrAndSize(args[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DataSetEntry_create" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);result = (DataSetEntry *)DataSetEntry_create(arg1,(char const *)arg2,arg3,(char const *)arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataSetEntry, 0 |  0 );
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue exports_CDC_OPTION_PICS_SUBST_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 0)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_BLK_ENA_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 1)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_DESC_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 2)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_DESC_UNICODE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 3)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_AC_DLNDA_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 4)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_AC_DLN_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 5)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_UNIT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 6)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_FROZEN_VALUE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 7)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_ADDR_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 8)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_ADDINFO_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 9)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_INST_MAG_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 10)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_RANGE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 11)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_UNIT_MULTIPLIER_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 12)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_AC_SCAV_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 13)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_MIN_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 14)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_MAX_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 15)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_AC_CLC_O_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 16)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_RANGE_ANG_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 17)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_PHASE_A_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 18)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_PHASE_B_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 19)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_PHASE_C_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 20)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_PHASE_NEUT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 21)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_PHASES_ABC_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(((1 << 18)|(1 << 19)|(1 << 20))));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_PHASES_ALL_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(((1 << 18)|(1 << 19)|(1 << 20)|(1 << 21))));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_STEP_SIZE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 22)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_ANGLE_REF_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 23)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_DPL_HWREV_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 17)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_DPL_SWREV_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 18)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_DPL_SERNUM_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 19)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_DPL_MODEL_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 20)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_DPL_LOCATION_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 21)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_AC_LN0_M_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 24)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_AC_LN0_EX_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 25)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_AC_DLD_M_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 26)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_CTL_MODEL_NONE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_CTL_MODEL_DIRECT_NORMAL_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_CTL_MODEL_SBO_NORMAL_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_CTL_MODEL_DIRECT_ENHANCED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(3));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_CTL_MODEL_SBO_ENHANCED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(4));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_CTL_MODEL_HAS_CANCEL_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 4)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_CTL_MODEL_IS_TIME_ACTIVATED_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 5)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_CTL_OPTION_ORIGIN_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 6)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_CTL_OPTION_CTL_NUM_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 7)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_CTL_OPTION_ST_SELD_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 8)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_CTL_OPTION_OP_RCVD_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 9)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_CTL_OPTION_OP_OK_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 10)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_CTL_OPTION_T_OP_OK_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 11)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_CTL_OPTION_SBO_TIMEOUT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 12)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_CTL_OPTION_SBO_CLASS_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 13)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_CTL_OPTION_OPER_TIMEOUT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 14)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_CAC_AnalogueValue_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  FunctionalConstraint arg3 ;
  uint8_t arg4 ;
  bool arg5 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  unsigned char val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  DataAttribute *result = 0 ;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CAC_AnalogueValue_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CAC_AnalogueValue_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CAC_AnalogueValue_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CAC_AnalogueValue_create" "', argument " "3"" of type '" "FunctionalConstraint""'");
  } 
  arg3 = static_cast< FunctionalConstraint >(val3);ecode4 = SWIG_AsVal_unsigned_SS_char(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CAC_AnalogueValue_create" "', argument " "4"" of type '" "uint8_t""'");
  } 
  arg4 = static_cast< uint8_t >(val4);ecode5 = SWIG_AsVal_bool(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CAC_AnalogueValue_create" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);result = (DataAttribute *)CAC_AnalogueValue_create((char const *)arg1,arg2,arg3,arg4,arg5);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CAC_ValWithTrans_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  FunctionalConstraint arg3 ;
  uint8_t arg4 ;
  bool arg5 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  unsigned char val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  DataAttribute *result = 0 ;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CAC_ValWithTrans_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CAC_ValWithTrans_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CAC_ValWithTrans_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CAC_ValWithTrans_create" "', argument " "3"" of type '" "FunctionalConstraint""'");
  } 
  arg3 = static_cast< FunctionalConstraint >(val3);ecode4 = SWIG_AsVal_unsigned_SS_char(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CAC_ValWithTrans_create" "', argument " "4"" of type '" "uint8_t""'");
  } 
  arg4 = static_cast< uint8_t >(val4);ecode5 = SWIG_AsVal_bool(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CAC_ValWithTrans_create" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);result = (DataAttribute *)CAC_ValWithTrans_create((char const *)arg1,arg2,arg3,arg4,arg5);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CAC_Vector_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  FunctionalConstraint arg4 ;
  uint8_t arg5 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  unsigned char val5 ;
  int ecode5 = 0 ;
  DataAttribute *result = 0 ;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CAC_Vector_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CAC_Vector_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CAC_Vector_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CAC_Vector_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);ecode4 = SWIG_AsVal_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CAC_Vector_create" "', argument " "4"" of type '" "FunctionalConstraint""'");
  } 
  arg4 = static_cast< FunctionalConstraint >(val4);ecode5 = SWIG_AsVal_unsigned_SS_char(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CAC_Vector_create" "', argument " "5"" of type '" "uint8_t""'");
  } 
  arg5 = static_cast< uint8_t >(val5);result = (DataAttribute *)CAC_Vector_create((char const *)arg1,arg2,arg3,arg4,arg5);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CAC_Point_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  FunctionalConstraint arg3 ;
  uint8_t arg4 ;
  bool arg5 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  unsigned char val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  DataAttribute *result = 0 ;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CAC_Point_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CAC_Point_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CAC_Point_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CAC_Point_create" "', argument " "3"" of type '" "FunctionalConstraint""'");
  } 
  arg3 = static_cast< FunctionalConstraint >(val3);ecode4 = SWIG_AsVal_unsigned_SS_char(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CAC_Point_create" "', argument " "4"" of type '" "uint8_t""'");
  } 
  arg4 = static_cast< uint8_t >(val4);ecode5 = SWIG_AsVal_bool(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CAC_Point_create" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);result = (DataAttribute *)CAC_Point_create((char const *)arg1,arg2,arg3,arg4,arg5);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CAC_ScaledValueConfig_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  DataAttribute *result = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CAC_ScaledValueConfig_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CAC_ScaledValueConfig_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CAC_ScaledValueConfig_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);result = (DataAttribute *)CAC_ScaledValueConfig_create((char const *)arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CAC_Unit_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  bool arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  DataAttribute *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CAC_Unit_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CAC_Unit_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CAC_Unit_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_bool(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CAC_Unit_create" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);result = (DataAttribute *)CAC_Unit_create((char const *)arg1,arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataAttribute, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_SPS_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_SPS_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_SPS_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_SPS_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_SPS_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);result = (DataObject *)CDC_SPS_create((char const *)arg1,arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_DPS_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_DPS_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_DPS_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_DPS_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_DPS_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);result = (DataObject *)CDC_DPS_create((char const *)arg1,arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_INS_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_INS_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_INS_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_INS_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_INS_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);result = (DataObject *)CDC_INS_create((char const *)arg1,arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_ENS_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_ENS_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_ENS_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_ENS_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_ENS_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);result = (DataObject *)CDC_ENS_create((char const *)arg1,arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_BCR_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_BCR_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_BCR_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_BCR_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_BCR_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);result = (DataObject *)CDC_BCR_create((char const *)arg1,arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_VSS_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_VSS_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_VSS_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_VSS_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_VSS_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);result = (DataObject *)CDC_VSS_create((char const *)arg1,arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_SEC_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_SEC_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_SEC_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_SEC_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_SEC_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);result = (DataObject *)CDC_SEC_create((char const *)arg1,arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_MV_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  bool arg4 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_MV_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_MV_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_MV_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_MV_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);ecode4 = SWIG_AsVal_bool(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CDC_MV_create" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);result = (DataObject *)CDC_MV_create((char const *)arg1,arg2,arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_CMV_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_CMV_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_CMV_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_CMV_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_CMV_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);result = (DataObject *)CDC_CMV_create((char const *)arg1,arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_SAV_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  bool arg4 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_SAV_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_SAV_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_SAV_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_SAV_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);ecode4 = SWIG_AsVal_bool(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CDC_SAV_create" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);result = (DataObject *)CDC_SAV_create((char const *)arg1,arg2,arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_LPL_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_LPL_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_LPL_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_LPL_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_LPL_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);result = (DataObject *)CDC_LPL_create((char const *)arg1,arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_DPL_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_DPL_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_DPL_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_DPL_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_DPL_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);result = (DataObject *)CDC_DPL_create((char const *)arg1,arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_HST_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  uint16_t arg4 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned short val4 ;
  int ecode4 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_HST_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_HST_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_HST_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_HST_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);ecode4 = SWIG_AsVal_unsigned_SS_short(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CDC_HST_create" "', argument " "4"" of type '" "uint16_t""'");
  } 
  arg4 = static_cast< uint16_t >(val4);result = (DataObject *)CDC_HST_create((char const *)arg1,arg2,arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_ACD_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_ACD_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_ACD_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_ACD_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_ACD_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);result = (DataObject *)CDC_ACD_create((char const *)arg1,arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_ACT_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_ACT_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_ACT_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_ACT_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_ACT_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);result = (DataObject *)CDC_ACT_create((char const *)arg1,arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_SPG_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_SPG_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_SPG_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_SPG_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_SPG_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);result = (DataObject *)CDC_SPG_create((char const *)arg1,arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_VSG_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_VSG_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_VSG_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_VSG_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_VSG_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);result = (DataObject *)CDC_VSG_create((char const *)arg1,arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_ENG_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_ENG_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_ENG_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_ENG_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_ENG_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);result = (DataObject *)CDC_ENG_create((char const *)arg1,arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_ING_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_ING_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_ING_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_ING_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_ING_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);result = (DataObject *)CDC_ING_create((char const *)arg1,arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_ASG_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  bool arg4 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_ASG_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_ASG_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_ASG_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_ASG_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);ecode4 = SWIG_AsVal_bool(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CDC_ASG_create" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);result = (DataObject *)CDC_ASG_create((char const *)arg1,arg2,arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_WYE_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_WYE_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_WYE_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_WYE_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_WYE_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);result = (DataObject *)CDC_WYE_create((char const *)arg1,arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_DEL_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_DEL_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_DEL_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_DEL_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_DEL_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);result = (DataObject *)CDC_DEL_create((char const *)arg1,arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_SPC_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  uint32_t arg4 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_SPC_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_SPC_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_SPC_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_SPC_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);ecode4 = SWIG_AsVal_unsigned_SS_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CDC_SPC_create" "', argument " "4"" of type '" "uint32_t""'");
  } 
  arg4 = static_cast< uint32_t >(val4);result = (DataObject *)CDC_SPC_create((char const *)arg1,arg2,arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_DPC_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  uint32_t arg4 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_DPC_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_DPC_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_DPC_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_DPC_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);ecode4 = SWIG_AsVal_unsigned_SS_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CDC_DPC_create" "', argument " "4"" of type '" "uint32_t""'");
  } 
  arg4 = static_cast< uint32_t >(val4);result = (DataObject *)CDC_DPC_create((char const *)arg1,arg2,arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_INC_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  uint32_t arg4 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_INC_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_INC_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_INC_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_INC_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);ecode4 = SWIG_AsVal_unsigned_SS_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CDC_INC_create" "', argument " "4"" of type '" "uint32_t""'");
  } 
  arg4 = static_cast< uint32_t >(val4);result = (DataObject *)CDC_INC_create((char const *)arg1,arg2,arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_ENC_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  uint32_t arg4 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 4 || args.Length() > 4) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_ENC_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_ENC_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_ENC_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_ENC_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);ecode4 = SWIG_AsVal_unsigned_SS_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CDC_ENC_create" "', argument " "4"" of type '" "uint32_t""'");
  } 
  arg4 = static_cast< uint32_t >(val4);result = (DataObject *)CDC_ENC_create((char const *)arg1,arg2,arg3,arg4);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_BSC_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  uint32_t arg4 ;
  bool arg5 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_BSC_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_BSC_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_BSC_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_BSC_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);ecode4 = SWIG_AsVal_unsigned_SS_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CDC_BSC_create" "', argument " "4"" of type '" "uint32_t""'");
  } 
  arg4 = static_cast< uint32_t >(val4);ecode5 = SWIG_AsVal_bool(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CDC_BSC_create" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);result = (DataObject *)CDC_BSC_create((char const *)arg1,arg2,arg3,arg4,arg5);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_ISC_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  uint32_t arg4 ;
  bool arg5 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_ISC_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_ISC_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_ISC_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_ISC_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);ecode4 = SWIG_AsVal_unsigned_SS_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CDC_ISC_create" "', argument " "4"" of type '" "uint32_t""'");
  } 
  arg4 = static_cast< uint32_t >(val4);ecode5 = SWIG_AsVal_bool(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CDC_ISC_create" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);result = (DataObject *)CDC_ISC_create((char const *)arg1,arg2,arg3,arg4,arg5);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_APC_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  uint32_t arg4 ;
  bool arg5 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_APC_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_APC_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_APC_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_APC_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);ecode4 = SWIG_AsVal_unsigned_SS_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CDC_APC_create" "', argument " "4"" of type '" "uint32_t""'");
  } 
  arg4 = static_cast< uint32_t >(val4);ecode5 = SWIG_AsVal_bool(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CDC_APC_create" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);result = (DataObject *)CDC_APC_create((char const *)arg1,arg2,arg3,arg4,arg5);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_BAC_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  uint32_t arg4 ;
  bool arg5 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_BAC_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_BAC_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_BAC_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_BAC_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);ecode4 = SWIG_AsVal_unsigned_SS_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CDC_BAC_create" "', argument " "4"" of type '" "uint32_t""'");
  } 
  arg4 = static_cast< uint32_t >(val4);ecode5 = SWIG_AsVal_bool(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CDC_BAC_create" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);result = (DataObject *)CDC_BAC_create((char const *)arg1,arg2,arg3,arg4,arg5);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue exports_CDC_OPTION_61400_MIN_MX_VAL_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 10)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_61400_MAX_MX_VAL_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 11)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_61400_TOT_AV_VAL_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 12)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_61400_SDV_VAL_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 13)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_61400_INC_RATE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 14)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_61400_DEC_RATE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 15)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_61400_SP_ACS_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 16)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_61400_CHA_PER_RS_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 17)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_61400_CM_ACS_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 18)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_61400_TM_TOT_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 19)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_61400_COUNTING_DAILY_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 20)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_61400_COUNTING_MONTHLY_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 21)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_61400_COUNTING_YEARLY_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 22)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_61400_COUNTING_TOTAL_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 23)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_CDC_OPTION_61400_COUNTING_ALL_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(((1 << 20)|(1 << 21)|(1 << 22)|(1 << 23))));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_CDC_SPV_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  uint32_t arg4 ;
  uint32_t arg5 ;
  bool arg6 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 6 || args.Length() > 6) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_SPV_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_SPV_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_SPV_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_SPV_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);ecode4 = SWIG_AsVal_unsigned_SS_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CDC_SPV_create" "', argument " "4"" of type '" "uint32_t""'");
  } 
  arg4 = static_cast< uint32_t >(val4);ecode5 = SWIG_AsVal_unsigned_SS_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CDC_SPV_create" "', argument " "5"" of type '" "uint32_t""'");
  } 
  arg5 = static_cast< uint32_t >(val5);ecode6 = SWIG_AsVal_bool(args[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CDC_SPV_create" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);result = (DataObject *)CDC_SPV_create((char const *)arg1,arg2,arg3,arg4,arg5,arg6);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_STV_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  uint32_t arg4 ;
  uint32_t arg5 ;
  bool arg6 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 6 || args.Length() > 6) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_STV_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_STV_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_STV_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_STV_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);ecode4 = SWIG_AsVal_unsigned_SS_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CDC_STV_create" "', argument " "4"" of type '" "uint32_t""'");
  } 
  arg4 = static_cast< uint32_t >(val4);ecode5 = SWIG_AsVal_unsigned_SS_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CDC_STV_create" "', argument " "5"" of type '" "uint32_t""'");
  } 
  arg5 = static_cast< uint32_t >(val5);ecode6 = SWIG_AsVal_bool(args[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CDC_STV_create" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);result = (DataObject *)CDC_STV_create((char const *)arg1,arg2,arg3,arg4,arg5,arg6);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_CMD_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  uint32_t arg4 ;
  uint32_t arg5 ;
  bool arg6 ;
  bool arg7 ;
  bool arg8 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  bool val8 ;
  int ecode8 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 8 || args.Length() > 8) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_CMD_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_CMD_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_CMD_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_CMD_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);ecode4 = SWIG_AsVal_unsigned_SS_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CDC_CMD_create" "', argument " "4"" of type '" "uint32_t""'");
  } 
  arg4 = static_cast< uint32_t >(val4);ecode5 = SWIG_AsVal_unsigned_SS_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CDC_CMD_create" "', argument " "5"" of type '" "uint32_t""'");
  } 
  arg5 = static_cast< uint32_t >(val5);ecode6 = SWIG_AsVal_bool(args[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CDC_CMD_create" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);ecode7 = SWIG_AsVal_bool(args[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CDC_CMD_create" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);ecode8 = SWIG_AsVal_bool(args[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "CDC_CMD_create" "', argument " "8"" of type '" "bool""'");
  } 
  arg8 = static_cast< bool >(val8);result = (DataObject *)CDC_CMD_create((char const *)arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_ALM_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  uint32_t arg4 ;
  uint32_t arg5 ;
  bool arg6 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 6 || args.Length() > 6) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_ALM_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_ALM_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_ALM_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_ALM_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);ecode4 = SWIG_AsVal_unsigned_SS_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CDC_ALM_create" "', argument " "4"" of type '" "uint32_t""'");
  } 
  arg4 = static_cast< uint32_t >(val4);ecode5 = SWIG_AsVal_unsigned_SS_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CDC_ALM_create" "', argument " "5"" of type '" "uint32_t""'");
  } 
  arg5 = static_cast< uint32_t >(val5);ecode6 = SWIG_AsVal_bool(args[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CDC_ALM_create" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);result = (DataObject *)CDC_ALM_create((char const *)arg1,arg2,arg3,arg4,arg5,arg6);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_CTE_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  uint32_t arg4 ;
  uint32_t arg5 ;
  bool arg6 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 6 || args.Length() > 6) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_CTE_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_CTE_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_CTE_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_CTE_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);ecode4 = SWIG_AsVal_unsigned_SS_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CDC_CTE_create" "', argument " "4"" of type '" "uint32_t""'");
  } 
  arg4 = static_cast< uint32_t >(val4);ecode5 = SWIG_AsVal_unsigned_SS_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CDC_CTE_create" "', argument " "5"" of type '" "uint32_t""'");
  } 
  arg5 = static_cast< uint32_t >(val5);ecode6 = SWIG_AsVal_bool(args[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CDC_CTE_create" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);result = (DataObject *)CDC_CTE_create((char const *)arg1,arg2,arg3,arg4,arg5,arg6);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CDC_TMS_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  ModelNode *arg2 = (ModelNode *) 0 ;
  uint32_t arg3 ;
  uint32_t arg4 ;
  uint32_t arg5 ;
  bool arg6 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  DataObject *result = 0 ;
  
  if (args.Length() < 6 || args.Length() > 6) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CDC_TMS_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDC_TMS_create" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDC_TMS_create" "', argument " "2"" of type '" "ModelNode *""'"); 
  }
  arg2 = reinterpret_cast< ModelNode * >(argp2);ecode3 = SWIG_AsVal_unsigned_SS_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CDC_TMS_create" "', argument " "3"" of type '" "uint32_t""'");
  } 
  arg3 = static_cast< uint32_t >(val3);ecode4 = SWIG_AsVal_unsigned_SS_int(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CDC_TMS_create" "', argument " "4"" of type '" "uint32_t""'");
  } 
  arg4 = static_cast< uint32_t >(val4);ecode5 = SWIG_AsVal_unsigned_SS_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CDC_TMS_create" "', argument " "5"" of type '" "uint32_t""'");
  } 
  arg5 = static_cast< uint32_t >(val5);ecode6 = SWIG_AsVal_bool(args[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CDC_TMS_create" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);result = (DataObject *)CDC_TMS_create((char const *)arg1,arg2,arg3,arg4,arg5,arg6);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataObject, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_sLinkedList_data_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sLinkedList *arg1 = (sLinkedList *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLinkedList_data_set" "', argument " "1"" of type '" "sLinkedList *""'"); 
  }
  arg1 = reinterpret_cast< sLinkedList * >(argp1);res2 = SWIG_ConvertPtr(value,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sLinkedList_data_set" "', argument " "2"" of type '" "void *""'"); 
  }if (arg1) (arg1)->data = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sLinkedList_data_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sLinkedList *arg1 = (sLinkedList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLinkedList_data_get" "', argument " "1"" of type '" "sLinkedList *""'"); 
  }
  arg1 = reinterpret_cast< sLinkedList * >(argp1);result = (void *) ((arg1)->data);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_sLinkedList_next_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sLinkedList *arg1 = (sLinkedList *) 0 ;
  sLinkedList *arg2 = (sLinkedList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLinkedList_next_set" "', argument " "1"" of type '" "sLinkedList *""'"); 
  }
  arg1 = reinterpret_cast< sLinkedList * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_sLinkedList, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sLinkedList_next_set" "', argument " "2"" of type '" "sLinkedList *""'"); 
  }
  arg2 = reinterpret_cast< sLinkedList * >(argp2);if (arg1) (arg1)->next = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_sLinkedList_next_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sLinkedList *arg1 = (sLinkedList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  sLinkedList *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sLinkedList_next_get" "', argument " "1"" of type '" "sLinkedList *""'"); 
  }
  arg1 = reinterpret_cast< sLinkedList * >(argp1);result = (sLinkedList *) ((arg1)->next);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_sLinkedList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  sLinkedList *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_sLinkedList.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_sLinkedList.");
  result = (sLinkedList *)new sLinkedList();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_sLinkedList, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_sLinkedList(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    sLinkedList * arg1 = (sLinkedList *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue _wrap_LinkedList_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  LinkedList result;
  
  if (args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_LinkedList_create.");
  
  result = (LinkedList)LinkedList_create();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_LinkedList_destroy(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  LinkedList arg1 = (LinkedList) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_LinkedList_destroy.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinkedList_destroy" "', argument " "1"" of type '" "LinkedList""'"); 
  }
  arg1 = reinterpret_cast< LinkedList >(argp1);LinkedList_destroy(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_LinkedList_destroyDeep(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  LinkedList arg1 = (LinkedList) 0 ;
  LinkedListValueDeleteFunction arg2 = (LinkedListValueDeleteFunction) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_LinkedList_destroyDeep.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinkedList_destroyDeep" "', argument " "1"" of type '" "LinkedList""'"); 
  }
  arg1 = reinterpret_cast< LinkedList >(argp1);{
    {
      int res = SWIG_ConvertFunctionPtr(args[1], (void**)(&arg2), SWIGTYPE_p_f_p_void__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "LinkedList_destroyDeep" "', argument " "2"" of type '" "LinkedListValueDeleteFunction""'"); 
      }
    }
  }
  LinkedList_destroyDeep(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_LinkedList_destroyStatic(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  LinkedList arg1 = (LinkedList) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_LinkedList_destroyStatic.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinkedList_destroyStatic" "', argument " "1"" of type '" "LinkedList""'"); 
  }
  arg1 = reinterpret_cast< LinkedList >(argp1);LinkedList_destroyStatic(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_LinkedList_add(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  LinkedList arg1 = (LinkedList) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_LinkedList_add.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinkedList_add" "', argument " "1"" of type '" "LinkedList""'"); 
  }
  arg1 = reinterpret_cast< LinkedList >(argp1);res2 = SWIG_ConvertPtr(args[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LinkedList_add" "', argument " "2"" of type '" "void *""'"); 
  }LinkedList_add(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_LinkedList_contains(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  LinkedList arg1 = (LinkedList) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  bool result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_LinkedList_contains.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinkedList_contains" "', argument " "1"" of type '" "LinkedList""'"); 
  }
  arg1 = reinterpret_cast< LinkedList >(argp1);res2 = SWIG_ConvertPtr(args[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LinkedList_contains" "', argument " "2"" of type '" "void *""'"); 
  }result = (bool)LinkedList_contains(arg1,arg2);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_LinkedList_remove(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  LinkedList arg1 = (LinkedList) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  bool result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_LinkedList_remove.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinkedList_remove" "', argument " "1"" of type '" "LinkedList""'"); 
  }
  arg1 = reinterpret_cast< LinkedList >(argp1);res2 = SWIG_ConvertPtr(args[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LinkedList_remove" "', argument " "2"" of type '" "void *""'"); 
  }result = (bool)LinkedList_remove(arg1,arg2);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_LinkedList_get(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  LinkedList arg1 = (LinkedList) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  LinkedList result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_LinkedList_get.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinkedList_get" "', argument " "1"" of type '" "LinkedList""'"); 
  }
  arg1 = reinterpret_cast< LinkedList >(argp1);ecode2 = SWIG_AsVal_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LinkedList_get" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);result = (LinkedList)LinkedList_get(arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_LinkedList_getNext(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  LinkedList arg1 = (LinkedList) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  LinkedList result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_LinkedList_getNext.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinkedList_getNext" "', argument " "1"" of type '" "LinkedList""'"); 
  }
  arg1 = reinterpret_cast< LinkedList >(argp1);result = (LinkedList)LinkedList_getNext(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_LinkedList_getLastElement(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  LinkedList arg1 = (LinkedList) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  LinkedList result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_LinkedList_getLastElement.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinkedList_getLastElement" "', argument " "1"" of type '" "LinkedList""'"); 
  }
  arg1 = reinterpret_cast< LinkedList >(argp1);result = (LinkedList)LinkedList_getLastElement(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_LinkedList_insertAfter(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  LinkedList arg1 = (LinkedList) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  LinkedList result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_LinkedList_insertAfter.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinkedList_insertAfter" "', argument " "1"" of type '" "LinkedList""'"); 
  }
  arg1 = reinterpret_cast< LinkedList >(argp1);res2 = SWIG_ConvertPtr(args[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LinkedList_insertAfter" "', argument " "2"" of type '" "void *""'"); 
  }result = (LinkedList)LinkedList_insertAfter(arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sLinkedList, 0 |  0 );
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_LinkedList_size(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  LinkedList arg1 = (LinkedList) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_LinkedList_size.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinkedList_size" "', argument " "1"" of type '" "LinkedList""'"); 
  }
  arg1 = reinterpret_cast< LinkedList >(argp1);result = (int)LinkedList_size(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_LinkedList_getData(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  LinkedList arg1 = (LinkedList) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_LinkedList_getData.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinkedList_getData" "', argument " "1"" of type '" "LinkedList""'"); 
  }
  arg1 = reinterpret_cast< LinkedList >(argp1);result = (void *)LinkedList_getData(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_LinkedList_printStringList(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  LinkedList arg1 = (LinkedList) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_LinkedList_printStringList.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinkedList_printStringList" "', argument " "1"" of type '" "LinkedList""'"); 
  }
  arg1 = reinterpret_cast< LinkedList >(argp1);LinkedList_printStringList(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ConfigFileParser_createModelFromConfigFileEx(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  IedModel *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ConfigFileParser_createModelFromConfigFileEx.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConfigFileParser_createModelFromConfigFileEx" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);result = (IedModel *)ConfigFileParser_createModelFromConfigFileEx((char const *)arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sIedModel, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_ConfigFileParser_createModelFromConfigFile(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  FileHandle arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  IedModel *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_ConfigFileParser_createModelFromConfigFile.");
  
  {
    {
      res1 = SWIG_ConvertPtr(args[0], &argp1, SWIGTYPE_p_FileHandle,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConfigFileParser_createModelFromConfigFile" "', argument " "1"" of type '" "FileHandle""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConfigFileParser_createModelFromConfigFile" "', argument " "1"" of type '" "FileHandle""'");
      } else {
        arg1 = *(reinterpret_cast< FileHandle * >(argp1));
      }
    }
  }
  result = (IedModel *)ConfigFileParser_createModelFromConfigFile(SWIG_STD_MOVE(arg1));
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sIedModel, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_toModelNode__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  LogicalNode *arg1 = (LogicalNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ModelNode *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sLogicalNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "toModelNode" "', argument " "1"" of type '" "LogicalNode *""'"); 
  }
  arg1 = reinterpret_cast< LogicalNode * >(argp1);result = (ModelNode *)toModelNode(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sModelNode, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_toModelNode__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  DataObject *arg1 = (DataObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ModelNode *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sDataObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "toModelNode" "', argument " "1"" of type '" "DataObject *""'"); 
  }
  arg1 = reinterpret_cast< DataObject * >(argp1);result = (ModelNode *)toModelNode(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sModelNode, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap___wrap_toModelNode(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() >= 1 && args.Length() <= 1) {
    errorHandler.err.Clear();
    _wrap_toModelNode__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
  }
  
  
  if(args.Length() >= 1 && args.Length() <= 1) {
    errorHandler.err.Clear();
    _wrap_toModelNode__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function toModelNode.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_toDataAttribute__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  DataObject *arg1 = (DataObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  DataAttribute *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sDataObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "toDataAttribute" "', argument " "1"" of type '" "DataObject *""'"); 
  }
  arg1 = reinterpret_cast< DataObject * >(argp1);result = (DataAttribute *)toDataAttribute(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataAttribute, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_toDataAttribute__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  ModelNode *arg1 = (ModelNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  DataAttribute *result = 0 ;
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sModelNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "toDataAttribute" "', argument " "1"" of type '" "ModelNode *""'"); 
  }
  arg1 = reinterpret_cast< ModelNode * >(argp1);result = (DataAttribute *)toDataAttribute(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sDataAttribute, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap___wrap_toDataAttribute(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() >= 1 && args.Length() <= 1) {
    errorHandler.err.Clear();
    _wrap_toDataAttribute__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
  }
  
  
  if(args.Length() >= 1 && args.Length() <= 1) {
    errorHandler.err.Clear();
    _wrap_toDataAttribute__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function toDataAttribute.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_toCharP(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  void *arg1 = (void *) 0 ;
  int res1 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_toCharP.");
  
  res1 = SWIG_ConvertPtr(args[0],SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "toCharP" "', argument " "1"" of type '" "void *""'"); 
  }result = (char *)toCharP(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue exports_GOOSE_PARSE_ERROR_NO_ERROR_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(GOOSE_PARSE_ERROR_NO_ERROR));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_GOOSE_PARSE_ERROR_UNKNOWN_TAG_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(GOOSE_PARSE_ERROR_UNKNOWN_TAG));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_GOOSE_PARSE_ERROR_TAGDECODE_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(GOOSE_PARSE_ERROR_TAGDECODE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_GOOSE_PARSE_ERROR_SUBLEVEL_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(GOOSE_PARSE_ERROR_SUBLEVEL));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_GOOSE_PARSE_ERROR_OVERFLOW_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(GOOSE_PARSE_ERROR_OVERFLOW));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_GOOSE_PARSE_ERROR_UNDERFLOW_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(GOOSE_PARSE_ERROR_UNDERFLOW));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_GOOSE_PARSE_ERROR_TYPE_MISMATCH_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(GOOSE_PARSE_ERROR_TYPE_MISMATCH));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue exports_GOOSE_PARSE_ERROR_LENGTH_MISMATCH_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(GOOSE_PARSE_ERROR_LENGTH_MISMATCH));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_GooseSubscriber_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  char *arg1 = (char *) 0 ;
  MmsValue *arg2 = (MmsValue *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  GooseSubscriber result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseSubscriber_create.");
  
  res1 = SWIG_AsCharPtrAndSize(args[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseSubscriber_create" "', argument " "1"" of type '" "char *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sMmsValue, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GooseSubscriber_create" "', argument " "2"" of type '" "MmsValue *""'"); 
  }
  arg2 = reinterpret_cast< MmsValue * >(argp2);result = (GooseSubscriber)GooseSubscriber_create(arg1,arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseSubscriber_getGoId(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseSubscriber arg1 = (GooseSubscriber) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseSubscriber_getGoId.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseSubscriber_getGoId" "', argument " "1"" of type '" "GooseSubscriber""'"); 
  }
  arg1 = reinterpret_cast< GooseSubscriber >(argp1);result = (char *)GooseSubscriber_getGoId(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseSubscriber_getGoCbRef(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseSubscriber arg1 = (GooseSubscriber) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseSubscriber_getGoCbRef.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseSubscriber_getGoCbRef" "', argument " "1"" of type '" "GooseSubscriber""'"); 
  }
  arg1 = reinterpret_cast< GooseSubscriber >(argp1);result = (char *)GooseSubscriber_getGoCbRef(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseSubscriber_getDataSet(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseSubscriber arg1 = (GooseSubscriber) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseSubscriber_getDataSet.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseSubscriber_getDataSet" "', argument " "1"" of type '" "GooseSubscriber""'"); 
  }
  arg1 = reinterpret_cast< GooseSubscriber >(argp1);result = (char *)GooseSubscriber_getDataSet(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseSubscriber_setDstMac__SWIG_0(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseSubscriber arg1 = (GooseSubscriber) 0 ;
  uint8_t *arg2 = (uint8_t *) (uint8_t *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseSubscriber_setDstMac" "', argument " "1"" of type '" "GooseSubscriber""'"); 
  }
  arg1 = reinterpret_cast< GooseSubscriber >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GooseSubscriber_setDstMac" "', argument " "2"" of type '" "uint8_t [6]""'"); 
  } 
  arg2 = reinterpret_cast< uint8_t * >(argp2);GooseSubscriber_setDstMac(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseSubscriber_setAppId(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseSubscriber arg1 = (GooseSubscriber) 0 ;
  uint16_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseSubscriber_setAppId.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseSubscriber_setAppId" "', argument " "1"" of type '" "GooseSubscriber""'"); 
  }
  arg1 = reinterpret_cast< GooseSubscriber >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_short(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GooseSubscriber_setAppId" "', argument " "2"" of type '" "uint16_t""'");
  } 
  arg2 = static_cast< uint16_t >(val2);GooseSubscriber_setAppId(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseSubscriber_isValid(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseSubscriber arg1 = (GooseSubscriber) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseSubscriber_isValid.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseSubscriber_isValid" "', argument " "1"" of type '" "GooseSubscriber""'"); 
  }
  arg1 = reinterpret_cast< GooseSubscriber >(argp1);result = (bool)GooseSubscriber_isValid(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseSubscriber_getParseError(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseSubscriber arg1 = (GooseSubscriber) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  GooseParseError result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseSubscriber_getParseError.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseSubscriber_getParseError" "', argument " "1"" of type '" "GooseSubscriber""'"); 
  }
  arg1 = reinterpret_cast< GooseSubscriber >(argp1);result = (GooseParseError)GooseSubscriber_getParseError(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseSubscriber_destroy(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseSubscriber arg1 = (GooseSubscriber) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseSubscriber_destroy.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseSubscriber_destroy" "', argument " "1"" of type '" "GooseSubscriber""'"); 
  }
  arg1 = reinterpret_cast< GooseSubscriber >(argp1);GooseSubscriber_destroy(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseSubscriber_setListener(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseSubscriber arg1 = (GooseSubscriber) 0 ;
  GooseListener arg2 = (GooseListener) 0 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseSubscriber_setListener.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseSubscriber_setListener" "', argument " "1"" of type '" "GooseSubscriber""'"); 
  }
  arg1 = reinterpret_cast< GooseSubscriber >(argp1);{
    {
      int res = SWIG_ConvertFunctionPtr(args[1], (void**)(&arg2), SWIGTYPE_p_f_p_sGooseSubscriber_p_void__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "GooseSubscriber_setListener" "', argument " "2"" of type '" "GooseListener""'"); 
      }
    }
  }
  res3 = SWIG_ConvertPtr(args[2],SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GooseSubscriber_setListener" "', argument " "3"" of type '" "void *""'"); 
  }GooseSubscriber_setListener(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseSubscriber_getAppId(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseSubscriber arg1 = (GooseSubscriber) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseSubscriber_getAppId.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseSubscriber_getAppId" "', argument " "1"" of type '" "GooseSubscriber""'"); 
  }
  arg1 = reinterpret_cast< GooseSubscriber >(argp1);result = (int32_t)GooseSubscriber_getAppId(arg1);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseSubscriber_getSrcMac(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseSubscriber arg1 = (GooseSubscriber) 0 ;
  uint8_t *arg2 = (uint8_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseSubscriber_getSrcMac.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseSubscriber_getSrcMac" "', argument " "1"" of type '" "GooseSubscriber""'"); 
  }
  arg1 = reinterpret_cast< GooseSubscriber >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GooseSubscriber_getSrcMac" "', argument " "2"" of type '" "uint8_t *""'"); 
  }
  arg2 = reinterpret_cast< uint8_t * >(argp2);GooseSubscriber_getSrcMac(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseSubscriber_getDstMac(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseSubscriber arg1 = (GooseSubscriber) 0 ;
  uint8_t *arg2 = (uint8_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseSubscriber_getDstMac.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseSubscriber_getDstMac" "', argument " "1"" of type '" "GooseSubscriber""'"); 
  }
  arg1 = reinterpret_cast< GooseSubscriber >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GooseSubscriber_getDstMac" "', argument " "2"" of type '" "uint8_t *""'"); 
  }
  arg2 = reinterpret_cast< uint8_t * >(argp2);GooseSubscriber_getDstMac(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseSubscriber_getStNum(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseSubscriber arg1 = (GooseSubscriber) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseSubscriber_getStNum.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseSubscriber_getStNum" "', argument " "1"" of type '" "GooseSubscriber""'"); 
  }
  arg1 = reinterpret_cast< GooseSubscriber >(argp1);result = (uint32_t)GooseSubscriber_getStNum(arg1);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseSubscriber_getSqNum(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseSubscriber arg1 = (GooseSubscriber) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseSubscriber_getSqNum.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseSubscriber_getSqNum" "', argument " "1"" of type '" "GooseSubscriber""'"); 
  }
  arg1 = reinterpret_cast< GooseSubscriber >(argp1);result = (uint32_t)GooseSubscriber_getSqNum(arg1);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseSubscriber_isTest(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseSubscriber arg1 = (GooseSubscriber) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseSubscriber_isTest.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseSubscriber_isTest" "', argument " "1"" of type '" "GooseSubscriber""'"); 
  }
  arg1 = reinterpret_cast< GooseSubscriber >(argp1);result = (bool)GooseSubscriber_isTest(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseSubscriber_getConfRev(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseSubscriber arg1 = (GooseSubscriber) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseSubscriber_getConfRev.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseSubscriber_getConfRev" "', argument " "1"" of type '" "GooseSubscriber""'"); 
  }
  arg1 = reinterpret_cast< GooseSubscriber >(argp1);result = (uint32_t)GooseSubscriber_getConfRev(arg1);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseSubscriber_needsCommission(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseSubscriber arg1 = (GooseSubscriber) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseSubscriber_needsCommission.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseSubscriber_needsCommission" "', argument " "1"" of type '" "GooseSubscriber""'"); 
  }
  arg1 = reinterpret_cast< GooseSubscriber >(argp1);result = (bool)GooseSubscriber_needsCommission(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseSubscriber_getTimeAllowedToLive(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseSubscriber arg1 = (GooseSubscriber) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseSubscriber_getTimeAllowedToLive.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseSubscriber_getTimeAllowedToLive" "', argument " "1"" of type '" "GooseSubscriber""'"); 
  }
  arg1 = reinterpret_cast< GooseSubscriber >(argp1);result = (uint32_t)GooseSubscriber_getTimeAllowedToLive(arg1);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseSubscriber_getTimestamp(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseSubscriber arg1 = (GooseSubscriber) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint64_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseSubscriber_getTimestamp.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseSubscriber_getTimestamp" "', argument " "1"" of type '" "GooseSubscriber""'"); 
  }
  arg1 = reinterpret_cast< GooseSubscriber >(argp1);result = (uint64_t)GooseSubscriber_getTimestamp(arg1);
  jsresult = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseSubscriber_getDataSetValues(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseSubscriber arg1 = (GooseSubscriber) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  MmsValue *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseSubscriber_getDataSetValues.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseSubscriber_getDataSetValues" "', argument " "1"" of type '" "GooseSubscriber""'"); 
  }
  arg1 = reinterpret_cast< GooseSubscriber >(argp1);result = (MmsValue *)GooseSubscriber_getDataSetValues(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sMmsValue, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseSubscriber_isVlanSet(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseSubscriber arg1 = (GooseSubscriber) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseSubscriber_isVlanSet.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseSubscriber_isVlanSet" "', argument " "1"" of type '" "GooseSubscriber""'"); 
  }
  arg1 = reinterpret_cast< GooseSubscriber >(argp1);result = (bool)GooseSubscriber_isVlanSet(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseSubscriber_getVlanId(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseSubscriber arg1 = (GooseSubscriber) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint16_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseSubscriber_getVlanId.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseSubscriber_getVlanId" "', argument " "1"" of type '" "GooseSubscriber""'"); 
  }
  arg1 = reinterpret_cast< GooseSubscriber >(argp1);result = (uint16_t)GooseSubscriber_getVlanId(arg1);
  jsresult = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseSubscriber_getVlanPrio(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseSubscriber arg1 = (GooseSubscriber) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseSubscriber_getVlanPrio.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseSubscriber_getVlanPrio" "', argument " "1"" of type '" "GooseSubscriber""'"); 
  }
  arg1 = reinterpret_cast< GooseSubscriber >(argp1);result = (uint8_t)GooseSubscriber_getVlanPrio(arg1);
  jsresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseSubscriber_setObserver(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseSubscriber arg1 = (GooseSubscriber) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseSubscriber_setObserver.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseSubscriber_setObserver" "', argument " "1"" of type '" "GooseSubscriber""'"); 
  }
  arg1 = reinterpret_cast< GooseSubscriber >(argp1);GooseSubscriber_setObserver(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseReceiver_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseReceiver result;
  
  if (args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseReceiver_create.");
  
  result = (GooseReceiver)GooseReceiver_create();
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sGooseReceiver, 0 |  0 );
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseReceiver_createEx(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  uint8_t *arg1 = (uint8_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  GooseReceiver result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseReceiver_createEx.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseReceiver_createEx" "', argument " "1"" of type '" "uint8_t *""'"); 
  }
  arg1 = reinterpret_cast< uint8_t * >(argp1);result = (GooseReceiver)GooseReceiver_createEx(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sGooseReceiver, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseReceiver_setInterfaceId(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseReceiver arg1 = (GooseReceiver) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseReceiver_setInterfaceId.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseReceiver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseReceiver_setInterfaceId" "', argument " "1"" of type '" "GooseReceiver""'"); 
  }
  arg1 = reinterpret_cast< GooseReceiver >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GooseReceiver_setInterfaceId" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);GooseReceiver_setInterfaceId(arg1,(char const *)arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseReceiver_getInterfaceId(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseReceiver arg1 = (GooseReceiver) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseReceiver_getInterfaceId.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseReceiver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseReceiver_getInterfaceId" "', argument " "1"" of type '" "GooseReceiver""'"); 
  }
  arg1 = reinterpret_cast< GooseReceiver >(argp1);result = (char *)GooseReceiver_getInterfaceId(arg1);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseReceiver_addSubscriber(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseReceiver arg1 = (GooseReceiver) 0 ;
  GooseSubscriber arg2 = (GooseSubscriber) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseReceiver_addSubscriber.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseReceiver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseReceiver_addSubscriber" "', argument " "1"" of type '" "GooseReceiver""'"); 
  }
  arg1 = reinterpret_cast< GooseReceiver >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GooseReceiver_addSubscriber" "', argument " "2"" of type '" "GooseSubscriber""'"); 
  }
  arg2 = reinterpret_cast< GooseSubscriber >(argp2);GooseReceiver_addSubscriber(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseReceiver_removeSubscriber(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseReceiver arg1 = (GooseReceiver) 0 ;
  GooseSubscriber arg2 = (GooseSubscriber) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseReceiver_removeSubscriber.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseReceiver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseReceiver_removeSubscriber" "', argument " "1"" of type '" "GooseReceiver""'"); 
  }
  arg1 = reinterpret_cast< GooseReceiver >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GooseReceiver_removeSubscriber" "', argument " "2"" of type '" "GooseSubscriber""'"); 
  }
  arg2 = reinterpret_cast< GooseSubscriber >(argp2);GooseReceiver_removeSubscriber(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseReceiver_start(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseReceiver arg1 = (GooseReceiver) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseReceiver_start.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseReceiver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseReceiver_start" "', argument " "1"" of type '" "GooseReceiver""'"); 
  }
  arg1 = reinterpret_cast< GooseReceiver >(argp1);GooseReceiver_start(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseReceiver_stop(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseReceiver arg1 = (GooseReceiver) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseReceiver_stop.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseReceiver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseReceiver_stop" "', argument " "1"" of type '" "GooseReceiver""'"); 
  }
  arg1 = reinterpret_cast< GooseReceiver >(argp1);GooseReceiver_stop(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseReceiver_isRunning(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseReceiver arg1 = (GooseReceiver) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseReceiver_isRunning.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseReceiver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseReceiver_isRunning" "', argument " "1"" of type '" "GooseReceiver""'"); 
  }
  arg1 = reinterpret_cast< GooseReceiver >(argp1);result = (bool)GooseReceiver_isRunning(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseReceiver_destroy(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseReceiver arg1 = (GooseReceiver) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseReceiver_destroy.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseReceiver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseReceiver_destroy" "', argument " "1"" of type '" "GooseReceiver""'"); 
  }
  arg1 = reinterpret_cast< GooseReceiver >(argp1);GooseReceiver_destroy(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseReceiver_startThreadless(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseReceiver arg1 = (GooseReceiver) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  EthernetSocket result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseReceiver_startThreadless.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseReceiver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseReceiver_startThreadless" "', argument " "1"" of type '" "GooseReceiver""'"); 
  }
  arg1 = reinterpret_cast< GooseReceiver >(argp1);result = GooseReceiver_startThreadless(arg1);
  jsresult = SWIG_NewPointerObj((new EthernetSocket(result)), SWIGTYPE_p_EthernetSocket, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseReceiver_stopThreadless(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseReceiver arg1 = (GooseReceiver) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseReceiver_stopThreadless.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseReceiver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseReceiver_stopThreadless" "', argument " "1"" of type '" "GooseReceiver""'"); 
  }
  arg1 = reinterpret_cast< GooseReceiver >(argp1);GooseReceiver_stopThreadless(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseReceiver_tick(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseReceiver arg1 = (GooseReceiver) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseReceiver_tick.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseReceiver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseReceiver_tick" "', argument " "1"" of type '" "GooseReceiver""'"); 
  }
  arg1 = reinterpret_cast< GooseReceiver >(argp1);result = (bool)GooseReceiver_tick(arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseReceiver_handleMessage(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseReceiver arg1 = (GooseReceiver) 0 ;
  uint8_t *arg2 = (uint8_t *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GooseReceiver_handleMessage.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseReceiver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseReceiver_handleMessage" "', argument " "1"" of type '" "GooseReceiver""'"); 
  }
  arg1 = reinterpret_cast< GooseReceiver >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GooseReceiver_handleMessage" "', argument " "2"" of type '" "uint8_t *""'"); 
  }
  arg2 = reinterpret_cast< uint8_t * >(argp2);ecode3 = SWIG_AsVal_int(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GooseReceiver_handleMessage" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);GooseReceiver_handleMessage(arg1,arg2,arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GooseSubscriber_setDstMac__SWIG_1(const SwigV8Arguments &args, V8ErrorHandler &SWIGV8_ErrorHandler)
{
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GooseSubscriber arg1 = (GooseSubscriber) 0 ;
  uint8_t arg2 ;
  uint8_t arg3 ;
  uint8_t arg4 ;
  uint8_t arg5 ;
  uint8_t arg6 ;
  uint8_t arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  unsigned char val3 ;
  int ecode3 = 0 ;
  unsigned char val4 ;
  int ecode4 = 0 ;
  unsigned char val5 ;
  int ecode5 = 0 ;
  unsigned char val6 ;
  int ecode6 = 0 ;
  unsigned char val7 ;
  int ecode7 = 0 ;
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGooseSubscriber, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GooseSubscriber_setDstMac" "', argument " "1"" of type '" "GooseSubscriber""'"); 
  }
  arg1 = reinterpret_cast< GooseSubscriber >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_char(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GooseSubscriber_setDstMac" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = static_cast< uint8_t >(val2);ecode3 = SWIG_AsVal_unsigned_SS_char(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GooseSubscriber_setDstMac" "', argument " "3"" of type '" "uint8_t""'");
  } 
  arg3 = static_cast< uint8_t >(val3);ecode4 = SWIG_AsVal_unsigned_SS_char(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GooseSubscriber_setDstMac" "', argument " "4"" of type '" "uint8_t""'");
  } 
  arg4 = static_cast< uint8_t >(val4);ecode5 = SWIG_AsVal_unsigned_SS_char(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GooseSubscriber_setDstMac" "', argument " "5"" of type '" "uint8_t""'");
  } 
  arg5 = static_cast< uint8_t >(val5);ecode6 = SWIG_AsVal_unsigned_SS_char(args[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GooseSubscriber_setDstMac" "', argument " "6"" of type '" "uint8_t""'");
  } 
  arg6 = static_cast< uint8_t >(val6);ecode7 = SWIG_AsVal_unsigned_SS_char(args[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "GooseSubscriber_setDstMac" "', argument " "7"" of type '" "uint8_t""'");
  } 
  arg7 = static_cast< uint8_t >(val7);GooseSubscriber_setDstMac(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap___wrap_GooseSubscriber_setDstMac(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  OverloadErrorHandler errorHandler;
  
  
  if(args.Length() >= 2 && args.Length() <= 2) {
    errorHandler.err.Clear();
    _wrap_GooseSubscriber_setDstMac__SWIG_0(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
  }
  
  
  if(args.Length() >= 7 && args.Length() <= 7) {
    errorHandler.err.Clear();
    _wrap_GooseSubscriber_setDstMac__SWIG_1(args, errorHandler);
    if(errorHandler.err.IsEmpty()) {
      return;
    }
  }
  
  
  SWIG_exception_fail(SWIG_ERROR, "Illegal arguments for function GooseSubscriber_setDstMac.");
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_CommParameters_vlanPriority_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sCommParameters *arg1 = (sCommParameters *) 0 ;
  uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sCommParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CommParameters_vlanPriority_set" "', argument " "1"" of type '" "sCommParameters *""'"); 
  }
  arg1 = reinterpret_cast< sCommParameters * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_char(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CommParameters_vlanPriority_set" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = static_cast< uint8_t >(val2);if (arg1) (arg1)->vlanPriority = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_CommParameters_vlanPriority_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sCommParameters *arg1 = (sCommParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sCommParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CommParameters_vlanPriority_get" "', argument " "1"" of type '" "sCommParameters *""'"); 
  }
  arg1 = reinterpret_cast< sCommParameters * >(argp1);result = (uint8_t) ((arg1)->vlanPriority);
  jsresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_CommParameters_vlanId_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sCommParameters *arg1 = (sCommParameters *) 0 ;
  uint16_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sCommParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CommParameters_vlanId_set" "', argument " "1"" of type '" "sCommParameters *""'"); 
  }
  arg1 = reinterpret_cast< sCommParameters * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_short(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CommParameters_vlanId_set" "', argument " "2"" of type '" "uint16_t""'");
  } 
  arg2 = static_cast< uint16_t >(val2);if (arg1) (arg1)->vlanId = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_CommParameters_vlanId_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sCommParameters *arg1 = (sCommParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint16_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sCommParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CommParameters_vlanId_get" "', argument " "1"" of type '" "sCommParameters *""'"); 
  }
  arg1 = reinterpret_cast< sCommParameters * >(argp1);result = (uint16_t) ((arg1)->vlanId);
  jsresult = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_CommParameters_appId_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sCommParameters *arg1 = (sCommParameters *) 0 ;
  uint16_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sCommParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CommParameters_appId_set" "', argument " "1"" of type '" "sCommParameters *""'"); 
  }
  arg1 = reinterpret_cast< sCommParameters * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_short(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CommParameters_appId_set" "', argument " "2"" of type '" "uint16_t""'");
  } 
  arg2 = static_cast< uint16_t >(val2);if (arg1) (arg1)->appId = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_CommParameters_appId_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sCommParameters *arg1 = (sCommParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint16_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sCommParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CommParameters_appId_get" "', argument " "1"" of type '" "sCommParameters *""'"); 
  }
  arg1 = reinterpret_cast< sCommParameters * >(argp1);result = (uint16_t) ((arg1)->appId);
  jsresult = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_CommParameters_dstAddress_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  sCommParameters *arg1 = (sCommParameters *) 0 ;
  uint8_t *arg2 = (uint8_t *) (uint8_t *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sCommParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CommParameters_dstAddress_set" "', argument " "1"" of type '" "sCommParameters *""'"); 
  }
  arg1 = reinterpret_cast< sCommParameters * >(argp1);res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CommParameters_dstAddress_set" "', argument " "2"" of type '" "uint8_t [6]""'"); 
  } 
  arg2 = reinterpret_cast< uint8_t * >(argp2);{
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)6; ++ii) *(uint8_t *)&arg1->dstAddress[ii] = *((uint8_t *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dstAddress""' of type '""uint8_t [6]""'");
    }
  }
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_CommParameters_dstAddress_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  sCommParameters *arg1 = (sCommParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint8_t *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_sCommParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CommParameters_dstAddress_get" "', argument " "1"" of type '" "sCommParameters *""'"); 
  }
  arg1 = reinterpret_cast< sCommParameters * >(argp1);result = (uint8_t *)(uint8_t *) ((arg1)->dstAddress);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_CommParameters(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  sCommParameters *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_CommParameters.");
  if(args.Length() < 0 || args.Length() > 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_CommParameters.");
  result = (sCommParameters *)new sCommParameters();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_sCommParameters, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_CommParameters(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    sCommParameters * arg1 = (sCommParameters *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue _wrap_GoosePublisher_create(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  CommParameters *arg1 = (CommParameters *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  GoosePublisher result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GoosePublisher_create.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sCommParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GoosePublisher_create" "', argument " "1"" of type '" "CommParameters *""'"); 
  }
  arg1 = reinterpret_cast< CommParameters * >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GoosePublisher_create" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);result = (GoosePublisher)GoosePublisher_create(arg1,(char const *)arg2);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sGoosePublisher, 0 |  0 );
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GoosePublisher_createEx(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  CommParameters *arg1 = (CommParameters *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  GoosePublisher result;
  
  if (args.Length() < 3 || args.Length() > 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GoosePublisher_createEx.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sCommParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GoosePublisher_createEx" "', argument " "1"" of type '" "CommParameters *""'"); 
  }
  arg1 = reinterpret_cast< CommParameters * >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GoosePublisher_createEx" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);ecode3 = SWIG_AsVal_bool(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GoosePublisher_createEx" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);result = (GoosePublisher)GoosePublisher_createEx(arg1,(char const *)arg2,arg3);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sGoosePublisher, 0 |  0 );
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GoosePublisher_destroy(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GoosePublisher arg1 = (GoosePublisher) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GoosePublisher_destroy.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGoosePublisher, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GoosePublisher_destroy" "', argument " "1"" of type '" "GoosePublisher""'"); 
  }
  arg1 = reinterpret_cast< GoosePublisher >(argp1);GoosePublisher_destroy(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GoosePublisher_publish(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GoosePublisher arg1 = (GoosePublisher) 0 ;
  LinkedList arg2 = (LinkedList) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int result;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GoosePublisher_publish.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGoosePublisher, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GoosePublisher_publish" "', argument " "1"" of type '" "GoosePublisher""'"); 
  }
  arg1 = reinterpret_cast< GoosePublisher >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GoosePublisher_publish" "', argument " "2"" of type '" "LinkedList""'"); 
  }
  arg2 = reinterpret_cast< LinkedList >(argp2);result = (int)GoosePublisher_publish(arg1,arg2);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GoosePublisher_publishAndDump(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GoosePublisher arg1 = (GoosePublisher) 0 ;
  LinkedList arg2 = (LinkedList) 0 ;
  char *arg3 = (char *) 0 ;
  int32_t *arg4 = (int32_t *) 0 ;
  int32_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int result;
  
  if (args.Length() < 5 || args.Length() > 5) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GoosePublisher_publishAndDump.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGoosePublisher, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GoosePublisher_publishAndDump" "', argument " "1"" of type '" "GoosePublisher""'"); 
  }
  arg1 = reinterpret_cast< GoosePublisher >(argp1);res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GoosePublisher_publishAndDump" "', argument " "2"" of type '" "LinkedList""'"); 
  }
  arg2 = reinterpret_cast< LinkedList >(argp2);res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GoosePublisher_publishAndDump" "', argument " "3"" of type '" "char *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);res4 = SWIG_ConvertPtr(args[3], &argp4,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "GoosePublisher_publishAndDump" "', argument " "4"" of type '" "int32_t *""'"); 
  }
  arg4 = reinterpret_cast< int32_t * >(argp4);ecode5 = SWIG_AsVal_int(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GoosePublisher_publishAndDump" "', argument " "5"" of type '" "int32_t""'");
  } 
  arg5 = static_cast< int32_t >(val5);result = (int)GoosePublisher_publishAndDump(arg1,arg2,arg3,arg4,arg5);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GoosePublisher_setGoID(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GoosePublisher arg1 = (GoosePublisher) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GoosePublisher_setGoID.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGoosePublisher, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GoosePublisher_setGoID" "', argument " "1"" of type '" "GoosePublisher""'"); 
  }
  arg1 = reinterpret_cast< GoosePublisher >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GoosePublisher_setGoID" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);GoosePublisher_setGoID(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GoosePublisher_setGoCbRef(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GoosePublisher arg1 = (GoosePublisher) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GoosePublisher_setGoCbRef.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGoosePublisher, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GoosePublisher_setGoCbRef" "', argument " "1"" of type '" "GoosePublisher""'"); 
  }
  arg1 = reinterpret_cast< GoosePublisher >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GoosePublisher_setGoCbRef" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);GoosePublisher_setGoCbRef(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GoosePublisher_setTimeAllowedToLive(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GoosePublisher arg1 = (GoosePublisher) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GoosePublisher_setTimeAllowedToLive.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGoosePublisher, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GoosePublisher_setTimeAllowedToLive" "', argument " "1"" of type '" "GoosePublisher""'"); 
  }
  arg1 = reinterpret_cast< GoosePublisher >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GoosePublisher_setTimeAllowedToLive" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = static_cast< uint32_t >(val2);GoosePublisher_setTimeAllowedToLive(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GoosePublisher_setDataSetRef(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GoosePublisher arg1 = (GoosePublisher) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GoosePublisher_setDataSetRef.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGoosePublisher, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GoosePublisher_setDataSetRef" "', argument " "1"" of type '" "GoosePublisher""'"); 
  }
  arg1 = reinterpret_cast< GoosePublisher >(argp1);res2 = SWIG_AsCharPtrAndSize(args[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GoosePublisher_setDataSetRef" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);GoosePublisher_setDataSetRef(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GoosePublisher_setConfRev(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GoosePublisher arg1 = (GoosePublisher) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GoosePublisher_setConfRev.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGoosePublisher, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GoosePublisher_setConfRev" "', argument " "1"" of type '" "GoosePublisher""'"); 
  }
  arg1 = reinterpret_cast< GoosePublisher >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GoosePublisher_setConfRev" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = static_cast< uint32_t >(val2);GoosePublisher_setConfRev(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GoosePublisher_setSimulation(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GoosePublisher arg1 = (GoosePublisher) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GoosePublisher_setSimulation.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGoosePublisher, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GoosePublisher_setSimulation" "', argument " "1"" of type '" "GoosePublisher""'"); 
  }
  arg1 = reinterpret_cast< GoosePublisher >(argp1);ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GoosePublisher_setSimulation" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);GoosePublisher_setSimulation(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GoosePublisher_setStNum(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GoosePublisher arg1 = (GoosePublisher) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GoosePublisher_setStNum.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGoosePublisher, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GoosePublisher_setStNum" "', argument " "1"" of type '" "GoosePublisher""'"); 
  }
  arg1 = reinterpret_cast< GoosePublisher >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GoosePublisher_setStNum" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = static_cast< uint32_t >(val2);GoosePublisher_setStNum(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GoosePublisher_setSqNum(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GoosePublisher arg1 = (GoosePublisher) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GoosePublisher_setSqNum.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGoosePublisher, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GoosePublisher_setSqNum" "', argument " "1"" of type '" "GoosePublisher""'"); 
  }
  arg1 = reinterpret_cast< GoosePublisher >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GoosePublisher_setSqNum" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = static_cast< uint32_t >(val2);GoosePublisher_setSqNum(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GoosePublisher_setNeedsCommission(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GoosePublisher arg1 = (GoosePublisher) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (args.Length() < 2 || args.Length() > 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GoosePublisher_setNeedsCommission.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGoosePublisher, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GoosePublisher_setNeedsCommission" "', argument " "1"" of type '" "GoosePublisher""'"); 
  }
  arg1 = reinterpret_cast< GoosePublisher >(argp1);ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GoosePublisher_setNeedsCommission" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);GoosePublisher_setNeedsCommission(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GoosePublisher_increaseStNum(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GoosePublisher arg1 = (GoosePublisher) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint64_t result;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GoosePublisher_increaseStNum.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGoosePublisher, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GoosePublisher_increaseStNum" "', argument " "1"" of type '" "GoosePublisher""'"); 
  }
  arg1 = reinterpret_cast< GoosePublisher >(argp1);result = (uint64_t)GoosePublisher_increaseStNum(arg1);
  jsresult = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_GoosePublisher_reset(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  GoosePublisher arg1 = (GoosePublisher) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_GoosePublisher_reset.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sGoosePublisher, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GoosePublisher_reset" "', argument " "1"" of type '" "GoosePublisher""'"); 
  }
  arg1 = reinterpret_cast< GoosePublisher >(argp1);GoosePublisher_reset(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_LinkedList_destroyDeep_MmsValueDelete(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  LinkedList arg1 = (LinkedList) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (args.Length() < 1 || args.Length() > 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_LinkedList_destroyDeep_MmsValueDelete.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sLinkedList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinkedList_destroyDeep_MmsValueDelete" "', argument " "1"" of type '" "LinkedList""'"); 
  }
  arg1 = reinterpret_cast< LinkedList >(argp1);LinkedList_destroyDeep_MmsValueDelete(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_CommParameters_setDstAddress(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  CommParameters *arg1 = (CommParameters *) 0 ;
  uint8_t arg2 ;
  uint8_t arg3 ;
  uint8_t arg4 ;
  uint8_t arg5 ;
  uint8_t arg6 ;
  uint8_t arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  unsigned char val3 ;
  int ecode3 = 0 ;
  unsigned char val4 ;
  int ecode4 = 0 ;
  unsigned char val5 ;
  int ecode5 = 0 ;
  unsigned char val6 ;
  int ecode6 = 0 ;
  unsigned char val7 ;
  int ecode7 = 0 ;
  
  if (args.Length() < 7 || args.Length() > 7) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_CommParameters_setDstAddress.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_sCommParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CommParameters_setDstAddress" "', argument " "1"" of type '" "CommParameters *""'"); 
  }
  arg1 = reinterpret_cast< CommParameters * >(argp1);ecode2 = SWIG_AsVal_unsigned_SS_char(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CommParameters_setDstAddress" "', argument " "2"" of type '" "uint8_t""'");
  } 
  arg2 = static_cast< uint8_t >(val2);ecode3 = SWIG_AsVal_unsigned_SS_char(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CommParameters_setDstAddress" "', argument " "3"" of type '" "uint8_t""'");
  } 
  arg3 = static_cast< uint8_t >(val3);ecode4 = SWIG_AsVal_unsigned_SS_char(args[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CommParameters_setDstAddress" "', argument " "4"" of type '" "uint8_t""'");
  } 
  arg4 = static_cast< uint8_t >(val4);ecode5 = SWIG_AsVal_unsigned_SS_char(args[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CommParameters_setDstAddress" "', argument " "5"" of type '" "uint8_t""'");
  } 
  arg5 = static_cast< uint8_t >(val5);ecode6 = SWIG_AsVal_unsigned_SS_char(args[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CommParameters_setDstAddress" "', argument " "6"" of type '" "uint8_t""'");
  } 
  arg6 = static_cast< uint8_t >(val6);ecode7 = SWIG_AsVal_unsigned_SS_char(args[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CommParameters_setDstAddress" "', argument " "7"" of type '" "uint8_t""'");
  } 
  arg7 = static_cast< uint8_t >(val7);CommParameters_setDstAddress(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static swig_type_info _swigt__p_ACSIClass = {"_p_ACSIClass", "ACSIClass *|enum ACSIClass *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_AccessPolicy = {"_p_AccessPolicy", "AccessPolicy *|enum AccessPolicy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_AcseAuthenticationMechanism = {"_p_AcseAuthenticationMechanism", "AcseAuthenticationMechanism *|enum AcseAuthenticationMechanism *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CheckHandlerResult = {"_p_CheckHandlerResult", "CheckHandlerResult *|enum CheckHandlerResult *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ControlActionType = {"_p_ControlActionType", "ControlActionType *|enum ControlActionType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ControlAddCause = {"_p_ControlAddCause", "ControlAddCause *|enum ControlAddCause *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ControlHandlerResult = {"_p_ControlHandlerResult", "ControlHandlerResult *|enum ControlHandlerResult *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ControlLastApplError = {"_p_ControlLastApplError", "ControlLastApplError *|enum ControlLastApplError *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ControlModel = {"_p_ControlModel", "ControlModel *|enum ControlModel *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DataAttributeType = {"_p_DataAttributeType", "DataAttributeType *|enum DataAttributeType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Dbpos = {"_p_Dbpos", "Dbpos *|enum Dbpos *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_EthernetSocket = {"_p_EthernetSocket", "EthernetSocket *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FileHandle = {"_p_FileHandle", "FileHandle *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_GooseParseError = {"_p_GooseParseError", "GooseParseError *|enum GooseParseError *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IedClientError = {"_p_IedClientError", "IedClientError *|enum IedClientError *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IedConnectionState = {"_p_IedConnectionState", "IedConnectionState *|enum IedConnectionState *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IedServer_RCBEventType = {"_p_IedServer_RCBEventType", "IedServer_RCBEventType *|enum IedServer_RCBEventType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IsoApplicationReference = {"_p_IsoApplicationReference", "p_IsoApplicationReference|IsoApplicationReference *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ItuObjectIdentifier = {"_p_ItuObjectIdentifier", "ItuObjectIdentifier *|p_ItuObjectIdentifier", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LastApplError = {"_p_LastApplError", "LastApplError *|p_LastApplError", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LogStorage = {"_p_LogStorage", "LogStorage *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MmsConnectionState = {"_p_MmsConnectionState", "MmsConnectionState *|enum MmsConnectionState *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MmsDataAccessError = {"_p_MmsDataAccessError", "MmsDataAccessError *|enum MmsDataAccessError *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MmsError = {"_p_MmsError", "MmsError *|enum MmsError *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MmsServer = {"_p_MmsServer", "MmsServer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MmsServerIdentity = {"_p_MmsServerIdentity", "p_MmsServerIdentity|MmsServerIdentity *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MmsType = {"_p_MmsType", "MmsType *|enum MmsType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MmsVariableAccessSpecification = {"_p_MmsVariableAccessSpecification", "p_MmsVariableAccessSpecification|MmsVariableAccessSpecification *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MmsVariableSpecification = {"_p_MmsVariableSpecification", "MmsVariableSpecification *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ModelNodeType = {"_p_ModelNodeType", "ModelNodeType *|enum ModelNodeType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PSelector = {"_p_PSelector", "PSelector *|p_PSelector", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PhyComAddress = {"_p_PhyComAddress", "p_PhyComAddress|PhyComAddress *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SSelector = {"_p_SSelector", "p_SSelector|SSelector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SelectStateChangedReason = {"_p_SelectStateChangedReason", "SelectStateChangedReason *|enum SelectStateChangedReason *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TLSConfiguration = {"_p_TLSConfiguration", "TLSConfiguration *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TSelector = {"_p_TSelector", "TSelector *|p_TSelector", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Timestamp = {"_p_Timestamp", "p_Timestamp|Timestamp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_bool = {"_p_bool", "bool *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_eFunctionalConstraint = {"_p_eFunctionalConstraint", "FunctionalConstraint *|enum eFunctionalConstraint *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_sDataAttribute_p_sMmsValue_p_sClientConnection_p_void__MmsDataAccessError = {"_p_f_p_sDataAttribute_p_sMmsValue_p_sClientConnection_p_void__MmsDataAccessError", "WriteAccessHandler|enum MmsDataAccessError (*)(sDataAttribute *,sMmsValue *,sClientConnection *,void *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_sGooseSubscriber_p_void__void = {"_p_f_p_sGooseSubscriber_p_void__void", "GooseListener|void (*)(sGooseSubscriber *,void *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_sIedServer_p_sClientConnection_bool_p_void__void = {"_p_f_p_sIedServer_p_sClientConnection_bool_p_void__void", "IedConnectionIndicationHandler|void (*)(sIedServer *,sClientConnection *,bool,void *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_sLogicalDevice_p_sLogicalNode_p_sDataObject_enum_eFunctionalConstraint_p_sClientConnection_p_void__MmsDataAccessError = {"_p_f_p_sLogicalDevice_p_sLogicalNode_p_sDataObject_enum_eFunctionalConstraint_p_sClientConnection_p_void__MmsDataAccessError", "ReadAccessHandler|enum MmsDataAccessError (*)(sLogicalDevice *,sLogicalNode *,sDataObject *,enum eFunctionalConstraint,sClientConnection *,void *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_sMmsConnection_p_void__void = {"_p_f_p_sMmsConnection_p_void__void", "MmsConnectionLostHandler|void (*)(sMmsConnection *,void *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_sMmsConnection_p_void_enum_MmsConnectionState__void = {"_p_f_p_sMmsConnection_p_void_enum_MmsConnectionState__void", "MmsConnectionStateChangedHandler|void (*)(sMmsConnection *,void *,enum MmsConnectionState)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_sMmsGooseControlBlock_int_p_void__void = {"_p_f_p_sMmsGooseControlBlock_int_p_void__void", "GoCBEventHandler|void (*)(sMmsGooseControlBlock *,int,void *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_sSVControlBlock_int_p_void__void = {"_p_f_p_sSVControlBlock_int_p_void__void", "SVCBEventHandler|void (*)(sSVControlBlock *,int,void *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_void__void = {"_p_f_p_void__void", "LinkedListValueDeleteFunction|void (*)(void *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_void_enum_MmsError_bool__void = {"_p_f_p_void_enum_MmsError_bool__void", "MmsConnection_ConcludeAbortHandler|void (*)(void *,enum MmsError,bool)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_void_int_p_unsigned_char_unsigned_int__void = {"_p_f_p_void_int_p_unsigned_char_unsigned_int__void", "MmsFileReadHandler|void (*)(void *,int,unsigned char *,unsigned int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_void_p_char_p_char_p_sMmsValue_bool__void = {"_p_f_p_void_p_char_p_char_p_sMmsValue_bool__void", "MmsInformationReportHandler|void (*)(void *,char *,char *,sMmsValue *,bool)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_void_p_char_unsigned_int_unsigned_long_long__void = {"_p_f_p_void_p_char_unsigned_int_unsigned_long_long__void", "MmsFileDirectoryHandler|void (*)(void *,char *,unsigned int,unsigned long long)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_void_p_sAcseAuthenticationParameter_p_p_void_p_IsoApplicationReference__bool = {"_p_f_p_void_p_sAcseAuthenticationParameter_p_p_void_p_IsoApplicationReference__bool", "AcseAuthenticator|bool (*)(void *,sAcseAuthenticationParameter *,void **,IsoApplicationReference *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_void_p_sClientReport__void = {"_p_f_p_void_p_sClientReport__void", "ReportCallbackFunction|void (*)(void *,sClientReport *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_void_p_sControlObjectClient__void = {"_p_f_p_void_p_sControlObjectClient__void", "CommandTerminationHandler|void (*)(void *,sControlObjectClient *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_void_p_sIedConnection__void = {"_p_f_p_void_p_sIedConnection__void", "IedConnectionClosedHandler|void (*)(void *,sIedConnection *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_void_p_sIedConnection_enum_IedConnectionState__void = {"_p_f_p_void_p_sIedConnection_enum_IedConnectionState__void", "IedConnection_StateChangedHandler|void (*)(void *,sIedConnection *,enum IedConnectionState)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_void_p_sReportControlBlock_p_sClientConnection_enum_IedServer_RCBEventType_p_q_const__char_enum_MmsDataAccessError__void = {"_p_f_p_void_p_sReportControlBlock_p_sClientConnection_enum_IedServer_RCBEventType_p_q_const__char_enum_MmsDataAccessError__void", "IedServer_RCBEventHandler|void (*)(void *,sReportControlBlock *,sClientConnection *,enum IedServer_RCBEventType,char const *,enum MmsDataAccessError)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_void_p_sSettingGroupControlBlock_unsigned_char__void = {"_p_f_p_void_p_sSettingGroupControlBlock_unsigned_char__void", "EditSettingGroupConfirmationHandler|void (*)(void *,sSettingGroupControlBlock *,unsigned char)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_void_p_sSettingGroupControlBlock_unsigned_char_p_sClientConnection__bool = {"_p_f_p_void_p_sSettingGroupControlBlock_unsigned_char_p_sClientConnection__bool", "ActiveSettingGroupChangedHandler|EditSettingGroupChangedHandler|bool (*)(void *,sSettingGroupControlBlock *,unsigned char,sClientConnection *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_void_p_unsigned_char_int_bool__void = {"_p_f_p_void_p_unsigned_char_int_bool__void", "MmsRawMessageHandler|void (*)(void *,unsigned char *,int,bool)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_void_p_unsigned_char_unsigned_int__bool = {"_p_f_p_void_p_unsigned_char_unsigned_int__bool", "IedClientGetFileHandler|bool (*)(void *,unsigned char *,unsigned int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_void_p_void_bool_enum_SelectStateChangedReason__void = {"_p_f_p_void_p_void_bool_enum_SelectStateChangedReason__void", "ControlSelectStateChangedHandler|void (*)(void *,void *,bool,enum SelectStateChangedReason)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_void_p_void_p_sMmsValue_bool__ControlHandlerResult = {"_p_f_p_void_p_void_p_sMmsValue_bool__ControlHandlerResult", "ControlHandler|enum ControlHandlerResult (*)(void *,void *,sMmsValue *,bool)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_void_p_void_p_sMmsValue_bool_bool__CheckHandlerResult = {"_p_f_p_void_p_void_p_sMmsValue_bool_bool__CheckHandlerResult", "ControlPerformCheckHandler|enum CheckHandlerResult (*)(void *,void *,sMmsValue *,bool,bool)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_void_p_void_p_sMmsValue_bool_bool__ControlHandlerResult = {"_p_f_p_void_p_void_p_sMmsValue_bool_bool__ControlHandlerResult", "ControlWaitForExecutionHandler|enum ControlHandlerResult (*)(void *,void *,sMmsValue *,bool,bool)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_void_enum_IedClientError__void = {"_p_f_unsigned_int_p_void_enum_IedClientError__void", "IedConnection_GenericServiceHandler|void (*)(unsigned int,void *,enum IedClientError)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_void_enum_IedClientError_enum_ControlActionType_bool__void = {"_p_f_unsigned_int_p_void_enum_IedClientError_enum_ControlActionType_bool__void", "ControlObjectClient_ControlActionHandler|void (*)(unsigned int,void *,enum IedClientError,enum ControlActionType,bool)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_void_enum_IedClientError_p_MmsVariableSpecification__void = {"_p_f_unsigned_int_p_void_enum_IedClientError_p_MmsVariableSpecification__void", "IedConnection_GetVariableSpecificationHandler|void (*)(unsigned int,void *,enum IedClientError,MmsVariableSpecification *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_void_enum_IedClientError_p_char_unsigned_int_unsigned_long_long_bool__bool = {"_p_f_unsigned_int_p_void_enum_IedClientError_p_char_unsigned_int_unsigned_long_long_bool__bool", "IedConnection_FileDirectoryEntryHandler|bool (*)(unsigned int,void *,enum IedClientError,char *,unsigned int,unsigned long long,bool)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_void_enum_IedClientError_p_sClientDataSet__void = {"_p_f_unsigned_int_p_void_enum_IedClientError_p_sClientDataSet__void", "IedConnection_ReadDataSetHandler|void (*)(unsigned int,void *,enum IedClientError,sClientDataSet *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_void_enum_IedClientError_p_sClientReportControlBlock__void = {"_p_f_unsigned_int_p_void_enum_IedClientError_p_sClientReportControlBlock__void", "IedConnection_GetRCBValuesHandler|void (*)(unsigned int,void *,enum IedClientError,sClientReportControlBlock *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_void_enum_IedClientError_p_sLinkedList__void = {"_p_f_unsigned_int_p_void_enum_IedClientError_p_sLinkedList__void", "IedConnection_WriteDataSetHandler|void (*)(unsigned int,void *,enum IedClientError,sLinkedList *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_void_enum_IedClientError_p_sLinkedList_bool__void = {"_p_f_unsigned_int_p_void_enum_IedClientError_p_sLinkedList_bool__void", "IedConnection_GetDataSetDirectoryHandler|IedConnection_GetNameListHandler|IedConnection_QueryLogHandler|void (*)(unsigned int,void *,enum IedClientError,sLinkedList *,bool)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_void_enum_IedClientError_p_sMmsValue__void = {"_p_f_unsigned_int_p_void_enum_IedClientError_p_sMmsValue__void", "IedConnection_ReadObjectHandler|void (*)(unsigned int,void *,enum IedClientError,sMmsValue *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_void_enum_IedClientError_unsigned_int_p_unsigned_char_unsigned_int_bool__bool = {"_p_f_unsigned_int_p_void_enum_IedClientError_unsigned_int_p_unsigned_char_unsigned_int_bool__bool", "IedConnection_GetFileAsyncHandler|bool (*)(unsigned int,void *,enum IedClientError,unsigned int,unsigned char *,unsigned int,bool)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_void_enum_MmsError_bool__void = {"_p_f_unsigned_int_p_void_enum_MmsError_bool__void", "MmsConnection_GenericServiceHandler|void (*)(unsigned int,void *,enum MmsError,bool)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_void_enum_MmsError_enum_MmsDataAccessError__void = {"_p_f_unsigned_int_p_void_enum_MmsError_enum_MmsDataAccessError__void", "MmsConnection_WriteVariableHandler|void (*)(unsigned int,void *,enum MmsError,enum MmsDataAccessError)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_void_enum_MmsError_int_int__void = {"_p_f_unsigned_int_p_void_enum_MmsError_int_int__void", "MmsConnection_GetServerStatusHandler|void (*)(unsigned int,void *,enum MmsError,int,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_void_enum_MmsError_int_p_unsigned_char_unsigned_int_bool__void = {"_p_f_unsigned_int_p_void_enum_MmsError_int_p_unsigned_char_unsigned_int_bool__void", "MmsConnection_FileReadHandler|void (*)(unsigned int,void *,enum MmsError,int,unsigned char *,unsigned int,bool)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_void_enum_MmsError_int_unsigned_int_unsigned_long_long__void = {"_p_f_unsigned_int_p_void_enum_MmsError_int_unsigned_int_unsigned_long_long__void", "MmsConnection_FileOpenHandler|void (*)(unsigned int,void *,enum MmsError,int,unsigned int,unsigned long long)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_void_enum_MmsError_p_MmsVariableSpecification__void = {"_p_f_unsigned_int_p_void_enum_MmsError_p_MmsVariableSpecification__void", "MmsConnection_GetVariableAccessAttributesHandler|void (*)(unsigned int,void *,enum MmsError,MmsVariableSpecification *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_void_enum_MmsError_p_char_p_char_p_char__void = {"_p_f_unsigned_int_p_void_enum_MmsError_p_char_p_char_p_char__void", "MmsConnection_IdentifyHandler|void (*)(unsigned int,void *,enum MmsError,char *,char *,char *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_void_enum_MmsError_p_char_unsigned_int_unsigned_long_long_bool__void = {"_p_f_unsigned_int_p_void_enum_MmsError_p_char_unsigned_int_unsigned_long_long_bool__void", "MmsConnection_FileDirectoryHandler|void (*)(unsigned int,void *,enum MmsError,char *,unsigned int,unsigned long long,bool)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_void_enum_MmsError_p_sLinkedList__void = {"_p_f_unsigned_int_p_void_enum_MmsError_p_sLinkedList__void", "MmsConnection_WriteMultipleVariablesHandler|void (*)(unsigned int,void *,enum MmsError,sLinkedList *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_void_enum_MmsError_p_sLinkedList_bool__void = {"_p_f_unsigned_int_p_void_enum_MmsError_p_sLinkedList_bool__void", "MmsConnection_GetNameListHandler|MmsConnection_ReadJournalHandler|MmsConnection_ReadNVLDirectoryHandler|void (*)(unsigned int,void *,enum MmsError,sLinkedList *,bool)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_void_enum_MmsError_p_sMmsValue__void = {"_p_f_unsigned_int_p_void_enum_MmsError_p_sMmsValue__void", "MmsConnection_ReadVariableHandler|void (*)(unsigned int,void *,enum MmsError,sMmsValue *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_void__void = {"_p_f_void__void", "void (*)(void)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "ReasonForInclusion *|int32_t *|int_fast16_t *|int_fast32_t *|int_least32_t *|intptr_t *|int *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long_long = {"_p_long_long", "int64_t *|int_fast64_t *|int_least64_t *|intmax_t *|long long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_sLinkedList = {"_p_p_sLinkedList", "LinkedList *|sLinkedList **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sAcseAuthenticationParameter = {"_p_sAcseAuthenticationParameter", "AcseAuthenticationParameter|sAcseAuthenticationParameter *|p_sAcseAuthenticationParameter", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sClientConnection = {"_p_sClientConnection", "ClientConnection|sClientConnection *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sClientDataSet = {"_p_sClientDataSet", "ClientDataSet|sClientDataSet *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sClientGooseControlBlock = {"_p_sClientGooseControlBlock", "ClientGooseControlBlock|sClientGooseControlBlock *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sClientReport = {"_p_sClientReport", "ClientReport|sClientReport *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sClientReportControlBlock = {"_p_sClientReportControlBlock", "ClientReportControlBlock|sClientReportControlBlock *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sClientSVControlBlock = {"_p_sClientSVControlBlock", "ClientSVControlBlock|sClientSVControlBlock *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sCommParameters = {"_p_sCommParameters", "CommParameters *|p_sCommParameters|sCommParameters *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sControlObjectClient = {"_p_sControlObjectClient", "ControlObjectClient|sControlObjectClient *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sDataAttribute = {"_p_sDataAttribute", "DataAttribute *|p_sDataAttribute|sDataAttribute *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sDataObject = {"_p_sDataObject", "DataObject *|sDataObject *|p_sDataObject", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sDataSet = {"_p_sDataSet", "DataSet *|sDataSet *|p_sDataSet", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sDataSetEntry = {"_p_sDataSetEntry", "DataSetEntry *|p_sDataSetEntry|sDataSetEntry *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sFileDirectoryEntry = {"_p_sFileDirectoryEntry", "FileDirectoryEntry|sFileDirectoryEntry *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sGSEControlBlock = {"_p_sGSEControlBlock", "GSEControlBlock *|p_sGSEControlBlock|sGSEControlBlock *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sGoosePublisher = {"_p_sGoosePublisher", "GoosePublisher|sGoosePublisher *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sGooseReceiver = {"_p_sGooseReceiver", "GooseReceiver|sGooseReceiver *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sGooseSubscriber = {"_p_sGooseSubscriber", "GooseSubscriber|sGooseSubscriber *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sIedConnection = {"_p_sIedConnection", "IedConnection|sIedConnection *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sIedModel = {"_p_sIedModel", "IedModel *|p_sIedModel|sIedModel *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sIedServer = {"_p_sIedServer", "IedServer|sIedServer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sIedServerConfig = {"_p_sIedServerConfig", "IedServerConfig|p_sIedServerConfig|sIedServerConfig *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sIsoConnectionParameters = {"_p_sIsoConnectionParameters", "IsoConnectionParameters|p_sIsoConnectionParameters|sIsoConnectionParameters *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sLinkedList = {"_p_sLinkedList", "LinkedList|p_sLinkedList|sLinkedList *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sLog = {"_p_sLog", "Log *|p_sLog|sLog *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sLogControlBlock = {"_p_sLogControlBlock", "LogControlBlock *|p_sLogControlBlock|sLogControlBlock *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sLogicalDevice = {"_p_sLogicalDevice", "LogicalDevice *|p_sLogicalDevice|sLogicalDevice *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sLogicalNode = {"_p_sLogicalNode", "LogicalNode *|p_sLogicalNode|sLogicalNode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sMmsAccessSpecifier = {"_p_sMmsAccessSpecifier", "MmsAccessSpecifier *|sMmsAccessSpecifier *|p_sMmsAccessSpecifier", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sMmsConnection = {"_p_sMmsConnection", "MmsConnection|sMmsConnection *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sMmsConnectionParameters = {"_p_sMmsConnectionParameters", "MmsConnectionParameters *|p_sMmsConnectionParameters|sMmsConnectionParameters *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sMmsDomain = {"_p_sMmsDomain", "MmsDomain *|sMmsDomain *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sMmsGooseControlBlock = {"_p_sMmsGooseControlBlock", "MmsGooseControlBlock|sMmsGooseControlBlock *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sMmsJournalEntry = {"_p_sMmsJournalEntry", "MmsJournalEntry|sMmsJournalEntry *|p_sMmsJournalEntry", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sMmsJournalVariable = {"_p_sMmsJournalVariable", "MmsJournalVariable|p_sMmsJournalVariable|sMmsJournalVariable *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sMmsValue = {"_p_sMmsValue", "MmsValue *|sMmsValue *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sModelNode = {"_p_sModelNode", "ModelNode *|p_sModelNode|sModelNode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sReportControlBlock = {"_p_sReportControlBlock", "ReportControlBlock *|p_sReportControlBlock|sReportControlBlock *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sSVControlBlock = {"_p_sSVControlBlock", "SVControlBlock *|sSVControlBlock *|p_sSVControlBlock", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sSettingGroupControlBlock = {"_p_sSettingGroupControlBlock", "SettingGroupControlBlock *|p_sSettingGroupControlBlock|sSettingGroupControlBlock *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_short = {"_p_short", "int16_t *|int_least16_t *|short *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_signed_char = {"_p_signed_char", "int8_t *|int_fast8_t *|int_least8_t *|signed char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "uint8_t *|uint_fast8_t *|uint_least8_t *|unsigned char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "uint32_t *|uint_fast16_t *|uint_fast32_t *|uint_least32_t *|uintptr_t *|unsigned int *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long_long = {"_p_unsigned_long_long", "msSinceEpoch *|nsSinceEpoch *|uint64_t *|uint_fast64_t *|uint_least64_t *|uintmax_t *|unsigned long long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_short = {"_p_unsigned_short", "Quality *|Validity *|uint16_t *|uint_least16_t *|unsigned short *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_void = {"_p_void", "void *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_ACSIClass,
  &_swigt__p_AccessPolicy,
  &_swigt__p_AcseAuthenticationMechanism,
  &_swigt__p_CheckHandlerResult,
  &_swigt__p_ControlActionType,
  &_swigt__p_ControlAddCause,
  &_swigt__p_ControlHandlerResult,
  &_swigt__p_ControlLastApplError,
  &_swigt__p_ControlModel,
  &_swigt__p_DataAttributeType,
  &_swigt__p_Dbpos,
  &_swigt__p_EthernetSocket,
  &_swigt__p_FileHandle,
  &_swigt__p_GooseParseError,
  &_swigt__p_IedClientError,
  &_swigt__p_IedConnectionState,
  &_swigt__p_IedServer_RCBEventType,
  &_swigt__p_IsoApplicationReference,
  &_swigt__p_ItuObjectIdentifier,
  &_swigt__p_LastApplError,
  &_swigt__p_LogStorage,
  &_swigt__p_MmsConnectionState,
  &_swigt__p_MmsDataAccessError,
  &_swigt__p_MmsError,
  &_swigt__p_MmsServer,
  &_swigt__p_MmsServerIdentity,
  &_swigt__p_MmsType,
  &_swigt__p_MmsVariableAccessSpecification,
  &_swigt__p_MmsVariableSpecification,
  &_swigt__p_ModelNodeType,
  &_swigt__p_PSelector,
  &_swigt__p_PhyComAddress,
  &_swigt__p_SSelector,
  &_swigt__p_SelectStateChangedReason,
  &_swigt__p_TLSConfiguration,
  &_swigt__p_TSelector,
  &_swigt__p_Timestamp,
  &_swigt__p_bool,
  &_swigt__p_char,
  &_swigt__p_eFunctionalConstraint,
  &_swigt__p_f_p_sDataAttribute_p_sMmsValue_p_sClientConnection_p_void__MmsDataAccessError,
  &_swigt__p_f_p_sGooseSubscriber_p_void__void,
  &_swigt__p_f_p_sIedServer_p_sClientConnection_bool_p_void__void,
  &_swigt__p_f_p_sLogicalDevice_p_sLogicalNode_p_sDataObject_enum_eFunctionalConstraint_p_sClientConnection_p_void__MmsDataAccessError,
  &_swigt__p_f_p_sMmsConnection_p_void__void,
  &_swigt__p_f_p_sMmsConnection_p_void_enum_MmsConnectionState__void,
  &_swigt__p_f_p_sMmsGooseControlBlock_int_p_void__void,
  &_swigt__p_f_p_sSVControlBlock_int_p_void__void,
  &_swigt__p_f_p_void__void,
  &_swigt__p_f_p_void_enum_MmsError_bool__void,
  &_swigt__p_f_p_void_int_p_unsigned_char_unsigned_int__void,
  &_swigt__p_f_p_void_p_char_p_char_p_sMmsValue_bool__void,
  &_swigt__p_f_p_void_p_char_unsigned_int_unsigned_long_long__void,
  &_swigt__p_f_p_void_p_sAcseAuthenticationParameter_p_p_void_p_IsoApplicationReference__bool,
  &_swigt__p_f_p_void_p_sClientReport__void,
  &_swigt__p_f_p_void_p_sControlObjectClient__void,
  &_swigt__p_f_p_void_p_sIedConnection__void,
  &_swigt__p_f_p_void_p_sIedConnection_enum_IedConnectionState__void,
  &_swigt__p_f_p_void_p_sReportControlBlock_p_sClientConnection_enum_IedServer_RCBEventType_p_q_const__char_enum_MmsDataAccessError__void,
  &_swigt__p_f_p_void_p_sSettingGroupControlBlock_unsigned_char__void,
  &_swigt__p_f_p_void_p_sSettingGroupControlBlock_unsigned_char_p_sClientConnection__bool,
  &_swigt__p_f_p_void_p_unsigned_char_int_bool__void,
  &_swigt__p_f_p_void_p_unsigned_char_unsigned_int__bool,
  &_swigt__p_f_p_void_p_void_bool_enum_SelectStateChangedReason__void,
  &_swigt__p_f_p_void_p_void_p_sMmsValue_bool__ControlHandlerResult,
  &_swigt__p_f_p_void_p_void_p_sMmsValue_bool_bool__CheckHandlerResult,
  &_swigt__p_f_p_void_p_void_p_sMmsValue_bool_bool__ControlHandlerResult,
  &_swigt__p_f_unsigned_int_p_void_enum_IedClientError__void,
  &_swigt__p_f_unsigned_int_p_void_enum_IedClientError_enum_ControlActionType_bool__void,
  &_swigt__p_f_unsigned_int_p_void_enum_IedClientError_p_MmsVariableSpecification__void,
  &_swigt__p_f_unsigned_int_p_void_enum_IedClientError_p_char_unsigned_int_unsigned_long_long_bool__bool,
  &_swigt__p_f_unsigned_int_p_void_enum_IedClientError_p_sClientDataSet__void,
  &_swigt__p_f_unsigned_int_p_void_enum_IedClientError_p_sClientReportControlBlock__void,
  &_swigt__p_f_unsigned_int_p_void_enum_IedClientError_p_sLinkedList__void,
  &_swigt__p_f_unsigned_int_p_void_enum_IedClientError_p_sLinkedList_bool__void,
  &_swigt__p_f_unsigned_int_p_void_enum_IedClientError_p_sMmsValue__void,
  &_swigt__p_f_unsigned_int_p_void_enum_IedClientError_unsigned_int_p_unsigned_char_unsigned_int_bool__bool,
  &_swigt__p_f_unsigned_int_p_void_enum_MmsError_bool__void,
  &_swigt__p_f_unsigned_int_p_void_enum_MmsError_enum_MmsDataAccessError__void,
  &_swigt__p_f_unsigned_int_p_void_enum_MmsError_int_int__void,
  &_swigt__p_f_unsigned_int_p_void_enum_MmsError_int_p_unsigned_char_unsigned_int_bool__void,
  &_swigt__p_f_unsigned_int_p_void_enum_MmsError_int_unsigned_int_unsigned_long_long__void,
  &_swigt__p_f_unsigned_int_p_void_enum_MmsError_p_MmsVariableSpecification__void,
  &_swigt__p_f_unsigned_int_p_void_enum_MmsError_p_char_p_char_p_char__void,
  &_swigt__p_f_unsigned_int_p_void_enum_MmsError_p_char_unsigned_int_unsigned_long_long_bool__void,
  &_swigt__p_f_unsigned_int_p_void_enum_MmsError_p_sLinkedList__void,
  &_swigt__p_f_unsigned_int_p_void_enum_MmsError_p_sLinkedList_bool__void,
  &_swigt__p_f_unsigned_int_p_void_enum_MmsError_p_sMmsValue__void,
  &_swigt__p_f_void__void,
  &_swigt__p_int,
  &_swigt__p_long_long,
  &_swigt__p_p_sLinkedList,
  &_swigt__p_sAcseAuthenticationParameter,
  &_swigt__p_sClientConnection,
  &_swigt__p_sClientDataSet,
  &_swigt__p_sClientGooseControlBlock,
  &_swigt__p_sClientReport,
  &_swigt__p_sClientReportControlBlock,
  &_swigt__p_sClientSVControlBlock,
  &_swigt__p_sCommParameters,
  &_swigt__p_sControlObjectClient,
  &_swigt__p_sDataAttribute,
  &_swigt__p_sDataObject,
  &_swigt__p_sDataSet,
  &_swigt__p_sDataSetEntry,
  &_swigt__p_sFileDirectoryEntry,
  &_swigt__p_sGSEControlBlock,
  &_swigt__p_sGoosePublisher,
  &_swigt__p_sGooseReceiver,
  &_swigt__p_sGooseSubscriber,
  &_swigt__p_sIedConnection,
  &_swigt__p_sIedModel,
  &_swigt__p_sIedServer,
  &_swigt__p_sIedServerConfig,
  &_swigt__p_sIsoConnectionParameters,
  &_swigt__p_sLinkedList,
  &_swigt__p_sLog,
  &_swigt__p_sLogControlBlock,
  &_swigt__p_sLogicalDevice,
  &_swigt__p_sLogicalNode,
  &_swigt__p_sMmsAccessSpecifier,
  &_swigt__p_sMmsConnection,
  &_swigt__p_sMmsConnectionParameters,
  &_swigt__p_sMmsDomain,
  &_swigt__p_sMmsGooseControlBlock,
  &_swigt__p_sMmsJournalEntry,
  &_swigt__p_sMmsJournalVariable,
  &_swigt__p_sMmsValue,
  &_swigt__p_sModelNode,
  &_swigt__p_sReportControlBlock,
  &_swigt__p_sSVControlBlock,
  &_swigt__p_sSettingGroupControlBlock,
  &_swigt__p_short,
  &_swigt__p_signed_char,
  &_swigt__p_unsigned_char,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_long_long,
  &_swigt__p_unsigned_short,
  &_swigt__p_void,
};

static swig_cast_info _swigc__p_ACSIClass[] = {  {&_swigt__p_ACSIClass, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_AccessPolicy[] = {  {&_swigt__p_AccessPolicy, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_AcseAuthenticationMechanism[] = {  {&_swigt__p_AcseAuthenticationMechanism, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CheckHandlerResult[] = {  {&_swigt__p_CheckHandlerResult, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ControlActionType[] = {  {&_swigt__p_ControlActionType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ControlAddCause[] = {  {&_swigt__p_ControlAddCause, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ControlHandlerResult[] = {  {&_swigt__p_ControlHandlerResult, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ControlLastApplError[] = {  {&_swigt__p_ControlLastApplError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ControlModel[] = {  {&_swigt__p_ControlModel, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DataAttributeType[] = {  {&_swigt__p_DataAttributeType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Dbpos[] = {  {&_swigt__p_Dbpos, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_EthernetSocket[] = {  {&_swigt__p_EthernetSocket, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FileHandle[] = {  {&_swigt__p_FileHandle, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GooseParseError[] = {  {&_swigt__p_GooseParseError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IedClientError[] = {  {&_swigt__p_IedClientError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IedConnectionState[] = {  {&_swigt__p_IedConnectionState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IedServer_RCBEventType[] = {  {&_swigt__p_IedServer_RCBEventType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IsoApplicationReference[] = {  {&_swigt__p_IsoApplicationReference, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ItuObjectIdentifier[] = {  {&_swigt__p_ItuObjectIdentifier, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LastApplError[] = {  {&_swigt__p_LastApplError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LogStorage[] = {  {&_swigt__p_LogStorage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MmsConnectionState[] = {  {&_swigt__p_MmsConnectionState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MmsDataAccessError[] = {  {&_swigt__p_MmsDataAccessError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MmsError[] = {  {&_swigt__p_MmsError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MmsServer[] = {  {&_swigt__p_MmsServer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MmsServerIdentity[] = {  {&_swigt__p_MmsServerIdentity, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MmsType[] = {  {&_swigt__p_MmsType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MmsVariableAccessSpecification[] = {  {&_swigt__p_MmsVariableAccessSpecification, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MmsVariableSpecification[] = {  {&_swigt__p_MmsVariableSpecification, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ModelNodeType[] = {  {&_swigt__p_ModelNodeType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PSelector[] = {  {&_swigt__p_PSelector, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PhyComAddress[] = {  {&_swigt__p_PhyComAddress, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SSelector[] = {  {&_swigt__p_SSelector, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SelectStateChangedReason[] = {  {&_swigt__p_SelectStateChangedReason, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TLSConfiguration[] = {  {&_swigt__p_TLSConfiguration, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TSelector[] = {  {&_swigt__p_TSelector, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Timestamp[] = {  {&_swigt__p_Timestamp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_bool[] = {  {&_swigt__p_bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_eFunctionalConstraint[] = {  {&_swigt__p_eFunctionalConstraint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_sDataAttribute_p_sMmsValue_p_sClientConnection_p_void__MmsDataAccessError[] = {  {&_swigt__p_f_p_sDataAttribute_p_sMmsValue_p_sClientConnection_p_void__MmsDataAccessError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_sGooseSubscriber_p_void__void[] = {  {&_swigt__p_f_p_sGooseSubscriber_p_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_sIedServer_p_sClientConnection_bool_p_void__void[] = {  {&_swigt__p_f_p_sIedServer_p_sClientConnection_bool_p_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_sLogicalDevice_p_sLogicalNode_p_sDataObject_enum_eFunctionalConstraint_p_sClientConnection_p_void__MmsDataAccessError[] = {  {&_swigt__p_f_p_sLogicalDevice_p_sLogicalNode_p_sDataObject_enum_eFunctionalConstraint_p_sClientConnection_p_void__MmsDataAccessError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_sMmsConnection_p_void__void[] = {  {&_swigt__p_f_p_sMmsConnection_p_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_sMmsConnection_p_void_enum_MmsConnectionState__void[] = {  {&_swigt__p_f_p_sMmsConnection_p_void_enum_MmsConnectionState__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_sMmsGooseControlBlock_int_p_void__void[] = {  {&_swigt__p_f_p_sMmsGooseControlBlock_int_p_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_sSVControlBlock_int_p_void__void[] = {  {&_swigt__p_f_p_sSVControlBlock_int_p_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_void__void[] = {  {&_swigt__p_f_p_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_void_enum_MmsError_bool__void[] = {  {&_swigt__p_f_p_void_enum_MmsError_bool__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_void_int_p_unsigned_char_unsigned_int__void[] = {  {&_swigt__p_f_p_void_int_p_unsigned_char_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_void_p_char_p_char_p_sMmsValue_bool__void[] = {  {&_swigt__p_f_p_void_p_char_p_char_p_sMmsValue_bool__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_void_p_char_unsigned_int_unsigned_long_long__void[] = {  {&_swigt__p_f_p_void_p_char_unsigned_int_unsigned_long_long__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_void_p_sAcseAuthenticationParameter_p_p_void_p_IsoApplicationReference__bool[] = {  {&_swigt__p_f_p_void_p_sAcseAuthenticationParameter_p_p_void_p_IsoApplicationReference__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_void_p_sClientReport__void[] = {  {&_swigt__p_f_p_void_p_sClientReport__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_void_p_sControlObjectClient__void[] = {  {&_swigt__p_f_p_void_p_sControlObjectClient__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_void_p_sIedConnection__void[] = {  {&_swigt__p_f_p_void_p_sIedConnection__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_void_p_sIedConnection_enum_IedConnectionState__void[] = {  {&_swigt__p_f_p_void_p_sIedConnection_enum_IedConnectionState__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_void_p_sReportControlBlock_p_sClientConnection_enum_IedServer_RCBEventType_p_q_const__char_enum_MmsDataAccessError__void[] = {  {&_swigt__p_f_p_void_p_sReportControlBlock_p_sClientConnection_enum_IedServer_RCBEventType_p_q_const__char_enum_MmsDataAccessError__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_void_p_sSettingGroupControlBlock_unsigned_char__void[] = {  {&_swigt__p_f_p_void_p_sSettingGroupControlBlock_unsigned_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_void_p_sSettingGroupControlBlock_unsigned_char_p_sClientConnection__bool[] = {  {&_swigt__p_f_p_void_p_sSettingGroupControlBlock_unsigned_char_p_sClientConnection__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_void_p_unsigned_char_int_bool__void[] = {  {&_swigt__p_f_p_void_p_unsigned_char_int_bool__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_void_p_unsigned_char_unsigned_int__bool[] = {  {&_swigt__p_f_p_void_p_unsigned_char_unsigned_int__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_void_p_void_bool_enum_SelectStateChangedReason__void[] = {  {&_swigt__p_f_p_void_p_void_bool_enum_SelectStateChangedReason__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_void_p_void_p_sMmsValue_bool__ControlHandlerResult[] = {  {&_swigt__p_f_p_void_p_void_p_sMmsValue_bool__ControlHandlerResult, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_void_p_void_p_sMmsValue_bool_bool__CheckHandlerResult[] = {  {&_swigt__p_f_p_void_p_void_p_sMmsValue_bool_bool__CheckHandlerResult, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_void_p_void_p_sMmsValue_bool_bool__ControlHandlerResult[] = {  {&_swigt__p_f_p_void_p_void_p_sMmsValue_bool_bool__ControlHandlerResult, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_void_enum_IedClientError__void[] = {  {&_swigt__p_f_unsigned_int_p_void_enum_IedClientError__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_void_enum_IedClientError_enum_ControlActionType_bool__void[] = {  {&_swigt__p_f_unsigned_int_p_void_enum_IedClientError_enum_ControlActionType_bool__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_void_enum_IedClientError_p_MmsVariableSpecification__void[] = {  {&_swigt__p_f_unsigned_int_p_void_enum_IedClientError_p_MmsVariableSpecification__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_void_enum_IedClientError_p_char_unsigned_int_unsigned_long_long_bool__bool[] = {  {&_swigt__p_f_unsigned_int_p_void_enum_IedClientError_p_char_unsigned_int_unsigned_long_long_bool__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_void_enum_IedClientError_p_sClientDataSet__void[] = {  {&_swigt__p_f_unsigned_int_p_void_enum_IedClientError_p_sClientDataSet__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_void_enum_IedClientError_p_sClientReportControlBlock__void[] = {  {&_swigt__p_f_unsigned_int_p_void_enum_IedClientError_p_sClientReportControlBlock__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_void_enum_IedClientError_p_sLinkedList__void[] = {  {&_swigt__p_f_unsigned_int_p_void_enum_IedClientError_p_sLinkedList__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_void_enum_IedClientError_p_sLinkedList_bool__void[] = {  {&_swigt__p_f_unsigned_int_p_void_enum_IedClientError_p_sLinkedList_bool__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_void_enum_IedClientError_p_sMmsValue__void[] = {  {&_swigt__p_f_unsigned_int_p_void_enum_IedClientError_p_sMmsValue__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_void_enum_IedClientError_unsigned_int_p_unsigned_char_unsigned_int_bool__bool[] = {  {&_swigt__p_f_unsigned_int_p_void_enum_IedClientError_unsigned_int_p_unsigned_char_unsigned_int_bool__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_void_enum_MmsError_bool__void[] = {  {&_swigt__p_f_unsigned_int_p_void_enum_MmsError_bool__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_void_enum_MmsError_enum_MmsDataAccessError__void[] = {  {&_swigt__p_f_unsigned_int_p_void_enum_MmsError_enum_MmsDataAccessError__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_void_enum_MmsError_int_int__void[] = {  {&_swigt__p_f_unsigned_int_p_void_enum_MmsError_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_void_enum_MmsError_int_p_unsigned_char_unsigned_int_bool__void[] = {  {&_swigt__p_f_unsigned_int_p_void_enum_MmsError_int_p_unsigned_char_unsigned_int_bool__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_void_enum_MmsError_int_unsigned_int_unsigned_long_long__void[] = {  {&_swigt__p_f_unsigned_int_p_void_enum_MmsError_int_unsigned_int_unsigned_long_long__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_void_enum_MmsError_p_MmsVariableSpecification__void[] = {  {&_swigt__p_f_unsigned_int_p_void_enum_MmsError_p_MmsVariableSpecification__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_void_enum_MmsError_p_char_p_char_p_char__void[] = {  {&_swigt__p_f_unsigned_int_p_void_enum_MmsError_p_char_p_char_p_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_void_enum_MmsError_p_char_unsigned_int_unsigned_long_long_bool__void[] = {  {&_swigt__p_f_unsigned_int_p_void_enum_MmsError_p_char_unsigned_int_unsigned_long_long_bool__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_void_enum_MmsError_p_sLinkedList__void[] = {  {&_swigt__p_f_unsigned_int_p_void_enum_MmsError_p_sLinkedList__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_void_enum_MmsError_p_sLinkedList_bool__void[] = {  {&_swigt__p_f_unsigned_int_p_void_enum_MmsError_p_sLinkedList_bool__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_void_enum_MmsError_p_sMmsValue__void[] = {  {&_swigt__p_f_unsigned_int_p_void_enum_MmsError_p_sMmsValue__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_void__void[] = {  {&_swigt__p_f_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long_long[] = {  {&_swigt__p_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_sLinkedList[] = {  {&_swigt__p_p_sLinkedList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sAcseAuthenticationParameter[] = {  {&_swigt__p_sAcseAuthenticationParameter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sClientConnection[] = {  {&_swigt__p_sClientConnection, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sClientDataSet[] = {  {&_swigt__p_sClientDataSet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sClientGooseControlBlock[] = {  {&_swigt__p_sClientGooseControlBlock, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sClientReport[] = {  {&_swigt__p_sClientReport, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sClientReportControlBlock[] = {  {&_swigt__p_sClientReportControlBlock, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sClientSVControlBlock[] = {  {&_swigt__p_sClientSVControlBlock, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sCommParameters[] = {  {&_swigt__p_sCommParameters, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sControlObjectClient[] = {  {&_swigt__p_sControlObjectClient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sDataAttribute[] = {  {&_swigt__p_sDataAttribute, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sDataObject[] = {  {&_swigt__p_sDataObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sDataSet[] = {  {&_swigt__p_sDataSet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sDataSetEntry[] = {  {&_swigt__p_sDataSetEntry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sFileDirectoryEntry[] = {  {&_swigt__p_sFileDirectoryEntry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sGSEControlBlock[] = {  {&_swigt__p_sGSEControlBlock, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sGoosePublisher[] = {  {&_swigt__p_sGoosePublisher, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sGooseReceiver[] = {  {&_swigt__p_sGooseReceiver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sGooseSubscriber[] = {  {&_swigt__p_sGooseSubscriber, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sIedConnection[] = {  {&_swigt__p_sIedConnection, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sIedModel[] = {  {&_swigt__p_sIedModel, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sIedServer[] = {  {&_swigt__p_sIedServer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sIedServerConfig[] = {  {&_swigt__p_sIedServerConfig, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sIsoConnectionParameters[] = {  {&_swigt__p_sIsoConnectionParameters, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sLinkedList[] = {  {&_swigt__p_sLinkedList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sLog[] = {  {&_swigt__p_sLog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sLogControlBlock[] = {  {&_swigt__p_sLogControlBlock, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sLogicalDevice[] = {  {&_swigt__p_sLogicalDevice, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sLogicalNode[] = {  {&_swigt__p_sLogicalNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sMmsAccessSpecifier[] = {  {&_swigt__p_sMmsAccessSpecifier, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sMmsConnection[] = {  {&_swigt__p_sMmsConnection, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sMmsConnectionParameters[] = {  {&_swigt__p_sMmsConnectionParameters, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sMmsDomain[] = {  {&_swigt__p_sMmsDomain, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sMmsGooseControlBlock[] = {  {&_swigt__p_sMmsGooseControlBlock, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sMmsJournalEntry[] = {  {&_swigt__p_sMmsJournalEntry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sMmsJournalVariable[] = {  {&_swigt__p_sMmsJournalVariable, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sMmsValue[] = {  {&_swigt__p_sMmsValue, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sModelNode[] = {  {&_swigt__p_sModelNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sReportControlBlock[] = {  {&_swigt__p_sReportControlBlock, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sSVControlBlock[] = {  {&_swigt__p_sSVControlBlock, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sSettingGroupControlBlock[] = {  {&_swigt__p_sSettingGroupControlBlock, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_short[] = {  {&_swigt__p_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_signed_char[] = {  {&_swigt__p_signed_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long_long[] = {  {&_swigt__p_unsigned_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_short[] = {  {&_swigt__p_unsigned_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_void[] = {  {&_swigt__p_void, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_ACSIClass,
  _swigc__p_AccessPolicy,
  _swigc__p_AcseAuthenticationMechanism,
  _swigc__p_CheckHandlerResult,
  _swigc__p_ControlActionType,
  _swigc__p_ControlAddCause,
  _swigc__p_ControlHandlerResult,
  _swigc__p_ControlLastApplError,
  _swigc__p_ControlModel,
  _swigc__p_DataAttributeType,
  _swigc__p_Dbpos,
  _swigc__p_EthernetSocket,
  _swigc__p_FileHandle,
  _swigc__p_GooseParseError,
  _swigc__p_IedClientError,
  _swigc__p_IedConnectionState,
  _swigc__p_IedServer_RCBEventType,
  _swigc__p_IsoApplicationReference,
  _swigc__p_ItuObjectIdentifier,
  _swigc__p_LastApplError,
  _swigc__p_LogStorage,
  _swigc__p_MmsConnectionState,
  _swigc__p_MmsDataAccessError,
  _swigc__p_MmsError,
  _swigc__p_MmsServer,
  _swigc__p_MmsServerIdentity,
  _swigc__p_MmsType,
  _swigc__p_MmsVariableAccessSpecification,
  _swigc__p_MmsVariableSpecification,
  _swigc__p_ModelNodeType,
  _swigc__p_PSelector,
  _swigc__p_PhyComAddress,
  _swigc__p_SSelector,
  _swigc__p_SelectStateChangedReason,
  _swigc__p_TLSConfiguration,
  _swigc__p_TSelector,
  _swigc__p_Timestamp,
  _swigc__p_bool,
  _swigc__p_char,
  _swigc__p_eFunctionalConstraint,
  _swigc__p_f_p_sDataAttribute_p_sMmsValue_p_sClientConnection_p_void__MmsDataAccessError,
  _swigc__p_f_p_sGooseSubscriber_p_void__void,
  _swigc__p_f_p_sIedServer_p_sClientConnection_bool_p_void__void,
  _swigc__p_f_p_sLogicalDevice_p_sLogicalNode_p_sDataObject_enum_eFunctionalConstraint_p_sClientConnection_p_void__MmsDataAccessError,
  _swigc__p_f_p_sMmsConnection_p_void__void,
  _swigc__p_f_p_sMmsConnection_p_void_enum_MmsConnectionState__void,
  _swigc__p_f_p_sMmsGooseControlBlock_int_p_void__void,
  _swigc__p_f_p_sSVControlBlock_int_p_void__void,
  _swigc__p_f_p_void__void,
  _swigc__p_f_p_void_enum_MmsError_bool__void,
  _swigc__p_f_p_void_int_p_unsigned_char_unsigned_int__void,
  _swigc__p_f_p_void_p_char_p_char_p_sMmsValue_bool__void,
  _swigc__p_f_p_void_p_char_unsigned_int_unsigned_long_long__void,
  _swigc__p_f_p_void_p_sAcseAuthenticationParameter_p_p_void_p_IsoApplicationReference__bool,
  _swigc__p_f_p_void_p_sClientReport__void,
  _swigc__p_f_p_void_p_sControlObjectClient__void,
  _swigc__p_f_p_void_p_sIedConnection__void,
  _swigc__p_f_p_void_p_sIedConnection_enum_IedConnectionState__void,
  _swigc__p_f_p_void_p_sReportControlBlock_p_sClientConnection_enum_IedServer_RCBEventType_p_q_const__char_enum_MmsDataAccessError__void,
  _swigc__p_f_p_void_p_sSettingGroupControlBlock_unsigned_char__void,
  _swigc__p_f_p_void_p_sSettingGroupControlBlock_unsigned_char_p_sClientConnection__bool,
  _swigc__p_f_p_void_p_unsigned_char_int_bool__void,
  _swigc__p_f_p_void_p_unsigned_char_unsigned_int__bool,
  _swigc__p_f_p_void_p_void_bool_enum_SelectStateChangedReason__void,
  _swigc__p_f_p_void_p_void_p_sMmsValue_bool__ControlHandlerResult,
  _swigc__p_f_p_void_p_void_p_sMmsValue_bool_bool__CheckHandlerResult,
  _swigc__p_f_p_void_p_void_p_sMmsValue_bool_bool__ControlHandlerResult,
  _swigc__p_f_unsigned_int_p_void_enum_IedClientError__void,
  _swigc__p_f_unsigned_int_p_void_enum_IedClientError_enum_ControlActionType_bool__void,
  _swigc__p_f_unsigned_int_p_void_enum_IedClientError_p_MmsVariableSpecification__void,
  _swigc__p_f_unsigned_int_p_void_enum_IedClientError_p_char_unsigned_int_unsigned_long_long_bool__bool,
  _swigc__p_f_unsigned_int_p_void_enum_IedClientError_p_sClientDataSet__void,
  _swigc__p_f_unsigned_int_p_void_enum_IedClientError_p_sClientReportControlBlock__void,
  _swigc__p_f_unsigned_int_p_void_enum_IedClientError_p_sLinkedList__void,
  _swigc__p_f_unsigned_int_p_void_enum_IedClientError_p_sLinkedList_bool__void,
  _swigc__p_f_unsigned_int_p_void_enum_IedClientError_p_sMmsValue__void,
  _swigc__p_f_unsigned_int_p_void_enum_IedClientError_unsigned_int_p_unsigned_char_unsigned_int_bool__bool,
  _swigc__p_f_unsigned_int_p_void_enum_MmsError_bool__void,
  _swigc__p_f_unsigned_int_p_void_enum_MmsError_enum_MmsDataAccessError__void,
  _swigc__p_f_unsigned_int_p_void_enum_MmsError_int_int__void,
  _swigc__p_f_unsigned_int_p_void_enum_MmsError_int_p_unsigned_char_unsigned_int_bool__void,
  _swigc__p_f_unsigned_int_p_void_enum_MmsError_int_unsigned_int_unsigned_long_long__void,
  _swigc__p_f_unsigned_int_p_void_enum_MmsError_p_MmsVariableSpecification__void,
  _swigc__p_f_unsigned_int_p_void_enum_MmsError_p_char_p_char_p_char__void,
  _swigc__p_f_unsigned_int_p_void_enum_MmsError_p_char_unsigned_int_unsigned_long_long_bool__void,
  _swigc__p_f_unsigned_int_p_void_enum_MmsError_p_sLinkedList__void,
  _swigc__p_f_unsigned_int_p_void_enum_MmsError_p_sLinkedList_bool__void,
  _swigc__p_f_unsigned_int_p_void_enum_MmsError_p_sMmsValue__void,
  _swigc__p_f_void__void,
  _swigc__p_int,
  _swigc__p_long_long,
  _swigc__p_p_sLinkedList,
  _swigc__p_sAcseAuthenticationParameter,
  _swigc__p_sClientConnection,
  _swigc__p_sClientDataSet,
  _swigc__p_sClientGooseControlBlock,
  _swigc__p_sClientReport,
  _swigc__p_sClientReportControlBlock,
  _swigc__p_sClientSVControlBlock,
  _swigc__p_sCommParameters,
  _swigc__p_sControlObjectClient,
  _swigc__p_sDataAttribute,
  _swigc__p_sDataObject,
  _swigc__p_sDataSet,
  _swigc__p_sDataSetEntry,
  _swigc__p_sFileDirectoryEntry,
  _swigc__p_sGSEControlBlock,
  _swigc__p_sGoosePublisher,
  _swigc__p_sGooseReceiver,
  _swigc__p_sGooseSubscriber,
  _swigc__p_sIedConnection,
  _swigc__p_sIedModel,
  _swigc__p_sIedServer,
  _swigc__p_sIedServerConfig,
  _swigc__p_sIsoConnectionParameters,
  _swigc__p_sLinkedList,
  _swigc__p_sLog,
  _swigc__p_sLogControlBlock,
  _swigc__p_sLogicalDevice,
  _swigc__p_sLogicalNode,
  _swigc__p_sMmsAccessSpecifier,
  _swigc__p_sMmsConnection,
  _swigc__p_sMmsConnectionParameters,
  _swigc__p_sMmsDomain,
  _swigc__p_sMmsGooseControlBlock,
  _swigc__p_sMmsJournalEntry,
  _swigc__p_sMmsJournalVariable,
  _swigc__p_sMmsValue,
  _swigc__p_sModelNode,
  _swigc__p_sReportControlBlock,
  _swigc__p_sSVControlBlock,
  _swigc__p_sSettingGroupControlBlock,
  _swigc__p_short,
  _swigc__p_signed_char,
  _swigc__p_unsigned_char,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_long_long,
  _swigc__p_unsigned_short,
  _swigc__p_void,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */




SWIGRUNTIME void
SWIG_V8_SetModule(v8::Local<v8::Context> context, swig_module_info *swig_module) {
  v8::Local<v8::Object> global_obj = context->Global();
  v8::Local<v8::External> mod = SWIGV8_EXTERNAL_NEW(swig_module);
  assert(!mod.IsEmpty());
  v8::Local<v8::Private> privateKey = v8::Private::ForApi(v8::Isolate::GetCurrent(), SWIGV8_STRING_NEW("swig_module_info_data"));
  global_obj->SetPrivate(context, privateKey, mod);
}

SWIGRUNTIME swig_module_info *
SWIG_V8_GetModule(v8::Local<v8::Context> context) {
  v8::Local<v8::Object> global_obj = context->Global();
  v8::Local<v8::Private> privateKey = v8::Private::ForApi(v8::Isolate::GetCurrent(), SWIGV8_STRING_NEW("swig_module_info_data"));
  v8::Local<v8::Value> moduleinfo;
  if (!global_obj->GetPrivate(context, privateKey).ToLocal(&moduleinfo))
    return 0;

  if (moduleinfo.IsEmpty() || moduleinfo->IsNull() || moduleinfo->IsUndefined())
  {
    // It's not yet loaded
    return 0;
  }

  v8::Local<v8::External> moduleinfo_extern = v8::Local<v8::External>::Cast(moduleinfo);

  if (moduleinfo_extern.IsEmpty() || moduleinfo_extern->IsNull() || moduleinfo_extern->IsUndefined())
  {
    // Something's not right
    return 0;
  }

  void *ptr = moduleinfo_extern->Value();
  assert(ptr);
  swig_module_info *retptr = static_cast<swig_module_info *>(ptr);
  assert(retptr);
  return retptr;
}

#define SWIG_GetModule(clientdata)                SWIG_V8_GetModule(clientdata)
#define SWIG_SetModule(clientdata, pointer)       SWIG_V8_SetModule(clientdata, pointer)
#define SWIG_INIT_CLIENT_DATA_TYPE                v8::Local<v8::Context>


/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic
 * memory is used. Also, since swig_type_info structures store pointers to
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization.
 * The idea is that swig generates all the structures that are needed.
 * The runtime then collects these partially filled structures.
 * The SWIG_InitializeModule function takes these initial arrays out of
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned statically to an initial
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded.
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif

#ifndef SWIG_INIT_CLIENT_DATA_TYPE
#define SWIG_INIT_CLIENT_DATA_TYPE void *
#endif

SWIGRUNTIME void
SWIG_InitializeModule(SWIG_INIT_CLIENT_DATA_TYPE clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int init;

  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }

  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    iter=module_head;
    do {
      if (iter==&swig_module) {
        /* Our module is already in the list, so there's nothing more to do. */
        return;
      }
      iter=iter->next;
    } while (iter!= module_head);

    /* otherwise we must add our module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }

  /* When multiple interpreters are used, a module could have already been initialized in
     a different interpreter, but not yet have a pointer in this interpreter.
     In this case, we do not want to continue adding types... everything should be
     set up already */
  if (init == 0) return;

  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %lu\n", (unsigned long)swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;

#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %lu %s\n", (unsigned long)i, swig_module.type_initial[i]->name);
#endif

    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
	type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }

    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {

      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
	if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
	if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
	  printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
	  cast->type = ret;
	  ret = 0;
	} else {
	  /* Check for casting already in the list */
	  swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
	  if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
	  if (!ocast) ret = 0;
	}
      }

      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
	printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;

#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %lu %s\n", (unsigned long)i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
  printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;

  if (init_run) return;
  init_run = 1;

  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
            SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{ /* c-mode */
#endif
}
#endif


#if !defined(NODE_MODULE_VERSION) || (NODE_MODULE_VERSION < 12)
// Note: 'extern "C"'' disables name mangling which makes it easier to load the symbol manually
extern "C" void SWIGV8_INIT (SWIGV8_OBJECT exports_obj)
#elif (NODE_MODULE_VERSION < 64)
void SWIGV8_INIT (SWIGV8_OBJECT exports_obj, SWIGV8_VALUE /*module*/, void*)
#else
void SWIGV8_INIT (SWIGV8_OBJECT exports_obj, SWIGV8_VALUE /*module*/, v8::Local<v8::Context> context, void*)
#endif
{
#if !defined(NODE_MODULE_VERSION) || NODE_MODULE_VERSION < 64
  v8::Local<v8::Context> context = SWIGV8_CURRENT_CONTEXT();
#endif

  SWIG_InitializeModule(context);


  // a class template for creating proxies of undefined types
  SWIGV8_SET_CLASS_TEMPL(SWIGV8_SWIGTYPE_Proxy_class_templ, SWIGV8_CreateClassTemplate("SwigProxy"));

  /* create objects for namespaces */
  

  /* create class templates */
  /* Name: _exports_LastApplError, Type: p_LastApplError, Dtor: _wrap_delete_LastApplError */
SWIGV8_FUNCTION_TEMPLATE _exports_LastApplError_class = SWIGV8_CreateClassTemplate("_exports_LastApplError");
SWIGV8_SET_CLASS_TEMPL(_exports_LastApplError_clientData.class_templ, _exports_LastApplError_class);
_exports_LastApplError_clientData.dtor = _wrap_delete_LastApplError;
if (SWIGTYPE_p_LastApplError->clientdata == 0) {
  SWIGTYPE_p_LastApplError->clientdata = &_exports_LastApplError_clientData;
}
/* Name: _exports_sAcseAuthenticationParameter, Type: p_sAcseAuthenticationParameter, Dtor: _wrap_delete_sAcseAuthenticationParameter */
SWIGV8_FUNCTION_TEMPLATE _exports_sAcseAuthenticationParameter_class = SWIGV8_CreateClassTemplate("_exports_sAcseAuthenticationParameter");
SWIGV8_SET_CLASS_TEMPL(_exports_sAcseAuthenticationParameter_clientData.class_templ, _exports_sAcseAuthenticationParameter_class);
_exports_sAcseAuthenticationParameter_clientData.dtor = _wrap_delete_sAcseAuthenticationParameter;
if (SWIGTYPE_p_sAcseAuthenticationParameter->clientdata == 0) {
  SWIGTYPE_p_sAcseAuthenticationParameter->clientdata = &_exports_sAcseAuthenticationParameter_clientData;
}
/* Name: _exports_TSelector, Type: p_TSelector, Dtor: _wrap_delete_TSelector */
SWIGV8_FUNCTION_TEMPLATE _exports_TSelector_class = SWIGV8_CreateClassTemplate("_exports_TSelector");
SWIGV8_SET_CLASS_TEMPL(_exports_TSelector_clientData.class_templ, _exports_TSelector_class);
_exports_TSelector_clientData.dtor = _wrap_delete_TSelector;
if (SWIGTYPE_p_TSelector->clientdata == 0) {
  SWIGTYPE_p_TSelector->clientdata = &_exports_TSelector_clientData;
}
/* Name: _exports_SSelector, Type: p_SSelector, Dtor: _wrap_delete_SSelector */
SWIGV8_FUNCTION_TEMPLATE _exports_SSelector_class = SWIGV8_CreateClassTemplate("_exports_SSelector");
SWIGV8_SET_CLASS_TEMPL(_exports_SSelector_clientData.class_templ, _exports_SSelector_class);
_exports_SSelector_clientData.dtor = _wrap_delete_SSelector;
if (SWIGTYPE_p_SSelector->clientdata == 0) {
  SWIGTYPE_p_SSelector->clientdata = &_exports_SSelector_clientData;
}
/* Name: _exports_PSelector, Type: p_PSelector, Dtor: _wrap_delete_PSelector */
SWIGV8_FUNCTION_TEMPLATE _exports_PSelector_class = SWIGV8_CreateClassTemplate("_exports_PSelector");
SWIGV8_SET_CLASS_TEMPL(_exports_PSelector_clientData.class_templ, _exports_PSelector_class);
_exports_PSelector_clientData.dtor = _wrap_delete_PSelector;
if (SWIGTYPE_p_PSelector->clientdata == 0) {
  SWIGTYPE_p_PSelector->clientdata = &_exports_PSelector_clientData;
}
/* Name: _exports_sIsoConnectionParameters, Type: p_sIsoConnectionParameters, Dtor: _wrap_delete_sIsoConnectionParameters */
SWIGV8_FUNCTION_TEMPLATE _exports_sIsoConnectionParameters_class = SWIGV8_CreateClassTemplate("_exports_sIsoConnectionParameters");
SWIGV8_SET_CLASS_TEMPL(_exports_sIsoConnectionParameters_clientData.class_templ, _exports_sIsoConnectionParameters_class);
_exports_sIsoConnectionParameters_clientData.dtor = _wrap_delete_sIsoConnectionParameters;
if (SWIGTYPE_p_sIsoConnectionParameters->clientdata == 0) {
  SWIGTYPE_p_sIsoConnectionParameters->clientdata = &_exports_sIsoConnectionParameters_clientData;
}
/* Name: _exports_MmsConnectionParameters, Type: p_sMmsConnectionParameters, Dtor: _wrap_delete_MmsConnectionParameters */
SWIGV8_FUNCTION_TEMPLATE _exports_MmsConnectionParameters_class = SWIGV8_CreateClassTemplate("_exports_MmsConnectionParameters");
SWIGV8_SET_CLASS_TEMPL(_exports_MmsConnectionParameters_clientData.class_templ, _exports_MmsConnectionParameters_class);
_exports_MmsConnectionParameters_clientData.dtor = _wrap_delete_MmsConnectionParameters;
if (SWIGTYPE_p_sMmsConnectionParameters->clientdata == 0) {
  SWIGTYPE_p_sMmsConnectionParameters->clientdata = &_exports_MmsConnectionParameters_clientData;
}
/* Name: _exports_MmsServerIdentity, Type: p_MmsServerIdentity, Dtor: _wrap_delete_MmsServerIdentity */
SWIGV8_FUNCTION_TEMPLATE _exports_MmsServerIdentity_class = SWIGV8_CreateClassTemplate("_exports_MmsServerIdentity");
SWIGV8_SET_CLASS_TEMPL(_exports_MmsServerIdentity_clientData.class_templ, _exports_MmsServerIdentity_class);
_exports_MmsServerIdentity_clientData.dtor = _wrap_delete_MmsServerIdentity;
if (SWIGTYPE_p_MmsServerIdentity->clientdata == 0) {
  SWIGTYPE_p_MmsServerIdentity->clientdata = &_exports_MmsServerIdentity_clientData;
}
/* Name: _exports_sMmsJournalEntry, Type: p_sMmsJournalEntry, Dtor: _wrap_delete_sMmsJournalEntry */
SWIGV8_FUNCTION_TEMPLATE _exports_sMmsJournalEntry_class = SWIGV8_CreateClassTemplate("_exports_sMmsJournalEntry");
SWIGV8_SET_CLASS_TEMPL(_exports_sMmsJournalEntry_clientData.class_templ, _exports_sMmsJournalEntry_class);
_exports_sMmsJournalEntry_clientData.dtor = _wrap_delete_sMmsJournalEntry;
if (SWIGTYPE_p_sMmsJournalEntry->clientdata == 0) {
  SWIGTYPE_p_sMmsJournalEntry->clientdata = &_exports_sMmsJournalEntry_clientData;
}
/* Name: _exports_sMmsJournalVariable, Type: p_sMmsJournalVariable, Dtor: _wrap_delete_sMmsJournalVariable */
SWIGV8_FUNCTION_TEMPLATE _exports_sMmsJournalVariable_class = SWIGV8_CreateClassTemplate("_exports_sMmsJournalVariable");
SWIGV8_SET_CLASS_TEMPL(_exports_sMmsJournalVariable_clientData.class_templ, _exports_sMmsJournalVariable_class);
_exports_sMmsJournalVariable_clientData.dtor = _wrap_delete_sMmsJournalVariable;
if (SWIGTYPE_p_sMmsJournalVariable->clientdata == 0) {
  SWIGTYPE_p_sMmsJournalVariable->clientdata = &_exports_sMmsJournalVariable_clientData;
}
/* Name: _exports_PhyComAddress, Type: p_PhyComAddress, Dtor: _wrap_delete_PhyComAddress */
SWIGV8_FUNCTION_TEMPLATE _exports_PhyComAddress_class = SWIGV8_CreateClassTemplate("_exports_PhyComAddress");
SWIGV8_SET_CLASS_TEMPL(_exports_PhyComAddress_clientData.class_templ, _exports_PhyComAddress_class);
_exports_PhyComAddress_clientData.dtor = _wrap_delete_PhyComAddress;
if (SWIGTYPE_p_PhyComAddress->clientdata == 0) {
  SWIGTYPE_p_PhyComAddress->clientdata = &_exports_PhyComAddress_clientData;
}
/* Name: _exports_Timestamp, Type: p_Timestamp, Dtor: _wrap_delete_Timestamp */
SWIGV8_FUNCTION_TEMPLATE _exports_Timestamp_class = SWIGV8_CreateClassTemplate("_exports_Timestamp");
SWIGV8_SET_CLASS_TEMPL(_exports_Timestamp_clientData.class_templ, _exports_Timestamp_class);
_exports_Timestamp_clientData.dtor = _wrap_delete_Timestamp;
if (SWIGTYPE_p_Timestamp->clientdata == 0) {
  SWIGTYPE_p_Timestamp->clientdata = &_exports_Timestamp_clientData;
}
/* Name: _exports_MmsAccessSpecifier, Type: p_sMmsAccessSpecifier, Dtor: _wrap_delete_MmsAccessSpecifier */
SWIGV8_FUNCTION_TEMPLATE _exports_MmsAccessSpecifier_class = SWIGV8_CreateClassTemplate("_exports_MmsAccessSpecifier");
SWIGV8_SET_CLASS_TEMPL(_exports_MmsAccessSpecifier_clientData.class_templ, _exports_MmsAccessSpecifier_class);
_exports_MmsAccessSpecifier_clientData.dtor = _wrap_delete_MmsAccessSpecifier;
if (SWIGTYPE_p_sMmsAccessSpecifier->clientdata == 0) {
  SWIGTYPE_p_sMmsAccessSpecifier->clientdata = &_exports_MmsAccessSpecifier_clientData;
}
/* Name: _exports_MmsVariableAccessSpecification, Type: p_MmsVariableAccessSpecification, Dtor: _wrap_delete_MmsVariableAccessSpecification */
SWIGV8_FUNCTION_TEMPLATE _exports_MmsVariableAccessSpecification_class = SWIGV8_CreateClassTemplate("_exports_MmsVariableAccessSpecification");
SWIGV8_SET_CLASS_TEMPL(_exports_MmsVariableAccessSpecification_clientData.class_templ, _exports_MmsVariableAccessSpecification_class);
_exports_MmsVariableAccessSpecification_clientData.dtor = _wrap_delete_MmsVariableAccessSpecification;
if (SWIGTYPE_p_MmsVariableAccessSpecification->clientdata == 0) {
  SWIGTYPE_p_MmsVariableAccessSpecification->clientdata = &_exports_MmsVariableAccessSpecification_clientData;
}
/* Name: _exports_ItuObjectIdentifier, Type: p_ItuObjectIdentifier, Dtor: _wrap_delete_ItuObjectIdentifier */
SWIGV8_FUNCTION_TEMPLATE _exports_ItuObjectIdentifier_class = SWIGV8_CreateClassTemplate("_exports_ItuObjectIdentifier");
SWIGV8_SET_CLASS_TEMPL(_exports_ItuObjectIdentifier_clientData.class_templ, _exports_ItuObjectIdentifier_class);
_exports_ItuObjectIdentifier_clientData.dtor = _wrap_delete_ItuObjectIdentifier;
if (SWIGTYPE_p_ItuObjectIdentifier->clientdata == 0) {
  SWIGTYPE_p_ItuObjectIdentifier->clientdata = &_exports_ItuObjectIdentifier_clientData;
}
/* Name: _exports_IsoApplicationReference, Type: p_IsoApplicationReference, Dtor: _wrap_delete_IsoApplicationReference */
SWIGV8_FUNCTION_TEMPLATE _exports_IsoApplicationReference_class = SWIGV8_CreateClassTemplate("_exports_IsoApplicationReference");
SWIGV8_SET_CLASS_TEMPL(_exports_IsoApplicationReference_clientData.class_templ, _exports_IsoApplicationReference_class);
_exports_IsoApplicationReference_clientData.dtor = _wrap_delete_IsoApplicationReference;
if (SWIGTYPE_p_IsoApplicationReference->clientdata == 0) {
  SWIGTYPE_p_IsoApplicationReference->clientdata = &_exports_IsoApplicationReference_clientData;
}
/* Name: _exports_sIedModel, Type: p_sIedModel, Dtor: _wrap_delete_sIedModel */
SWIGV8_FUNCTION_TEMPLATE _exports_sIedModel_class = SWIGV8_CreateClassTemplate("_exports_sIedModel");
SWIGV8_SET_CLASS_TEMPL(_exports_sIedModel_clientData.class_templ, _exports_sIedModel_class);
_exports_sIedModel_clientData.dtor = _wrap_delete_sIedModel;
if (SWIGTYPE_p_sIedModel->clientdata == 0) {
  SWIGTYPE_p_sIedModel->clientdata = &_exports_sIedModel_clientData;
}
/* Name: _exports_sLogicalDevice, Type: p_sLogicalDevice, Dtor: _wrap_delete_sLogicalDevice */
SWIGV8_FUNCTION_TEMPLATE _exports_sLogicalDevice_class = SWIGV8_CreateClassTemplate("_exports_sLogicalDevice");
SWIGV8_SET_CLASS_TEMPL(_exports_sLogicalDevice_clientData.class_templ, _exports_sLogicalDevice_class);
_exports_sLogicalDevice_clientData.dtor = _wrap_delete_sLogicalDevice;
if (SWIGTYPE_p_sLogicalDevice->clientdata == 0) {
  SWIGTYPE_p_sLogicalDevice->clientdata = &_exports_sLogicalDevice_clientData;
}
/* Name: _exports_sModelNode, Type: p_sModelNode, Dtor: _wrap_delete_sModelNode */
SWIGV8_FUNCTION_TEMPLATE _exports_sModelNode_class = SWIGV8_CreateClassTemplate("_exports_sModelNode");
SWIGV8_SET_CLASS_TEMPL(_exports_sModelNode_clientData.class_templ, _exports_sModelNode_class);
_exports_sModelNode_clientData.dtor = _wrap_delete_sModelNode;
if (SWIGTYPE_p_sModelNode->clientdata == 0) {
  SWIGTYPE_p_sModelNode->clientdata = &_exports_sModelNode_clientData;
}
/* Name: _exports_sLogicalNode, Type: p_sLogicalNode, Dtor: _wrap_delete_sLogicalNode */
SWIGV8_FUNCTION_TEMPLATE _exports_sLogicalNode_class = SWIGV8_CreateClassTemplate("_exports_sLogicalNode");
SWIGV8_SET_CLASS_TEMPL(_exports_sLogicalNode_clientData.class_templ, _exports_sLogicalNode_class);
_exports_sLogicalNode_clientData.dtor = _wrap_delete_sLogicalNode;
if (SWIGTYPE_p_sLogicalNode->clientdata == 0) {
  SWIGTYPE_p_sLogicalNode->clientdata = &_exports_sLogicalNode_clientData;
}
/* Name: _exports_sDataObject, Type: p_sDataObject, Dtor: _wrap_delete_sDataObject */
SWIGV8_FUNCTION_TEMPLATE _exports_sDataObject_class = SWIGV8_CreateClassTemplate("_exports_sDataObject");
SWIGV8_SET_CLASS_TEMPL(_exports_sDataObject_clientData.class_templ, _exports_sDataObject_class);
_exports_sDataObject_clientData.dtor = _wrap_delete_sDataObject;
if (SWIGTYPE_p_sDataObject->clientdata == 0) {
  SWIGTYPE_p_sDataObject->clientdata = &_exports_sDataObject_clientData;
}
/* Name: _exports_sDataAttribute, Type: p_sDataAttribute, Dtor: _wrap_delete_sDataAttribute */
SWIGV8_FUNCTION_TEMPLATE _exports_sDataAttribute_class = SWIGV8_CreateClassTemplate("_exports_sDataAttribute");
SWIGV8_SET_CLASS_TEMPL(_exports_sDataAttribute_clientData.class_templ, _exports_sDataAttribute_class);
_exports_sDataAttribute_clientData.dtor = _wrap_delete_sDataAttribute;
if (SWIGTYPE_p_sDataAttribute->clientdata == 0) {
  SWIGTYPE_p_sDataAttribute->clientdata = &_exports_sDataAttribute_clientData;
}
/* Name: _exports_DataSetEntry, Type: p_sDataSetEntry, Dtor: _wrap_delete_DataSetEntry */
SWIGV8_FUNCTION_TEMPLATE _exports_DataSetEntry_class = SWIGV8_CreateClassTemplate("_exports_DataSetEntry");
SWIGV8_SET_CLASS_TEMPL(_exports_DataSetEntry_clientData.class_templ, _exports_DataSetEntry_class);
_exports_DataSetEntry_clientData.dtor = _wrap_delete_DataSetEntry;
if (SWIGTYPE_p_sDataSetEntry->clientdata == 0) {
  SWIGTYPE_p_sDataSetEntry->clientdata = &_exports_DataSetEntry_clientData;
}
/* Name: _exports_sDataSet, Type: p_sDataSet, Dtor: _wrap_delete_sDataSet */
SWIGV8_FUNCTION_TEMPLATE _exports_sDataSet_class = SWIGV8_CreateClassTemplate("_exports_sDataSet");
SWIGV8_SET_CLASS_TEMPL(_exports_sDataSet_clientData.class_templ, _exports_sDataSet_class);
_exports_sDataSet_clientData.dtor = _wrap_delete_sDataSet;
if (SWIGTYPE_p_sDataSet->clientdata == 0) {
  SWIGTYPE_p_sDataSet->clientdata = &_exports_sDataSet_clientData;
}
/* Name: _exports_sReportControlBlock, Type: p_sReportControlBlock, Dtor: _wrap_delete_sReportControlBlock */
SWIGV8_FUNCTION_TEMPLATE _exports_sReportControlBlock_class = SWIGV8_CreateClassTemplate("_exports_sReportControlBlock");
SWIGV8_SET_CLASS_TEMPL(_exports_sReportControlBlock_clientData.class_templ, _exports_sReportControlBlock_class);
_exports_sReportControlBlock_clientData.dtor = _wrap_delete_sReportControlBlock;
if (SWIGTYPE_p_sReportControlBlock->clientdata == 0) {
  SWIGTYPE_p_sReportControlBlock->clientdata = &_exports_sReportControlBlock_clientData;
}
/* Name: _exports_sLogControlBlock, Type: p_sLogControlBlock, Dtor: _wrap_delete_sLogControlBlock */
SWIGV8_FUNCTION_TEMPLATE _exports_sLogControlBlock_class = SWIGV8_CreateClassTemplate("_exports_sLogControlBlock");
SWIGV8_SET_CLASS_TEMPL(_exports_sLogControlBlock_clientData.class_templ, _exports_sLogControlBlock_class);
_exports_sLogControlBlock_clientData.dtor = _wrap_delete_sLogControlBlock;
if (SWIGTYPE_p_sLogControlBlock->clientdata == 0) {
  SWIGTYPE_p_sLogControlBlock->clientdata = &_exports_sLogControlBlock_clientData;
}
/* Name: _exports_sLog, Type: p_sLog, Dtor: _wrap_delete_sLog */
SWIGV8_FUNCTION_TEMPLATE _exports_sLog_class = SWIGV8_CreateClassTemplate("_exports_sLog");
SWIGV8_SET_CLASS_TEMPL(_exports_sLog_clientData.class_templ, _exports_sLog_class);
_exports_sLog_clientData.dtor = _wrap_delete_sLog;
if (SWIGTYPE_p_sLog->clientdata == 0) {
  SWIGTYPE_p_sLog->clientdata = &_exports_sLog_clientData;
}
/* Name: _exports_sSettingGroupControlBlock, Type: p_sSettingGroupControlBlock, Dtor: _wrap_delete_sSettingGroupControlBlock */
SWIGV8_FUNCTION_TEMPLATE _exports_sSettingGroupControlBlock_class = SWIGV8_CreateClassTemplate("_exports_sSettingGroupControlBlock");
SWIGV8_SET_CLASS_TEMPL(_exports_sSettingGroupControlBlock_clientData.class_templ, _exports_sSettingGroupControlBlock_class);
_exports_sSettingGroupControlBlock_clientData.dtor = _wrap_delete_sSettingGroupControlBlock;
if (SWIGTYPE_p_sSettingGroupControlBlock->clientdata == 0) {
  SWIGTYPE_p_sSettingGroupControlBlock->clientdata = &_exports_sSettingGroupControlBlock_clientData;
}
/* Name: _exports_sGSEControlBlock, Type: p_sGSEControlBlock, Dtor: _wrap_delete_sGSEControlBlock */
SWIGV8_FUNCTION_TEMPLATE _exports_sGSEControlBlock_class = SWIGV8_CreateClassTemplate("_exports_sGSEControlBlock");
SWIGV8_SET_CLASS_TEMPL(_exports_sGSEControlBlock_clientData.class_templ, _exports_sGSEControlBlock_class);
_exports_sGSEControlBlock_clientData.dtor = _wrap_delete_sGSEControlBlock;
if (SWIGTYPE_p_sGSEControlBlock->clientdata == 0) {
  SWIGTYPE_p_sGSEControlBlock->clientdata = &_exports_sGSEControlBlock_clientData;
}
/* Name: _exports_sSVControlBlock, Type: p_sSVControlBlock, Dtor: _wrap_delete_sSVControlBlock */
SWIGV8_FUNCTION_TEMPLATE _exports_sSVControlBlock_class = SWIGV8_CreateClassTemplate("_exports_sSVControlBlock");
SWIGV8_SET_CLASS_TEMPL(_exports_sSVControlBlock_clientData.class_templ, _exports_sSVControlBlock_class);
_exports_sSVControlBlock_clientData.dtor = _wrap_delete_sSVControlBlock;
if (SWIGTYPE_p_sSVControlBlock->clientdata == 0) {
  SWIGTYPE_p_sSVControlBlock->clientdata = &_exports_sSVControlBlock_clientData;
}
/* Name: _exports_sIedServerConfig, Type: p_sIedServerConfig, Dtor: _wrap_delete_sIedServerConfig */
SWIGV8_FUNCTION_TEMPLATE _exports_sIedServerConfig_class = SWIGV8_CreateClassTemplate("_exports_sIedServerConfig");
SWIGV8_SET_CLASS_TEMPL(_exports_sIedServerConfig_clientData.class_templ, _exports_sIedServerConfig_class);
_exports_sIedServerConfig_clientData.dtor = _wrap_delete_sIedServerConfig;
if (SWIGTYPE_p_sIedServerConfig->clientdata == 0) {
  SWIGTYPE_p_sIedServerConfig->clientdata = &_exports_sIedServerConfig_clientData;
}
/* Name: _exports_sLinkedList, Type: p_sLinkedList, Dtor: _wrap_delete_sLinkedList */
SWIGV8_FUNCTION_TEMPLATE _exports_sLinkedList_class = SWIGV8_CreateClassTemplate("_exports_sLinkedList");
SWIGV8_SET_CLASS_TEMPL(_exports_sLinkedList_clientData.class_templ, _exports_sLinkedList_class);
_exports_sLinkedList_clientData.dtor = _wrap_delete_sLinkedList;
if (SWIGTYPE_p_sLinkedList->clientdata == 0) {
  SWIGTYPE_p_sLinkedList->clientdata = &_exports_sLinkedList_clientData;
}
/* Name: _exports_CommParameters, Type: p_sCommParameters, Dtor: _wrap_delete_CommParameters */
SWIGV8_FUNCTION_TEMPLATE _exports_CommParameters_class = SWIGV8_CreateClassTemplate("_exports_CommParameters");
SWIGV8_SET_CLASS_TEMPL(_exports_CommParameters_clientData.class_templ, _exports_CommParameters_class);
_exports_CommParameters_clientData.dtor = _wrap_delete_CommParameters;
if (SWIGTYPE_p_sCommParameters->clientdata == 0) {
  SWIGTYPE_p_sCommParameters->clientdata = &_exports_CommParameters_clientData;
}


  /* register wrapper functions */
  SWIGV8_AddMemberVariable(_exports_LastApplError_class, "ctlNum", _wrap_LastApplError_ctlNum_get, _wrap_LastApplError_ctlNum_set);
SWIGV8_AddMemberVariable(_exports_LastApplError_class, "error", _wrap_LastApplError_error_get, _wrap_LastApplError_error_set);
SWIGV8_AddMemberVariable(_exports_LastApplError_class, "addCause", _wrap_LastApplError_addCause_get, _wrap_LastApplError_addCause_set);
SWIGV8_AddStaticVariable(exports_obj, "IED_STATE_CLOSED", exports_IED_STATE_CLOSED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_STATE_CONNECTING", exports_IED_STATE_CONNECTING_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_STATE_CONNECTED", exports_IED_STATE_CONNECTED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_STATE_CLOSING", exports_IED_STATE_CLOSING_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_OK", exports_IED_ERROR_OK_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_NOT_CONNECTED", exports_IED_ERROR_NOT_CONNECTED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_ALREADY_CONNECTED", exports_IED_ERROR_ALREADY_CONNECTED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_CONNECTION_LOST", exports_IED_ERROR_CONNECTION_LOST_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_SERVICE_NOT_SUPPORTED", exports_IED_ERROR_SERVICE_NOT_SUPPORTED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_CONNECTION_REJECTED", exports_IED_ERROR_CONNECTION_REJECTED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_OUTSTANDING_CALL_LIMIT_REACHED", exports_IED_ERROR_OUTSTANDING_CALL_LIMIT_REACHED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_USER_PROVIDED_INVALID_ARGUMENT", exports_IED_ERROR_USER_PROVIDED_INVALID_ARGUMENT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_ENABLE_REPORT_FAILED_DATASET_MISMATCH", exports_IED_ERROR_ENABLE_REPORT_FAILED_DATASET_MISMATCH_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_OBJECT_REFERENCE_INVALID", exports_IED_ERROR_OBJECT_REFERENCE_INVALID_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_UNEXPECTED_VALUE_RECEIVED", exports_IED_ERROR_UNEXPECTED_VALUE_RECEIVED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_TIMEOUT", exports_IED_ERROR_TIMEOUT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_ACCESS_DENIED", exports_IED_ERROR_ACCESS_DENIED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_OBJECT_DOES_NOT_EXIST", exports_IED_ERROR_OBJECT_DOES_NOT_EXIST_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_OBJECT_EXISTS", exports_IED_ERROR_OBJECT_EXISTS_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_OBJECT_ACCESS_UNSUPPORTED", exports_IED_ERROR_OBJECT_ACCESS_UNSUPPORTED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_TYPE_INCONSISTENT", exports_IED_ERROR_TYPE_INCONSISTENT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_TEMPORARILY_UNAVAILABLE", exports_IED_ERROR_TEMPORARILY_UNAVAILABLE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_OBJECT_UNDEFINED", exports_IED_ERROR_OBJECT_UNDEFINED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_INVALID_ADDRESS", exports_IED_ERROR_INVALID_ADDRESS_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_HARDWARE_FAULT", exports_IED_ERROR_HARDWARE_FAULT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_TYPE_UNSUPPORTED", exports_IED_ERROR_TYPE_UNSUPPORTED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_OBJECT_ATTRIBUTE_INCONSISTENT", exports_IED_ERROR_OBJECT_ATTRIBUTE_INCONSISTENT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_OBJECT_VALUE_INVALID", exports_IED_ERROR_OBJECT_VALUE_INVALID_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_OBJECT_INVALIDATED", exports_IED_ERROR_OBJECT_INVALIDATED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_MALFORMED_MESSAGE", exports_IED_ERROR_MALFORMED_MESSAGE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_SERVICE_NOT_IMPLEMENTED", exports_IED_ERROR_SERVICE_NOT_IMPLEMENTED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IED_ERROR_UNKNOWN", exports_IED_ERROR_UNKNOWN_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_SV_OPT_REFRESH_TIME", exports_IEC61850_SV_OPT_REFRESH_TIME_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_SV_OPT_SAMPLE_SYNC", exports_IEC61850_SV_OPT_SAMPLE_SYNC_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_SV_OPT_SAMPLE_RATE", exports_IEC61850_SV_OPT_SAMPLE_RATE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_SV_OPT_DATA_SET", exports_IEC61850_SV_OPT_DATA_SET_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_SV_OPT_SECURITY", exports_IEC61850_SV_OPT_SECURITY_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_SV_SMPMOD_SAMPLES_PER_PERIOD", exports_IEC61850_SV_SMPMOD_SAMPLES_PER_PERIOD_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_SV_SMPMOD_SAMPLES_PER_SECOND", exports_IEC61850_SV_SMPMOD_SAMPLES_PER_SECOND_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_SV_SMPMOD_SECONDS_PER_SAMPLE", exports_IEC61850_SV_SMPMOD_SECONDS_PER_SAMPLE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "GOCB_ELEMENT_GO_ENA", exports_GOCB_ELEMENT_GO_ENA_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "GOCB_ELEMENT_GO_ID", exports_GOCB_ELEMENT_GO_ID_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "GOCB_ELEMENT_DATSET", exports_GOCB_ELEMENT_DATSET_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "GOCB_ELEMENT_CONF_REV", exports_GOCB_ELEMENT_CONF_REV_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "GOCB_ELEMENT_NDS_COMM", exports_GOCB_ELEMENT_NDS_COMM_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "GOCB_ELEMENT_DST_ADDRESS", exports_GOCB_ELEMENT_DST_ADDRESS_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "GOCB_ELEMENT_MIN_TIME", exports_GOCB_ELEMENT_MIN_TIME_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "GOCB_ELEMENT_MAX_TIME", exports_GOCB_ELEMENT_MAX_TIME_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "GOCB_ELEMENT_FIXED_OFFS", exports_GOCB_ELEMENT_FIXED_OFFS_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "GOCB_ELEMENT_ALL", exports_GOCB_ELEMENT_ALL_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_REASON_NOT_INCLUDED", exports_IEC61850_REASON_NOT_INCLUDED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_REASON_DATA_CHANGE", exports_IEC61850_REASON_DATA_CHANGE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_REASON_QUALITY_CHANGE", exports_IEC61850_REASON_QUALITY_CHANGE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_REASON_DATA_UPDATE", exports_IEC61850_REASON_DATA_UPDATE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_REASON_INTEGRITY", exports_IEC61850_REASON_INTEGRITY_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_REASON_GI", exports_IEC61850_REASON_GI_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_REASON_UNKNOWN", exports_IEC61850_REASON_UNKNOWN_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "REASON_NOT_INCLUDED", exports_REASON_NOT_INCLUDED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "REASON_DATA_CHANGE", exports_REASON_DATA_CHANGE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "REASON_QUALITY_CHANGE", exports_REASON_QUALITY_CHANGE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "REASON_DATA_UPDATE", exports_REASON_DATA_UPDATE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "REASON_INTEGRITY", exports_REASON_INTEGRITY_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "REASON_GI", exports_REASON_GI_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "REASON_UNKNOWN", exports_REASON_UNKNOWN_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RCB_ELEMENT_RPT_ID", exports_RCB_ELEMENT_RPT_ID_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RCB_ELEMENT_RPT_ENA", exports_RCB_ELEMENT_RPT_ENA_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RCB_ELEMENT_RESV", exports_RCB_ELEMENT_RESV_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RCB_ELEMENT_DATSET", exports_RCB_ELEMENT_DATSET_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RCB_ELEMENT_CONF_REV", exports_RCB_ELEMENT_CONF_REV_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RCB_ELEMENT_OPT_FLDS", exports_RCB_ELEMENT_OPT_FLDS_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RCB_ELEMENT_BUF_TM", exports_RCB_ELEMENT_BUF_TM_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RCB_ELEMENT_SQ_NUM", exports_RCB_ELEMENT_SQ_NUM_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RCB_ELEMENT_TRG_OPS", exports_RCB_ELEMENT_TRG_OPS_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RCB_ELEMENT_INTG_PD", exports_RCB_ELEMENT_INTG_PD_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RCB_ELEMENT_GI", exports_RCB_ELEMENT_GI_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RCB_ELEMENT_PURGE_BUF", exports_RCB_ELEMENT_PURGE_BUF_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RCB_ELEMENT_ENTRY_ID", exports_RCB_ELEMENT_ENTRY_ID_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RCB_ELEMENT_TIME_OF_ENTRY", exports_RCB_ELEMENT_TIME_OF_ENTRY_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RCB_ELEMENT_RESV_TMS", exports_RCB_ELEMENT_RESV_TMS_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RCB_ELEMENT_OWNER", exports_RCB_ELEMENT_OWNER_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_ACTION_TYPE_SELECT", exports_CONTROL_ACTION_TYPE_SELECT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_ACTION_TYPE_OPERATE", exports_CONTROL_ACTION_TYPE_OPERATE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_ACTION_TYPE_CANCEL", exports_CONTROL_ACTION_TYPE_CANCEL_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ACSI_CLASS_DATA_OBJECT", exports_ACSI_CLASS_DATA_OBJECT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ACSI_CLASS_DATA_SET", exports_ACSI_CLASS_DATA_SET_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ACSI_CLASS_BRCB", exports_ACSI_CLASS_BRCB_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ACSI_CLASS_URCB", exports_ACSI_CLASS_URCB_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ACSI_CLASS_LCB", exports_ACSI_CLASS_LCB_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ACSI_CLASS_LOG", exports_ACSI_CLASS_LOG_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ACSI_CLASS_SGCB", exports_ACSI_CLASS_SGCB_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ACSI_CLASS_GoCB", exports_ACSI_CLASS_GoCB_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ACSI_CLASS_GsCB", exports_ACSI_CLASS_GsCB_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ACSI_CLASS_MSVCB", exports_ACSI_CLASS_MSVCB_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ACSI_CLASS_USVCB", exports_ACSI_CLASS_USVCB_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ACSE_AUTH_NONE", exports_ACSE_AUTH_NONE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ACSE_AUTH_PASSWORD", exports_ACSE_AUTH_PASSWORD_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ACSE_AUTH_CERTIFICATE", exports_ACSE_AUTH_CERTIFICATE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ACSE_AUTH_TLS", exports_ACSE_AUTH_TLS_get, JS_veto_set_variable, context);
SWIGV8_AddMemberVariable(_exports_sAcseAuthenticationParameter_class, "mechanism", _wrap_sAcseAuthenticationParameter_mechanism_get, _wrap_sAcseAuthenticationParameter_mechanism_set);
SWIGV8_AddMemberVariable(_exports_TSelector_class, "size", _wrap_TSelector_size_get, _wrap_TSelector_size_set);
SWIGV8_AddMemberVariable(_exports_TSelector_class, "value", _wrap_TSelector_value_get, _wrap_TSelector_value_set);
SWIGV8_AddMemberVariable(_exports_SSelector_class, "size", _wrap_SSelector_size_get, _wrap_SSelector_size_set);
SWIGV8_AddMemberVariable(_exports_SSelector_class, "value", _wrap_SSelector_value_get, _wrap_SSelector_value_set);
SWIGV8_AddMemberVariable(_exports_PSelector_class, "size", _wrap_PSelector_size_get, _wrap_PSelector_size_set);
SWIGV8_AddMemberVariable(_exports_PSelector_class, "value", _wrap_PSelector_value_get, _wrap_PSelector_value_set);
SWIGV8_AddMemberVariable(_exports_sIsoConnectionParameters_class, "acseAuthParameter", _wrap_sIsoConnectionParameters_acseAuthParameter_get, _wrap_sIsoConnectionParameters_acseAuthParameter_set);
SWIGV8_AddMemberVariable(_exports_sIsoConnectionParameters_class, "hostname", _wrap_sIsoConnectionParameters_hostname_get, _wrap_sIsoConnectionParameters_hostname_set);
SWIGV8_AddMemberVariable(_exports_sIsoConnectionParameters_class, "tcpPort", _wrap_sIsoConnectionParameters_tcpPort_get, _wrap_sIsoConnectionParameters_tcpPort_set);
SWIGV8_AddMemberVariable(_exports_sIsoConnectionParameters_class, "remoteApTitle", _wrap_sIsoConnectionParameters_remoteApTitle_get, _wrap_sIsoConnectionParameters_remoteApTitle_set);
SWIGV8_AddMemberVariable(_exports_sIsoConnectionParameters_class, "remoteApTitleLen", _wrap_sIsoConnectionParameters_remoteApTitleLen_get, _wrap_sIsoConnectionParameters_remoteApTitleLen_set);
SWIGV8_AddMemberVariable(_exports_sIsoConnectionParameters_class, "remoteAEQualifier", _wrap_sIsoConnectionParameters_remoteAEQualifier_get, _wrap_sIsoConnectionParameters_remoteAEQualifier_set);
SWIGV8_AddMemberVariable(_exports_sIsoConnectionParameters_class, "remotePSelector", _wrap_sIsoConnectionParameters_remotePSelector_get, _wrap_sIsoConnectionParameters_remotePSelector_set);
SWIGV8_AddMemberVariable(_exports_sIsoConnectionParameters_class, "remoteSSelector", _wrap_sIsoConnectionParameters_remoteSSelector_get, _wrap_sIsoConnectionParameters_remoteSSelector_set);
SWIGV8_AddMemberVariable(_exports_sIsoConnectionParameters_class, "remoteTSelector", _wrap_sIsoConnectionParameters_remoteTSelector_get, _wrap_sIsoConnectionParameters_remoteTSelector_set);
SWIGV8_AddMemberVariable(_exports_sIsoConnectionParameters_class, "localApTitle", _wrap_sIsoConnectionParameters_localApTitle_get, _wrap_sIsoConnectionParameters_localApTitle_set);
SWIGV8_AddMemberVariable(_exports_sIsoConnectionParameters_class, "localApTitleLen", _wrap_sIsoConnectionParameters_localApTitleLen_get, _wrap_sIsoConnectionParameters_localApTitleLen_set);
SWIGV8_AddMemberVariable(_exports_sIsoConnectionParameters_class, "localAEQualifier", _wrap_sIsoConnectionParameters_localAEQualifier_get, _wrap_sIsoConnectionParameters_localAEQualifier_set);
SWIGV8_AddMemberVariable(_exports_sIsoConnectionParameters_class, "localPSelector", _wrap_sIsoConnectionParameters_localPSelector_get, _wrap_sIsoConnectionParameters_localPSelector_set);
SWIGV8_AddMemberVariable(_exports_sIsoConnectionParameters_class, "localSSelector", _wrap_sIsoConnectionParameters_localSSelector_get, _wrap_sIsoConnectionParameters_localSSelector_set);
SWIGV8_AddMemberVariable(_exports_sIsoConnectionParameters_class, "localTSelector", _wrap_sIsoConnectionParameters_localTSelector_get, _wrap_sIsoConnectionParameters_localTSelector_set);
SWIGV8_AddMemberVariable(_exports_MmsConnectionParameters_class, "maxServOutstandingCalling", _wrap_MmsConnectionParameters_maxServOutstandingCalling_get, _wrap_MmsConnectionParameters_maxServOutstandingCalling_set);
SWIGV8_AddMemberVariable(_exports_MmsConnectionParameters_class, "maxServOutstandingCalled", _wrap_MmsConnectionParameters_maxServOutstandingCalled_get, _wrap_MmsConnectionParameters_maxServOutstandingCalled_set);
SWIGV8_AddMemberVariable(_exports_MmsConnectionParameters_class, "dataStructureNestingLevel", _wrap_MmsConnectionParameters_dataStructureNestingLevel_get, _wrap_MmsConnectionParameters_dataStructureNestingLevel_set);
SWIGV8_AddMemberVariable(_exports_MmsConnectionParameters_class, "maxPduSize", _wrap_MmsConnectionParameters_maxPduSize_get, _wrap_MmsConnectionParameters_maxPduSize_set);
SWIGV8_AddMemberVariable(_exports_MmsConnectionParameters_class, "servicesSupported", _wrap_MmsConnectionParameters_servicesSupported_get, _wrap_MmsConnectionParameters_servicesSupported_set);
SWIGV8_AddMemberVariable(_exports_MmsServerIdentity_class, "vendorName", _wrap_MmsServerIdentity_vendorName_get, _wrap_MmsServerIdentity_vendorName_set);
SWIGV8_AddMemberVariable(_exports_MmsServerIdentity_class, "modelName", _wrap_MmsServerIdentity_modelName_get, _wrap_MmsServerIdentity_modelName_set);
SWIGV8_AddMemberVariable(_exports_MmsServerIdentity_class, "revision", _wrap_MmsServerIdentity_revision_get, _wrap_MmsServerIdentity_revision_set);
SWIGV8_AddStaticVariable(exports_obj, "MMS_CONNECTION_STATE_CLOSED", exports_MMS_CONNECTION_STATE_CLOSED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_CONNECTION_STATE_CONNECTING", exports_MMS_CONNECTION_STATE_CONNECTING_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_CONNECTION_STATE_CONNECTED", exports_MMS_CONNECTION_STATE_CONNECTED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_CONNECTION_STATE_CLOSING", exports_MMS_CONNECTION_STATE_CLOSING_get, JS_veto_set_variable, context);
SWIGV8_AddMemberVariable(_exports_sMmsJournalEntry_class, "entryID", _wrap_sMmsJournalEntry_entryID_get, _wrap_sMmsJournalEntry_entryID_set);
SWIGV8_AddMemberVariable(_exports_sMmsJournalEntry_class, "occurenceTime", _wrap_sMmsJournalEntry_occurenceTime_get, _wrap_sMmsJournalEntry_occurenceTime_set);
SWIGV8_AddMemberVariable(_exports_sMmsJournalEntry_class, "journalVariables", _wrap_sMmsJournalEntry_journalVariables_get, _wrap_sMmsJournalEntry_journalVariables_set);
SWIGV8_AddMemberVariable(_exports_sMmsJournalVariable_class, "tag", _wrap_sMmsJournalVariable_tag_get, _wrap_sMmsJournalVariable_tag_set);
SWIGV8_AddMemberVariable(_exports_sMmsJournalVariable_class, "value", _wrap_sMmsJournalVariable_value_get, _wrap_sMmsJournalVariable_value_set);
SWIGV8_AddStaticVariable(exports_obj, "IEC_61850_EDITION_1", exports_IEC_61850_EDITION_1_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC_61850_EDITION_2", exports_IEC_61850_EDITION_2_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC_61850_EDITION_2_1", exports_IEC_61850_EDITION_2_1_get, JS_veto_set_variable, context);
SWIGV8_AddMemberVariable(_exports_PhyComAddress_class, "vlanPriority", _wrap_PhyComAddress_vlanPriority_get, _wrap_PhyComAddress_vlanPriority_set);
SWIGV8_AddMemberVariable(_exports_PhyComAddress_class, "vlanId", _wrap_PhyComAddress_vlanId_get, _wrap_PhyComAddress_vlanId_set);
SWIGV8_AddMemberVariable(_exports_PhyComAddress_class, "appId", _wrap_PhyComAddress_appId_get, _wrap_PhyComAddress_appId_set);
SWIGV8_AddMemberVariable(_exports_PhyComAddress_class, "dstAddress", _wrap_PhyComAddress_dstAddress_get, _wrap_PhyComAddress_dstAddress_set);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_MODEL_STATUS_ONLY", exports_CONTROL_MODEL_STATUS_ONLY_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_MODEL_DIRECT_NORMAL", exports_CONTROL_MODEL_DIRECT_NORMAL_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_MODEL_SBO_NORMAL", exports_CONTROL_MODEL_SBO_NORMAL_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_MODEL_DIRECT_ENHANCED", exports_CONTROL_MODEL_DIRECT_ENHANCED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_MODEL_SBO_ENHANCED", exports_CONTROL_MODEL_SBO_ENHANCED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "TRG_OPT_DATA_CHANGED", exports_TRG_OPT_DATA_CHANGED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "TRG_OPT_QUALITY_CHANGED", exports_TRG_OPT_QUALITY_CHANGED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "TRG_OPT_DATA_UPDATE", exports_TRG_OPT_DATA_UPDATE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "TRG_OPT_INTEGRITY", exports_TRG_OPT_INTEGRITY_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "TRG_OPT_GI", exports_TRG_OPT_GI_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "TRG_OPT_TRANSIENT", exports_TRG_OPT_TRANSIENT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RPT_OPT_SEQ_NUM", exports_RPT_OPT_SEQ_NUM_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RPT_OPT_TIME_STAMP", exports_RPT_OPT_TIME_STAMP_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RPT_OPT_REASON_FOR_INCLUSION", exports_RPT_OPT_REASON_FOR_INCLUSION_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RPT_OPT_DATA_SET", exports_RPT_OPT_DATA_SET_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RPT_OPT_DATA_REFERENCE", exports_RPT_OPT_DATA_REFERENCE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RPT_OPT_BUFFER_OVERFLOW", exports_RPT_OPT_BUFFER_OVERFLOW_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RPT_OPT_ENTRY_ID", exports_RPT_OPT_ENTRY_ID_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RPT_OPT_CONF_REV", exports_RPT_OPT_CONF_REV_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_ORCAT_NOT_SUPPORTED", exports_CONTROL_ORCAT_NOT_SUPPORTED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_ORCAT_BAY_CONTROL", exports_CONTROL_ORCAT_BAY_CONTROL_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_ORCAT_STATION_CONTROL", exports_CONTROL_ORCAT_STATION_CONTROL_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_ORCAT_REMOTE_CONTROL", exports_CONTROL_ORCAT_REMOTE_CONTROL_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_ORCAT_AUTOMATIC_BAY", exports_CONTROL_ORCAT_AUTOMATIC_BAY_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_ORCAT_AUTOMATIC_STATION", exports_CONTROL_ORCAT_AUTOMATIC_STATION_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_ORCAT_AUTOMATIC_REMOTE", exports_CONTROL_ORCAT_AUTOMATIC_REMOTE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_ORCAT_MAINTENANCE", exports_CONTROL_ORCAT_MAINTENANCE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_ORCAT_PROCESS", exports_CONTROL_ORCAT_PROCESS_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_UNKNOWN", exports_ADD_CAUSE_UNKNOWN_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_NOT_SUPPORTED", exports_ADD_CAUSE_NOT_SUPPORTED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_BLOCKED_BY_SWITCHING_HIERARCHY", exports_ADD_CAUSE_BLOCKED_BY_SWITCHING_HIERARCHY_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_SELECT_FAILED", exports_ADD_CAUSE_SELECT_FAILED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_INVALID_POSITION", exports_ADD_CAUSE_INVALID_POSITION_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_POSITION_REACHED", exports_ADD_CAUSE_POSITION_REACHED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_PARAMETER_CHANGE_IN_EXECUTION", exports_ADD_CAUSE_PARAMETER_CHANGE_IN_EXECUTION_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_STEP_LIMIT", exports_ADD_CAUSE_STEP_LIMIT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_BLOCKED_BY_MODE", exports_ADD_CAUSE_BLOCKED_BY_MODE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_BLOCKED_BY_PROCESS", exports_ADD_CAUSE_BLOCKED_BY_PROCESS_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_BLOCKED_BY_INTERLOCKING", exports_ADD_CAUSE_BLOCKED_BY_INTERLOCKING_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_BLOCKED_BY_SYNCHROCHECK", exports_ADD_CAUSE_BLOCKED_BY_SYNCHROCHECK_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_COMMAND_ALREADY_IN_EXECUTION", exports_ADD_CAUSE_COMMAND_ALREADY_IN_EXECUTION_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_BLOCKED_BY_HEALTH", exports_ADD_CAUSE_BLOCKED_BY_HEALTH_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_1_OF_N_CONTROL", exports_ADD_CAUSE_1_OF_N_CONTROL_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_ABORTION_BY_CANCEL", exports_ADD_CAUSE_ABORTION_BY_CANCEL_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_TIME_LIMIT_OVER", exports_ADD_CAUSE_TIME_LIMIT_OVER_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_ABORTION_BY_TRIP", exports_ADD_CAUSE_ABORTION_BY_TRIP_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_OBJECT_NOT_SELECTED", exports_ADD_CAUSE_OBJECT_NOT_SELECTED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_OBJECT_ALREADY_SELECTED", exports_ADD_CAUSE_OBJECT_ALREADY_SELECTED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_NO_ACCESS_AUTHORITY", exports_ADD_CAUSE_NO_ACCESS_AUTHORITY_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_ENDED_WITH_OVERSHOOT", exports_ADD_CAUSE_ENDED_WITH_OVERSHOOT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_ABORTION_DUE_TO_DEVIATION", exports_ADD_CAUSE_ABORTION_DUE_TO_DEVIATION_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_ABORTION_BY_COMMUNICATION_LOSS", exports_ADD_CAUSE_ABORTION_BY_COMMUNICATION_LOSS_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_ABORTION_BY_COMMAND", exports_ADD_CAUSE_ABORTION_BY_COMMAND_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_NONE", exports_ADD_CAUSE_NONE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_INCONSISTENT_PARAMETERS", exports_ADD_CAUSE_INCONSISTENT_PARAMETERS_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ADD_CAUSE_LOCKED_BY_OTHER_CLIENT", exports_ADD_CAUSE_LOCKED_BY_OTHER_CLIENT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_ERROR_NO_ERROR", exports_CONTROL_ERROR_NO_ERROR_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_ERROR_UNKNOWN", exports_CONTROL_ERROR_UNKNOWN_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_ERROR_TIMEOUT_TEST", exports_CONTROL_ERROR_TIMEOUT_TEST_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_ERROR_OPERATOR_TEST", exports_CONTROL_ERROR_OPERATOR_TEST_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_FC_ST", exports_IEC61850_FC_ST_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_FC_MX", exports_IEC61850_FC_MX_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_FC_SP", exports_IEC61850_FC_SP_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_FC_SV", exports_IEC61850_FC_SV_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_FC_CF", exports_IEC61850_FC_CF_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_FC_DC", exports_IEC61850_FC_DC_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_FC_SG", exports_IEC61850_FC_SG_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_FC_SE", exports_IEC61850_FC_SE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_FC_SR", exports_IEC61850_FC_SR_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_FC_OR", exports_IEC61850_FC_OR_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_FC_BL", exports_IEC61850_FC_BL_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_FC_EX", exports_IEC61850_FC_EX_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_FC_CO", exports_IEC61850_FC_CO_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_FC_US", exports_IEC61850_FC_US_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_FC_MS", exports_IEC61850_FC_MS_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_FC_RP", exports_IEC61850_FC_RP_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_FC_BR", exports_IEC61850_FC_BR_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_FC_LG", exports_IEC61850_FC_LG_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_FC_GO", exports_IEC61850_FC_GO_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_FC_ALL", exports_IEC61850_FC_ALL_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_FC_NONE", exports_IEC61850_FC_NONE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "QUALITY_VALIDITY_GOOD", exports_QUALITY_VALIDITY_GOOD_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "QUALITY_VALIDITY_INVALID", exports_QUALITY_VALIDITY_INVALID_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "QUALITY_VALIDITY_RESERVED", exports_QUALITY_VALIDITY_RESERVED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "QUALITY_VALIDITY_QUESTIONABLE", exports_QUALITY_VALIDITY_QUESTIONABLE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "QUALITY_DETAIL_OVERFLOW", exports_QUALITY_DETAIL_OVERFLOW_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "QUALITY_DETAIL_OUT_OF_RANGE", exports_QUALITY_DETAIL_OUT_OF_RANGE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "QUALITY_DETAIL_BAD_REFERENCE", exports_QUALITY_DETAIL_BAD_REFERENCE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "QUALITY_DETAIL_OSCILLATORY", exports_QUALITY_DETAIL_OSCILLATORY_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "QUALITY_DETAIL_FAILURE", exports_QUALITY_DETAIL_FAILURE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "QUALITY_DETAIL_OLD_DATA", exports_QUALITY_DETAIL_OLD_DATA_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "QUALITY_DETAIL_INCONSISTENT", exports_QUALITY_DETAIL_INCONSISTENT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "QUALITY_DETAIL_INACCURATE", exports_QUALITY_DETAIL_INACCURATE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "QUALITY_SOURCE_SUBSTITUTED", exports_QUALITY_SOURCE_SUBSTITUTED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "QUALITY_TEST", exports_QUALITY_TEST_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "QUALITY_OPERATOR_BLOCKED", exports_QUALITY_OPERATOR_BLOCKED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "QUALITY_DERIVED", exports_QUALITY_DERIVED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "DBPOS_INTERMEDIATE_STATE", exports_DBPOS_INTERMEDIATE_STATE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "DBPOS_OFF", exports_DBPOS_OFF_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "DBPOS_ON", exports_DBPOS_ON_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "DBPOS_BAD_STATE", exports_DBPOS_BAD_STATE_get, JS_veto_set_variable, context);
SWIGV8_AddMemberVariable(_exports_Timestamp_class, "val", _wrap_Timestamp_val_get, _wrap_Timestamp_val_set);
SWIGV8_AddStaticVariable(exports_obj, "DATA_ACCESS_ERROR_SUCCESS_NO_UPDATE", exports_DATA_ACCESS_ERROR_SUCCESS_NO_UPDATE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "DATA_ACCESS_ERROR_NO_RESPONSE", exports_DATA_ACCESS_ERROR_NO_RESPONSE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "DATA_ACCESS_ERROR_SUCCESS", exports_DATA_ACCESS_ERROR_SUCCESS_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "DATA_ACCESS_ERROR_OBJECT_INVALIDATED", exports_DATA_ACCESS_ERROR_OBJECT_INVALIDATED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "DATA_ACCESS_ERROR_HARDWARE_FAULT", exports_DATA_ACCESS_ERROR_HARDWARE_FAULT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "DATA_ACCESS_ERROR_TEMPORARILY_UNAVAILABLE", exports_DATA_ACCESS_ERROR_TEMPORARILY_UNAVAILABLE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "DATA_ACCESS_ERROR_OBJECT_ACCESS_DENIED", exports_DATA_ACCESS_ERROR_OBJECT_ACCESS_DENIED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "DATA_ACCESS_ERROR_OBJECT_UNDEFINED", exports_DATA_ACCESS_ERROR_OBJECT_UNDEFINED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "DATA_ACCESS_ERROR_INVALID_ADDRESS", exports_DATA_ACCESS_ERROR_INVALID_ADDRESS_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "DATA_ACCESS_ERROR_TYPE_UNSUPPORTED", exports_DATA_ACCESS_ERROR_TYPE_UNSUPPORTED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "DATA_ACCESS_ERROR_TYPE_INCONSISTENT", exports_DATA_ACCESS_ERROR_TYPE_INCONSISTENT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "DATA_ACCESS_ERROR_OBJECT_ATTRIBUTE_INCONSISTENT", exports_DATA_ACCESS_ERROR_OBJECT_ATTRIBUTE_INCONSISTENT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "DATA_ACCESS_ERROR_OBJECT_ACCESS_UNSUPPORTED", exports_DATA_ACCESS_ERROR_OBJECT_ACCESS_UNSUPPORTED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "DATA_ACCESS_ERROR_OBJECT_NONE_EXISTENT", exports_DATA_ACCESS_ERROR_OBJECT_NONE_EXISTENT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "DATA_ACCESS_ERROR_OBJECT_VALUE_INVALID", exports_DATA_ACCESS_ERROR_OBJECT_VALUE_INVALID_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "DATA_ACCESS_ERROR_UNKNOWN", exports_DATA_ACCESS_ERROR_UNKNOWN_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_NONE", exports_MMS_ERROR_NONE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_CONNECTION_REJECTED", exports_MMS_ERROR_CONNECTION_REJECTED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_CONNECTION_LOST", exports_MMS_ERROR_CONNECTION_LOST_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_SERVICE_TIMEOUT", exports_MMS_ERROR_SERVICE_TIMEOUT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_PARSING_RESPONSE", exports_MMS_ERROR_PARSING_RESPONSE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_HARDWARE_FAULT", exports_MMS_ERROR_HARDWARE_FAULT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_CONCLUDE_REJECTED", exports_MMS_ERROR_CONCLUDE_REJECTED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_INVALID_ARGUMENTS", exports_MMS_ERROR_INVALID_ARGUMENTS_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_OUTSTANDING_CALL_LIMIT", exports_MMS_ERROR_OUTSTANDING_CALL_LIMIT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_OTHER", exports_MMS_ERROR_OTHER_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_VMDSTATE_OTHER", exports_MMS_ERROR_VMDSTATE_OTHER_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_APPLICATION_REFERENCE_OTHER", exports_MMS_ERROR_APPLICATION_REFERENCE_OTHER_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_DEFINITION_OTHER", exports_MMS_ERROR_DEFINITION_OTHER_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_DEFINITION_INVALID_ADDRESS", exports_MMS_ERROR_DEFINITION_INVALID_ADDRESS_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_DEFINITION_TYPE_UNSUPPORTED", exports_MMS_ERROR_DEFINITION_TYPE_UNSUPPORTED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_DEFINITION_TYPE_INCONSISTENT", exports_MMS_ERROR_DEFINITION_TYPE_INCONSISTENT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_DEFINITION_OBJECT_UNDEFINED", exports_MMS_ERROR_DEFINITION_OBJECT_UNDEFINED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_DEFINITION_OBJECT_EXISTS", exports_MMS_ERROR_DEFINITION_OBJECT_EXISTS_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_DEFINITION_OBJECT_ATTRIBUTE_INCONSISTENT", exports_MMS_ERROR_DEFINITION_OBJECT_ATTRIBUTE_INCONSISTENT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_RESOURCE_OTHER", exports_MMS_ERROR_RESOURCE_OTHER_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_RESOURCE_CAPABILITY_UNAVAILABLE", exports_MMS_ERROR_RESOURCE_CAPABILITY_UNAVAILABLE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_SERVICE_OTHER", exports_MMS_ERROR_SERVICE_OTHER_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_SERVICE_OBJECT_CONSTRAINT_CONFLICT", exports_MMS_ERROR_SERVICE_OBJECT_CONSTRAINT_CONFLICT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_SERVICE_PREEMPT_OTHER", exports_MMS_ERROR_SERVICE_PREEMPT_OTHER_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_TIME_RESOLUTION_OTHER", exports_MMS_ERROR_TIME_RESOLUTION_OTHER_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_ACCESS_OTHER", exports_MMS_ERROR_ACCESS_OTHER_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_ACCESS_OBJECT_NON_EXISTENT", exports_MMS_ERROR_ACCESS_OBJECT_NON_EXISTENT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_ACCESS_OBJECT_ACCESS_UNSUPPORTED", exports_MMS_ERROR_ACCESS_OBJECT_ACCESS_UNSUPPORTED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_ACCESS_OBJECT_ACCESS_DENIED", exports_MMS_ERROR_ACCESS_OBJECT_ACCESS_DENIED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_ACCESS_OBJECT_INVALIDATED", exports_MMS_ERROR_ACCESS_OBJECT_INVALIDATED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_ACCESS_OBJECT_VALUE_INVALID", exports_MMS_ERROR_ACCESS_OBJECT_VALUE_INVALID_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_ACCESS_TEMPORARILY_UNAVAILABLE", exports_MMS_ERROR_ACCESS_TEMPORARILY_UNAVAILABLE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_FILE_OTHER", exports_MMS_ERROR_FILE_OTHER_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_FILE_FILENAME_AMBIGUOUS", exports_MMS_ERROR_FILE_FILENAME_AMBIGUOUS_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_FILE_FILE_BUSY", exports_MMS_ERROR_FILE_FILE_BUSY_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_FILE_FILENAME_SYNTAX_ERROR", exports_MMS_ERROR_FILE_FILENAME_SYNTAX_ERROR_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_FILE_CONTENT_TYPE_INVALID", exports_MMS_ERROR_FILE_CONTENT_TYPE_INVALID_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_FILE_POSITION_INVALID", exports_MMS_ERROR_FILE_POSITION_INVALID_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_FILE_FILE_ACCESS_DENIED", exports_MMS_ERROR_FILE_FILE_ACCESS_DENIED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_FILE_FILE_NON_EXISTENT", exports_MMS_ERROR_FILE_FILE_NON_EXISTENT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_FILE_DUPLICATE_FILENAME", exports_MMS_ERROR_FILE_DUPLICATE_FILENAME_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_FILE_INSUFFICIENT_SPACE_IN_FILESTORE", exports_MMS_ERROR_FILE_INSUFFICIENT_SPACE_IN_FILESTORE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_REJECT_OTHER", exports_MMS_ERROR_REJECT_OTHER_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_REJECT_UNKNOWN_PDU_TYPE", exports_MMS_ERROR_REJECT_UNKNOWN_PDU_TYPE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_REJECT_INVALID_PDU", exports_MMS_ERROR_REJECT_INVALID_PDU_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_REJECT_UNRECOGNIZED_SERVICE", exports_MMS_ERROR_REJECT_UNRECOGNIZED_SERVICE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_REJECT_UNRECOGNIZED_MODIFIER", exports_MMS_ERROR_REJECT_UNRECOGNIZED_MODIFIER_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ERROR_REJECT_REQUEST_INVALID_ARGUMENT", exports_MMS_ERROR_REJECT_REQUEST_INVALID_ARGUMENT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_ARRAY", exports_MMS_ARRAY_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_STRUCTURE", exports_MMS_STRUCTURE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_BOOLEAN", exports_MMS_BOOLEAN_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_BIT_STRING", exports_MMS_BIT_STRING_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_INTEGER", exports_MMS_INTEGER_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_UNSIGNED", exports_MMS_UNSIGNED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_FLOAT", exports_MMS_FLOAT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_OCTET_STRING", exports_MMS_OCTET_STRING_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_VISIBLE_STRING", exports_MMS_VISIBLE_STRING_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_GENERALIZED_TIME", exports_MMS_GENERALIZED_TIME_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_BINARY_TIME", exports_MMS_BINARY_TIME_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_BCD", exports_MMS_BCD_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_OBJ_ID", exports_MMS_OBJ_ID_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_STRING", exports_MMS_STRING_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_UTC_TIME", exports_MMS_UTC_TIME_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "MMS_DATA_ACCESS_ERROR", exports_MMS_DATA_ACCESS_ERROR_get, JS_veto_set_variable, context);
SWIGV8_AddMemberVariable(_exports_MmsAccessSpecifier_class, "domain", _wrap_MmsAccessSpecifier_domain_get, _wrap_MmsAccessSpecifier_domain_set);
SWIGV8_AddMemberVariable(_exports_MmsAccessSpecifier_class, "variableName", _wrap_MmsAccessSpecifier_variableName_get, _wrap_MmsAccessSpecifier_variableName_set);
SWIGV8_AddMemberVariable(_exports_MmsAccessSpecifier_class, "arrayIndex", _wrap_MmsAccessSpecifier_arrayIndex_get, _wrap_MmsAccessSpecifier_arrayIndex_set);
SWIGV8_AddMemberVariable(_exports_MmsAccessSpecifier_class, "componentName", _wrap_MmsAccessSpecifier_componentName_get, _wrap_MmsAccessSpecifier_componentName_set);
SWIGV8_AddMemberVariable(_exports_MmsVariableAccessSpecification_class, "domainId", _wrap_MmsVariableAccessSpecification_domainId_get, _wrap_MmsVariableAccessSpecification_domainId_set);
SWIGV8_AddMemberVariable(_exports_MmsVariableAccessSpecification_class, "itemId", _wrap_MmsVariableAccessSpecification_itemId_get, _wrap_MmsVariableAccessSpecification_itemId_set);
SWIGV8_AddMemberVariable(_exports_MmsVariableAccessSpecification_class, "arrayIndex", _wrap_MmsVariableAccessSpecification_arrayIndex_get, _wrap_MmsVariableAccessSpecification_arrayIndex_set);
SWIGV8_AddMemberVariable(_exports_MmsVariableAccessSpecification_class, "componentName", _wrap_MmsVariableAccessSpecification_componentName_get, _wrap_MmsVariableAccessSpecification_componentName_set);
SWIGV8_AddMemberVariable(_exports_ItuObjectIdentifier_class, "arc", _wrap_ItuObjectIdentifier_arc_get, _wrap_ItuObjectIdentifier_arc_set);
SWIGV8_AddMemberVariable(_exports_ItuObjectIdentifier_class, "arcCount", _wrap_ItuObjectIdentifier_arcCount_get, _wrap_ItuObjectIdentifier_arcCount_set);
SWIGV8_AddMemberVariable(_exports_IsoApplicationReference_class, "apTitle", _wrap_IsoApplicationReference_apTitle_get, _wrap_IsoApplicationReference_apTitle_set);
SWIGV8_AddMemberVariable(_exports_IsoApplicationReference_class, "aeQualifier", _wrap_IsoApplicationReference_aeQualifier_get, _wrap_IsoApplicationReference_aeQualifier_set);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_UNKNOWN_TYPE", exports_IEC61850_UNKNOWN_TYPE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_BOOLEAN", exports_IEC61850_BOOLEAN_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_INT8", exports_IEC61850_INT8_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_INT16", exports_IEC61850_INT16_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_INT32", exports_IEC61850_INT32_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_INT64", exports_IEC61850_INT64_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_INT128", exports_IEC61850_INT128_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_INT8U", exports_IEC61850_INT8U_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_INT16U", exports_IEC61850_INT16U_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_INT24U", exports_IEC61850_INT24U_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_INT32U", exports_IEC61850_INT32U_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_FLOAT32", exports_IEC61850_FLOAT32_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_FLOAT64", exports_IEC61850_FLOAT64_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_ENUMERATED", exports_IEC61850_ENUMERATED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_OCTET_STRING_64", exports_IEC61850_OCTET_STRING_64_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_OCTET_STRING_6", exports_IEC61850_OCTET_STRING_6_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_OCTET_STRING_8", exports_IEC61850_OCTET_STRING_8_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_VISIBLE_STRING_32", exports_IEC61850_VISIBLE_STRING_32_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_VISIBLE_STRING_64", exports_IEC61850_VISIBLE_STRING_64_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_VISIBLE_STRING_65", exports_IEC61850_VISIBLE_STRING_65_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_VISIBLE_STRING_129", exports_IEC61850_VISIBLE_STRING_129_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_VISIBLE_STRING_255", exports_IEC61850_VISIBLE_STRING_255_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_UNICODE_STRING_255", exports_IEC61850_UNICODE_STRING_255_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_TIMESTAMP", exports_IEC61850_TIMESTAMP_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_QUALITY", exports_IEC61850_QUALITY_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_CHECK", exports_IEC61850_CHECK_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_CODEDENUM", exports_IEC61850_CODEDENUM_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_GENERIC_BITSTRING", exports_IEC61850_GENERIC_BITSTRING_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_CONSTRUCTED", exports_IEC61850_CONSTRUCTED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_ENTRY_TIME", exports_IEC61850_ENTRY_TIME_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_PHYCOMADDR", exports_IEC61850_PHYCOMADDR_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_CURRENCY", exports_IEC61850_CURRENCY_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_OPTFLDS", exports_IEC61850_OPTFLDS_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_TRGOPS", exports_IEC61850_TRGOPS_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "LogicalDeviceModelType", exports_LogicalDeviceModelType_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "LogicalNodeModelType", exports_LogicalNodeModelType_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "DataObjectModelType", exports_DataObjectModelType_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "DataAttributeModelType", exports_DataAttributeModelType_get, JS_veto_set_variable, context);
SWIGV8_AddMemberVariable(_exports_sIedModel_class, "name", _wrap_sIedModel_name_get, _wrap_sIedModel_name_set);
SWIGV8_AddMemberVariable(_exports_sIedModel_class, "firstChild", _wrap_sIedModel_firstChild_get, _wrap_sIedModel_firstChild_set);
SWIGV8_AddMemberVariable(_exports_sIedModel_class, "dataSets", _wrap_sIedModel_dataSets_get, _wrap_sIedModel_dataSets_set);
SWIGV8_AddMemberVariable(_exports_sIedModel_class, "rcbs", _wrap_sIedModel_rcbs_get, _wrap_sIedModel_rcbs_set);
SWIGV8_AddMemberVariable(_exports_sIedModel_class, "gseCBs", _wrap_sIedModel_gseCBs_get, _wrap_sIedModel_gseCBs_set);
SWIGV8_AddMemberVariable(_exports_sIedModel_class, "svCBs", _wrap_sIedModel_svCBs_get, _wrap_sIedModel_svCBs_set);
SWIGV8_AddMemberVariable(_exports_sIedModel_class, "sgcbs", _wrap_sIedModel_sgcbs_get, _wrap_sIedModel_sgcbs_set);
SWIGV8_AddMemberVariable(_exports_sIedModel_class, "lcbs", _wrap_sIedModel_lcbs_get, _wrap_sIedModel_lcbs_set);
SWIGV8_AddMemberVariable(_exports_sIedModel_class, "logs", _wrap_sIedModel_logs_get, _wrap_sIedModel_logs_set);
SWIGV8_AddMemberVariable(_exports_sIedModel_class, "initializer", _wrap_sIedModel_initializer_get, _wrap_sIedModel_initializer_set);
SWIGV8_AddMemberVariable(_exports_sLogicalDevice_class, "modelType", _wrap_sLogicalDevice_modelType_get, _wrap_sLogicalDevice_modelType_set);
SWIGV8_AddMemberVariable(_exports_sLogicalDevice_class, "name", _wrap_sLogicalDevice_name_get, _wrap_sLogicalDevice_name_set);
SWIGV8_AddMemberVariable(_exports_sLogicalDevice_class, "parent", _wrap_sLogicalDevice_parent_get, _wrap_sLogicalDevice_parent_set);
SWIGV8_AddMemberVariable(_exports_sLogicalDevice_class, "sibling", _wrap_sLogicalDevice_sibling_get, _wrap_sLogicalDevice_sibling_set);
SWIGV8_AddMemberVariable(_exports_sLogicalDevice_class, "firstChild", _wrap_sLogicalDevice_firstChild_get, _wrap_sLogicalDevice_firstChild_set);
SWIGV8_AddMemberVariable(_exports_sModelNode_class, "modelType", _wrap_sModelNode_modelType_get, _wrap_sModelNode_modelType_set);
SWIGV8_AddMemberVariable(_exports_sModelNode_class, "name", _wrap_sModelNode_name_get, _wrap_sModelNode_name_set);
SWIGV8_AddMemberVariable(_exports_sModelNode_class, "parent", _wrap_sModelNode_parent_get, _wrap_sModelNode_parent_set);
SWIGV8_AddMemberVariable(_exports_sModelNode_class, "sibling", _wrap_sModelNode_sibling_get, _wrap_sModelNode_sibling_set);
SWIGV8_AddMemberVariable(_exports_sModelNode_class, "firstChild", _wrap_sModelNode_firstChild_get, _wrap_sModelNode_firstChild_set);
SWIGV8_AddMemberVariable(_exports_sLogicalNode_class, "modelType", _wrap_sLogicalNode_modelType_get, _wrap_sLogicalNode_modelType_set);
SWIGV8_AddMemberVariable(_exports_sLogicalNode_class, "name", _wrap_sLogicalNode_name_get, _wrap_sLogicalNode_name_set);
SWIGV8_AddMemberVariable(_exports_sLogicalNode_class, "parent", _wrap_sLogicalNode_parent_get, _wrap_sLogicalNode_parent_set);
SWIGV8_AddMemberVariable(_exports_sLogicalNode_class, "sibling", _wrap_sLogicalNode_sibling_get, _wrap_sLogicalNode_sibling_set);
SWIGV8_AddMemberVariable(_exports_sLogicalNode_class, "firstChild", _wrap_sLogicalNode_firstChild_get, _wrap_sLogicalNode_firstChild_set);
SWIGV8_AddMemberVariable(_exports_sDataObject_class, "modelType", _wrap_sDataObject_modelType_get, _wrap_sDataObject_modelType_set);
SWIGV8_AddMemberVariable(_exports_sDataObject_class, "name", _wrap_sDataObject_name_get, _wrap_sDataObject_name_set);
SWIGV8_AddMemberVariable(_exports_sDataObject_class, "parent", _wrap_sDataObject_parent_get, _wrap_sDataObject_parent_set);
SWIGV8_AddMemberVariable(_exports_sDataObject_class, "sibling", _wrap_sDataObject_sibling_get, _wrap_sDataObject_sibling_set);
SWIGV8_AddMemberVariable(_exports_sDataObject_class, "firstChild", _wrap_sDataObject_firstChild_get, _wrap_sDataObject_firstChild_set);
SWIGV8_AddMemberVariable(_exports_sDataObject_class, "elementCount", _wrap_sDataObject_elementCount_get, _wrap_sDataObject_elementCount_set);
SWIGV8_AddMemberVariable(_exports_sDataAttribute_class, "modelType", _wrap_sDataAttribute_modelType_get, _wrap_sDataAttribute_modelType_set);
SWIGV8_AddMemberVariable(_exports_sDataAttribute_class, "name", _wrap_sDataAttribute_name_get, _wrap_sDataAttribute_name_set);
SWIGV8_AddMemberVariable(_exports_sDataAttribute_class, "parent", _wrap_sDataAttribute_parent_get, _wrap_sDataAttribute_parent_set);
SWIGV8_AddMemberVariable(_exports_sDataAttribute_class, "sibling", _wrap_sDataAttribute_sibling_get, _wrap_sDataAttribute_sibling_set);
SWIGV8_AddMemberVariable(_exports_sDataAttribute_class, "firstChild", _wrap_sDataAttribute_firstChild_get, _wrap_sDataAttribute_firstChild_set);
SWIGV8_AddMemberVariable(_exports_sDataAttribute_class, "elementCount", _wrap_sDataAttribute_elementCount_get, _wrap_sDataAttribute_elementCount_set);
SWIGV8_AddMemberVariable(_exports_sDataAttribute_class, "fc", _wrap_sDataAttribute_fc_get, _wrap_sDataAttribute_fc_set);
SWIGV8_AddMemberVariable(_exports_sDataAttribute_class, "type", _wrap_sDataAttribute_type_get, _wrap_sDataAttribute_type_set);
SWIGV8_AddMemberVariable(_exports_sDataAttribute_class, "triggerOptions", _wrap_sDataAttribute_triggerOptions_get, _wrap_sDataAttribute_triggerOptions_set);
SWIGV8_AddMemberVariable(_exports_sDataAttribute_class, "mmsValue", _wrap_sDataAttribute_mmsValue_get, _wrap_sDataAttribute_mmsValue_set);
SWIGV8_AddMemberVariable(_exports_sDataAttribute_class, "sAddr", _wrap_sDataAttribute_sAddr_get, _wrap_sDataAttribute_sAddr_set);
SWIGV8_AddMemberVariable(_exports_DataSetEntry_class, "logicalDeviceName", _wrap_DataSetEntry_logicalDeviceName_get, _wrap_DataSetEntry_logicalDeviceName_set);
SWIGV8_AddMemberVariable(_exports_DataSetEntry_class, "isLDNameDynamicallyAllocated", _wrap_DataSetEntry_isLDNameDynamicallyAllocated_get, _wrap_DataSetEntry_isLDNameDynamicallyAllocated_set);
SWIGV8_AddMemberVariable(_exports_DataSetEntry_class, "variableName", _wrap_DataSetEntry_variableName_get, _wrap_DataSetEntry_variableName_set);
SWIGV8_AddMemberVariable(_exports_DataSetEntry_class, "index", _wrap_DataSetEntry_index_get, _wrap_DataSetEntry_index_set);
SWIGV8_AddMemberVariable(_exports_DataSetEntry_class, "componentName", _wrap_DataSetEntry_componentName_get, _wrap_DataSetEntry_componentName_set);
SWIGV8_AddMemberVariable(_exports_DataSetEntry_class, "value", _wrap_DataSetEntry_value_get, _wrap_DataSetEntry_value_set);
SWIGV8_AddMemberVariable(_exports_DataSetEntry_class, "sibling", _wrap_DataSetEntry_sibling_get, _wrap_DataSetEntry_sibling_set);
SWIGV8_AddMemberVariable(_exports_sDataSet_class, "logicalDeviceName", _wrap_sDataSet_logicalDeviceName_get, _wrap_sDataSet_logicalDeviceName_set);
SWIGV8_AddMemberVariable(_exports_sDataSet_class, "name", _wrap_sDataSet_name_get, _wrap_sDataSet_name_set);
SWIGV8_AddMemberVariable(_exports_sDataSet_class, "elementCount", _wrap_sDataSet_elementCount_get, _wrap_sDataSet_elementCount_set);
SWIGV8_AddMemberVariable(_exports_sDataSet_class, "fcdas", _wrap_sDataSet_fcdas_get, _wrap_sDataSet_fcdas_set);
SWIGV8_AddMemberVariable(_exports_sDataSet_class, "sibling", _wrap_sDataSet_sibling_get, _wrap_sDataSet_sibling_set);
SWIGV8_AddMemberVariable(_exports_sReportControlBlock_class, "parent", _wrap_sReportControlBlock_parent_get, _wrap_sReportControlBlock_parent_set);
SWIGV8_AddMemberVariable(_exports_sReportControlBlock_class, "name", _wrap_sReportControlBlock_name_get, _wrap_sReportControlBlock_name_set);
SWIGV8_AddMemberVariable(_exports_sReportControlBlock_class, "rptId", _wrap_sReportControlBlock_rptId_get, _wrap_sReportControlBlock_rptId_set);
SWIGV8_AddMemberVariable(_exports_sReportControlBlock_class, "buffered", _wrap_sReportControlBlock_buffered_get, _wrap_sReportControlBlock_buffered_set);
SWIGV8_AddMemberVariable(_exports_sReportControlBlock_class, "dataSetName", _wrap_sReportControlBlock_dataSetName_get, _wrap_sReportControlBlock_dataSetName_set);
SWIGV8_AddMemberVariable(_exports_sReportControlBlock_class, "confRef", _wrap_sReportControlBlock_confRef_get, _wrap_sReportControlBlock_confRef_set);
SWIGV8_AddMemberVariable(_exports_sReportControlBlock_class, "trgOps", _wrap_sReportControlBlock_trgOps_get, _wrap_sReportControlBlock_trgOps_set);
SWIGV8_AddMemberVariable(_exports_sReportControlBlock_class, "options", _wrap_sReportControlBlock_options_get, _wrap_sReportControlBlock_options_set);
SWIGV8_AddMemberVariable(_exports_sReportControlBlock_class, "bufferTime", _wrap_sReportControlBlock_bufferTime_get, _wrap_sReportControlBlock_bufferTime_set);
SWIGV8_AddMemberVariable(_exports_sReportControlBlock_class, "intPeriod", _wrap_sReportControlBlock_intPeriod_get, _wrap_sReportControlBlock_intPeriod_set);
SWIGV8_AddMemberVariable(_exports_sReportControlBlock_class, "clientReservation", _wrap_sReportControlBlock_clientReservation_get, _wrap_sReportControlBlock_clientReservation_set);
SWIGV8_AddMemberVariable(_exports_sReportControlBlock_class, "sibling", _wrap_sReportControlBlock_sibling_get, _wrap_sReportControlBlock_sibling_set);
SWIGV8_AddMemberVariable(_exports_sLogControlBlock_class, "parent", _wrap_sLogControlBlock_parent_get, _wrap_sLogControlBlock_parent_set);
SWIGV8_AddMemberVariable(_exports_sLogControlBlock_class, "name", _wrap_sLogControlBlock_name_get, _wrap_sLogControlBlock_name_set);
SWIGV8_AddMemberVariable(_exports_sLogControlBlock_class, "dataSetName", _wrap_sLogControlBlock_dataSetName_get, _wrap_sLogControlBlock_dataSetName_set);
SWIGV8_AddMemberVariable(_exports_sLogControlBlock_class, "logRef", _wrap_sLogControlBlock_logRef_get, _wrap_sLogControlBlock_logRef_set);
SWIGV8_AddMemberVariable(_exports_sLogControlBlock_class, "trgOps", _wrap_sLogControlBlock_trgOps_get, _wrap_sLogControlBlock_trgOps_set);
SWIGV8_AddMemberVariable(_exports_sLogControlBlock_class, "intPeriod", _wrap_sLogControlBlock_intPeriod_get, _wrap_sLogControlBlock_intPeriod_set);
SWIGV8_AddMemberVariable(_exports_sLogControlBlock_class, "logEna", _wrap_sLogControlBlock_logEna_get, _wrap_sLogControlBlock_logEna_set);
SWIGV8_AddMemberVariable(_exports_sLogControlBlock_class, "reasonCode", _wrap_sLogControlBlock_reasonCode_get, _wrap_sLogControlBlock_reasonCode_set);
SWIGV8_AddMemberVariable(_exports_sLogControlBlock_class, "sibling", _wrap_sLogControlBlock_sibling_get, _wrap_sLogControlBlock_sibling_set);
SWIGV8_AddMemberVariable(_exports_sLog_class, "parent", _wrap_sLog_parent_get, _wrap_sLog_parent_set);
SWIGV8_AddMemberVariable(_exports_sLog_class, "name", _wrap_sLog_name_get, _wrap_sLog_name_set);
SWIGV8_AddMemberVariable(_exports_sLog_class, "sibling", _wrap_sLog_sibling_get, _wrap_sLog_sibling_set);
SWIGV8_AddMemberVariable(_exports_sSettingGroupControlBlock_class, "parent", _wrap_sSettingGroupControlBlock_parent_get, _wrap_sSettingGroupControlBlock_parent_set);
SWIGV8_AddMemberVariable(_exports_sSettingGroupControlBlock_class, "actSG", _wrap_sSettingGroupControlBlock_actSG_get, _wrap_sSettingGroupControlBlock_actSG_set);
SWIGV8_AddMemberVariable(_exports_sSettingGroupControlBlock_class, "numOfSGs", _wrap_sSettingGroupControlBlock_numOfSGs_get, _wrap_sSettingGroupControlBlock_numOfSGs_set);
SWIGV8_AddMemberVariable(_exports_sSettingGroupControlBlock_class, "editSG", _wrap_sSettingGroupControlBlock_editSG_get, _wrap_sSettingGroupControlBlock_editSG_set);
SWIGV8_AddMemberVariable(_exports_sSettingGroupControlBlock_class, "cnfEdit", _wrap_sSettingGroupControlBlock_cnfEdit_get, _wrap_sSettingGroupControlBlock_cnfEdit_set);
SWIGV8_AddMemberVariable(_exports_sSettingGroupControlBlock_class, "timestamp", _wrap_sSettingGroupControlBlock_timestamp_get, _wrap_sSettingGroupControlBlock_timestamp_set);
SWIGV8_AddMemberVariable(_exports_sSettingGroupControlBlock_class, "resvTms", _wrap_sSettingGroupControlBlock_resvTms_get, _wrap_sSettingGroupControlBlock_resvTms_set);
SWIGV8_AddMemberVariable(_exports_sSettingGroupControlBlock_class, "sibling", _wrap_sSettingGroupControlBlock_sibling_get, _wrap_sSettingGroupControlBlock_sibling_set);
SWIGV8_AddMemberVariable(_exports_sGSEControlBlock_class, "parent", _wrap_sGSEControlBlock_parent_get, _wrap_sGSEControlBlock_parent_set);
SWIGV8_AddMemberVariable(_exports_sGSEControlBlock_class, "name", _wrap_sGSEControlBlock_name_get, _wrap_sGSEControlBlock_name_set);
SWIGV8_AddMemberVariable(_exports_sGSEControlBlock_class, "appId", _wrap_sGSEControlBlock_appId_get, _wrap_sGSEControlBlock_appId_set);
SWIGV8_AddMemberVariable(_exports_sGSEControlBlock_class, "dataSetName", _wrap_sGSEControlBlock_dataSetName_get, _wrap_sGSEControlBlock_dataSetName_set);
SWIGV8_AddMemberVariable(_exports_sGSEControlBlock_class, "confRev", _wrap_sGSEControlBlock_confRev_get, _wrap_sGSEControlBlock_confRev_set);
SWIGV8_AddMemberVariable(_exports_sGSEControlBlock_class, "fixedOffs", _wrap_sGSEControlBlock_fixedOffs_get, _wrap_sGSEControlBlock_fixedOffs_set);
SWIGV8_AddMemberVariable(_exports_sGSEControlBlock_class, "address", _wrap_sGSEControlBlock_address_get, _wrap_sGSEControlBlock_address_set);
SWIGV8_AddMemberVariable(_exports_sGSEControlBlock_class, "minTime", _wrap_sGSEControlBlock_minTime_get, _wrap_sGSEControlBlock_minTime_set);
SWIGV8_AddMemberVariable(_exports_sGSEControlBlock_class, "maxTime", _wrap_sGSEControlBlock_maxTime_get, _wrap_sGSEControlBlock_maxTime_set);
SWIGV8_AddMemberVariable(_exports_sGSEControlBlock_class, "sibling", _wrap_sGSEControlBlock_sibling_get, _wrap_sGSEControlBlock_sibling_set);
SWIGV8_AddMemberVariable(_exports_sSVControlBlock_class, "parent", _wrap_sSVControlBlock_parent_get, _wrap_sSVControlBlock_parent_set);
SWIGV8_AddMemberVariable(_exports_sSVControlBlock_class, "name", _wrap_sSVControlBlock_name_get, _wrap_sSVControlBlock_name_set);
SWIGV8_AddMemberVariable(_exports_sSVControlBlock_class, "svId", _wrap_sSVControlBlock_svId_get, _wrap_sSVControlBlock_svId_set);
SWIGV8_AddMemberVariable(_exports_sSVControlBlock_class, "dataSetName", _wrap_sSVControlBlock_dataSetName_get, _wrap_sSVControlBlock_dataSetName_set);
SWIGV8_AddMemberVariable(_exports_sSVControlBlock_class, "optFlds", _wrap_sSVControlBlock_optFlds_get, _wrap_sSVControlBlock_optFlds_set);
SWIGV8_AddMemberVariable(_exports_sSVControlBlock_class, "smpMod", _wrap_sSVControlBlock_smpMod_get, _wrap_sSVControlBlock_smpMod_set);
SWIGV8_AddMemberVariable(_exports_sSVControlBlock_class, "smpRate", _wrap_sSVControlBlock_smpRate_get, _wrap_sSVControlBlock_smpRate_set);
SWIGV8_AddMemberVariable(_exports_sSVControlBlock_class, "confRev", _wrap_sSVControlBlock_confRev_get, _wrap_sSVControlBlock_confRev_set);
SWIGV8_AddMemberVariable(_exports_sSVControlBlock_class, "dstAddress", _wrap_sSVControlBlock_dstAddress_get, _wrap_sSVControlBlock_dstAddress_set);
SWIGV8_AddMemberVariable(_exports_sSVControlBlock_class, "isUnicast", _wrap_sSVControlBlock_isUnicast_get, _wrap_sSVControlBlock_isUnicast_set);
SWIGV8_AddMemberVariable(_exports_sSVControlBlock_class, "noASDU", _wrap_sSVControlBlock_noASDU_get, _wrap_sSVControlBlock_noASDU_set);
SWIGV8_AddMemberVariable(_exports_sSVControlBlock_class, "sibling", _wrap_sSVControlBlock_sibling_get, _wrap_sSVControlBlock_sibling_set);
SWIGV8_AddMemberVariable(_exports_sIedServerConfig_class, "reportBufferSize", _wrap_sIedServerConfig_reportBufferSize_get, _wrap_sIedServerConfig_reportBufferSize_set);
SWIGV8_AddMemberVariable(_exports_sIedServerConfig_class, "reportBufferSizeURCBs", _wrap_sIedServerConfig_reportBufferSizeURCBs_get, _wrap_sIedServerConfig_reportBufferSizeURCBs_set);
SWIGV8_AddMemberVariable(_exports_sIedServerConfig_class, "fileServiceBasepath", _wrap_sIedServerConfig_fileServiceBasepath_get, _wrap_sIedServerConfig_fileServiceBasepath_set);
SWIGV8_AddMemberVariable(_exports_sIedServerConfig_class, "enableFileService", _wrap_sIedServerConfig_enableFileService_get, _wrap_sIedServerConfig_enableFileService_set);
SWIGV8_AddMemberVariable(_exports_sIedServerConfig_class, "enableDynamicDataSetService", _wrap_sIedServerConfig_enableDynamicDataSetService_get, _wrap_sIedServerConfig_enableDynamicDataSetService_set);
SWIGV8_AddMemberVariable(_exports_sIedServerConfig_class, "maxAssociationSpecificDataSets", _wrap_sIedServerConfig_maxAssociationSpecificDataSets_get, _wrap_sIedServerConfig_maxAssociationSpecificDataSets_set);
SWIGV8_AddMemberVariable(_exports_sIedServerConfig_class, "maxDomainSpecificDataSets", _wrap_sIedServerConfig_maxDomainSpecificDataSets_get, _wrap_sIedServerConfig_maxDomainSpecificDataSets_set);
SWIGV8_AddMemberVariable(_exports_sIedServerConfig_class, "maxDataSetEntries", _wrap_sIedServerConfig_maxDataSetEntries_get, _wrap_sIedServerConfig_maxDataSetEntries_set);
SWIGV8_AddMemberVariable(_exports_sIedServerConfig_class, "enableLogService", _wrap_sIedServerConfig_enableLogService_get, _wrap_sIedServerConfig_enableLogService_set);
SWIGV8_AddMemberVariable(_exports_sIedServerConfig_class, "useIntegratedGoosePublisher", _wrap_sIedServerConfig_useIntegratedGoosePublisher_get, _wrap_sIedServerConfig_useIntegratedGoosePublisher_set);
SWIGV8_AddMemberVariable(_exports_sIedServerConfig_class, "edition", _wrap_sIedServerConfig_edition_get, _wrap_sIedServerConfig_edition_set);
SWIGV8_AddMemberVariable(_exports_sIedServerConfig_class, "maxMmsConnections", _wrap_sIedServerConfig_maxMmsConnections_get, _wrap_sIedServerConfig_maxMmsConnections_set);
SWIGV8_AddMemberVariable(_exports_sIedServerConfig_class, "enableEditSG", _wrap_sIedServerConfig_enableEditSG_get, _wrap_sIedServerConfig_enableEditSG_set);
SWIGV8_AddMemberVariable(_exports_sIedServerConfig_class, "enableResvTmsForSGCB", _wrap_sIedServerConfig_enableResvTmsForSGCB_get, _wrap_sIedServerConfig_enableResvTmsForSGCB_set);
SWIGV8_AddMemberVariable(_exports_sIedServerConfig_class, "enableResvTmsForBRCB", _wrap_sIedServerConfig_enableResvTmsForBRCB_get, _wrap_sIedServerConfig_enableResvTmsForBRCB_set);
SWIGV8_AddMemberVariable(_exports_sIedServerConfig_class, "enableOwnerForRCB", _wrap_sIedServerConfig_enableOwnerForRCB_get, _wrap_sIedServerConfig_enableOwnerForRCB_set);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_ACCEPTED", exports_CONTROL_ACCEPTED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_WAITING_FOR_SELECT", exports_CONTROL_WAITING_FOR_SELECT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_HARDWARE_FAULT", exports_CONTROL_HARDWARE_FAULT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_TEMPORARILY_UNAVAILABLE", exports_CONTROL_TEMPORARILY_UNAVAILABLE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_OBJECT_ACCESS_DENIED", exports_CONTROL_OBJECT_ACCESS_DENIED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_OBJECT_UNDEFINED", exports_CONTROL_OBJECT_UNDEFINED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_VALUE_INVALID", exports_CONTROL_VALUE_INVALID_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_RESULT_FAILED", exports_CONTROL_RESULT_FAILED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_RESULT_OK", exports_CONTROL_RESULT_OK_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CONTROL_RESULT_WAITING", exports_CONTROL_RESULT_WAITING_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "SELECT_STATE_REASON_SELECTED", exports_SELECT_STATE_REASON_SELECTED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "SELECT_STATE_REASON_CANCELED", exports_SELECT_STATE_REASON_CANCELED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "SELECT_STATE_REASON_TIMEOUT", exports_SELECT_STATE_REASON_TIMEOUT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "SELECT_STATE_REASON_OPERATED", exports_SELECT_STATE_REASON_OPERATED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "SELECT_STATE_REASON_OPERATE_FAILED", exports_SELECT_STATE_REASON_OPERATE_FAILED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "SELECT_STATE_REASON_DISCONNECTED", exports_SELECT_STATE_REASON_DISCONNECTED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RCB_EVENT_GET_PARAMETER", exports_RCB_EVENT_GET_PARAMETER_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RCB_EVENT_SET_PARAMETER", exports_RCB_EVENT_SET_PARAMETER_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RCB_EVENT_UNRESERVED", exports_RCB_EVENT_UNRESERVED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RCB_EVENT_RESERVED", exports_RCB_EVENT_RESERVED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RCB_EVENT_ENABLE", exports_RCB_EVENT_ENABLE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RCB_EVENT_DISABLE", exports_RCB_EVENT_DISABLE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RCB_EVENT_GI", exports_RCB_EVENT_GI_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RCB_EVENT_PURGEBUF", exports_RCB_EVENT_PURGEBUF_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_SVCB_EVENT_ENABLE", exports_IEC61850_SVCB_EVENT_ENABLE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_SVCB_EVENT_DISABLE", exports_IEC61850_SVCB_EVENT_DISABLE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_GOCB_EVENT_ENABLE", exports_IEC61850_GOCB_EVENT_ENABLE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "IEC61850_GOCB_EVENT_DISABLE", exports_IEC61850_GOCB_EVENT_DISABLE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ACCESS_POLICY_ALLOW", exports_ACCESS_POLICY_ALLOW_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "ACCESS_POLICY_DENY", exports_ACCESS_POLICY_DENY_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_PICS_SUBST", exports_CDC_OPTION_PICS_SUBST_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_BLK_ENA", exports_CDC_OPTION_BLK_ENA_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_DESC", exports_CDC_OPTION_DESC_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_DESC_UNICODE", exports_CDC_OPTION_DESC_UNICODE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_AC_DLNDA", exports_CDC_OPTION_AC_DLNDA_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_AC_DLN", exports_CDC_OPTION_AC_DLN_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_UNIT", exports_CDC_OPTION_UNIT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_FROZEN_VALUE", exports_CDC_OPTION_FROZEN_VALUE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_ADDR", exports_CDC_OPTION_ADDR_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_ADDINFO", exports_CDC_OPTION_ADDINFO_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_INST_MAG", exports_CDC_OPTION_INST_MAG_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_RANGE", exports_CDC_OPTION_RANGE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_UNIT_MULTIPLIER", exports_CDC_OPTION_UNIT_MULTIPLIER_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_AC_SCAV", exports_CDC_OPTION_AC_SCAV_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_MIN", exports_CDC_OPTION_MIN_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_MAX", exports_CDC_OPTION_MAX_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_AC_CLC_O", exports_CDC_OPTION_AC_CLC_O_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_RANGE_ANG", exports_CDC_OPTION_RANGE_ANG_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_PHASE_A", exports_CDC_OPTION_PHASE_A_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_PHASE_B", exports_CDC_OPTION_PHASE_B_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_PHASE_C", exports_CDC_OPTION_PHASE_C_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_PHASE_NEUT", exports_CDC_OPTION_PHASE_NEUT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_PHASES_ABC", exports_CDC_OPTION_PHASES_ABC_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_PHASES_ALL", exports_CDC_OPTION_PHASES_ALL_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_STEP_SIZE", exports_CDC_OPTION_STEP_SIZE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_ANGLE_REF", exports_CDC_OPTION_ANGLE_REF_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_DPL_HWREV", exports_CDC_OPTION_DPL_HWREV_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_DPL_SWREV", exports_CDC_OPTION_DPL_SWREV_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_DPL_SERNUM", exports_CDC_OPTION_DPL_SERNUM_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_DPL_MODEL", exports_CDC_OPTION_DPL_MODEL_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_DPL_LOCATION", exports_CDC_OPTION_DPL_LOCATION_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_AC_LN0_M", exports_CDC_OPTION_AC_LN0_M_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_AC_LN0_EX", exports_CDC_OPTION_AC_LN0_EX_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_AC_DLD_M", exports_CDC_OPTION_AC_DLD_M_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_CTL_MODEL_NONE", exports_CDC_CTL_MODEL_NONE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_CTL_MODEL_DIRECT_NORMAL", exports_CDC_CTL_MODEL_DIRECT_NORMAL_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_CTL_MODEL_SBO_NORMAL", exports_CDC_CTL_MODEL_SBO_NORMAL_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_CTL_MODEL_DIRECT_ENHANCED", exports_CDC_CTL_MODEL_DIRECT_ENHANCED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_CTL_MODEL_SBO_ENHANCED", exports_CDC_CTL_MODEL_SBO_ENHANCED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_CTL_MODEL_HAS_CANCEL", exports_CDC_CTL_MODEL_HAS_CANCEL_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_CTL_MODEL_IS_TIME_ACTIVATED", exports_CDC_CTL_MODEL_IS_TIME_ACTIVATED_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_CTL_OPTION_ORIGIN", exports_CDC_CTL_OPTION_ORIGIN_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_CTL_OPTION_CTL_NUM", exports_CDC_CTL_OPTION_CTL_NUM_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_CTL_OPTION_ST_SELD", exports_CDC_CTL_OPTION_ST_SELD_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_CTL_OPTION_OP_RCVD", exports_CDC_CTL_OPTION_OP_RCVD_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_CTL_OPTION_OP_OK", exports_CDC_CTL_OPTION_OP_OK_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_CTL_OPTION_T_OP_OK", exports_CDC_CTL_OPTION_T_OP_OK_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_CTL_OPTION_SBO_TIMEOUT", exports_CDC_CTL_OPTION_SBO_TIMEOUT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_CTL_OPTION_SBO_CLASS", exports_CDC_CTL_OPTION_SBO_CLASS_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_CTL_OPTION_OPER_TIMEOUT", exports_CDC_CTL_OPTION_OPER_TIMEOUT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_61400_MIN_MX_VAL", exports_CDC_OPTION_61400_MIN_MX_VAL_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_61400_MAX_MX_VAL", exports_CDC_OPTION_61400_MAX_MX_VAL_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_61400_TOT_AV_VAL", exports_CDC_OPTION_61400_TOT_AV_VAL_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_61400_SDV_VAL", exports_CDC_OPTION_61400_SDV_VAL_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_61400_INC_RATE", exports_CDC_OPTION_61400_INC_RATE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_61400_DEC_RATE", exports_CDC_OPTION_61400_DEC_RATE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_61400_SP_ACS", exports_CDC_OPTION_61400_SP_ACS_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_61400_CHA_PER_RS", exports_CDC_OPTION_61400_CHA_PER_RS_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_61400_CM_ACS", exports_CDC_OPTION_61400_CM_ACS_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_61400_TM_TOT", exports_CDC_OPTION_61400_TM_TOT_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_61400_COUNTING_DAILY", exports_CDC_OPTION_61400_COUNTING_DAILY_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_61400_COUNTING_MONTHLY", exports_CDC_OPTION_61400_COUNTING_MONTHLY_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_61400_COUNTING_YEARLY", exports_CDC_OPTION_61400_COUNTING_YEARLY_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_61400_COUNTING_TOTAL", exports_CDC_OPTION_61400_COUNTING_TOTAL_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "CDC_OPTION_61400_COUNTING_ALL", exports_CDC_OPTION_61400_COUNTING_ALL_get, JS_veto_set_variable, context);
SWIGV8_AddMemberVariable(_exports_sLinkedList_class, "data", _wrap_sLinkedList_data_get, _wrap_sLinkedList_data_set);
SWIGV8_AddMemberVariable(_exports_sLinkedList_class, "next", _wrap_sLinkedList_next_get, _wrap_sLinkedList_next_set);
SWIGV8_AddStaticVariable(exports_obj, "GOOSE_PARSE_ERROR_NO_ERROR", exports_GOOSE_PARSE_ERROR_NO_ERROR_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "GOOSE_PARSE_ERROR_UNKNOWN_TAG", exports_GOOSE_PARSE_ERROR_UNKNOWN_TAG_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "GOOSE_PARSE_ERROR_TAGDECODE", exports_GOOSE_PARSE_ERROR_TAGDECODE_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "GOOSE_PARSE_ERROR_SUBLEVEL", exports_GOOSE_PARSE_ERROR_SUBLEVEL_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "GOOSE_PARSE_ERROR_OVERFLOW", exports_GOOSE_PARSE_ERROR_OVERFLOW_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "GOOSE_PARSE_ERROR_UNDERFLOW", exports_GOOSE_PARSE_ERROR_UNDERFLOW_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "GOOSE_PARSE_ERROR_TYPE_MISMATCH", exports_GOOSE_PARSE_ERROR_TYPE_MISMATCH_get, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "GOOSE_PARSE_ERROR_LENGTH_MISMATCH", exports_GOOSE_PARSE_ERROR_LENGTH_MISMATCH_get, JS_veto_set_variable, context);
SWIGV8_AddMemberVariable(_exports_CommParameters_class, "vlanPriority", _wrap_CommParameters_vlanPriority_get, _wrap_CommParameters_vlanPriority_set);
SWIGV8_AddMemberVariable(_exports_CommParameters_class, "vlanId", _wrap_CommParameters_vlanId_get, _wrap_CommParameters_vlanId_set);
SWIGV8_AddMemberVariable(_exports_CommParameters_class, "appId", _wrap_CommParameters_appId_get, _wrap_CommParameters_appId_set);
SWIGV8_AddMemberVariable(_exports_CommParameters_class, "dstAddress", _wrap_CommParameters_dstAddress_get, _wrap_CommParameters_dstAddress_set);


  /* setup inheritances */
  

  /* class instances */
  /* Class: LastApplError (_exports_LastApplError) */
SWIGV8_FUNCTION_TEMPLATE _exports_LastApplError_class_0 = SWIGV8_CreateClassTemplate("LastApplError");
_exports_LastApplError_class_0->SetCallHandler(_wrap_new_LastApplError);
_exports_LastApplError_class_0->Inherit(_exports_LastApplError_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_LastApplError_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_LastApplError_obj = _exports_LastApplError_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_LastApplError_obj = _exports_LastApplError_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: sAcseAuthenticationParameter (_exports_sAcseAuthenticationParameter) */
SWIGV8_FUNCTION_TEMPLATE _exports_sAcseAuthenticationParameter_class_0 = SWIGV8_CreateClassTemplate("sAcseAuthenticationParameter");
_exports_sAcseAuthenticationParameter_class_0->SetCallHandler(_wrap_new_sAcseAuthenticationParameter);
_exports_sAcseAuthenticationParameter_class_0->Inherit(_exports_sAcseAuthenticationParameter_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_sAcseAuthenticationParameter_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_sAcseAuthenticationParameter_obj = _exports_sAcseAuthenticationParameter_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_sAcseAuthenticationParameter_obj = _exports_sAcseAuthenticationParameter_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: TSelector (_exports_TSelector) */
SWIGV8_FUNCTION_TEMPLATE _exports_TSelector_class_0 = SWIGV8_CreateClassTemplate("TSelector");
_exports_TSelector_class_0->SetCallHandler(_wrap_new_TSelector);
_exports_TSelector_class_0->Inherit(_exports_TSelector_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_TSelector_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_TSelector_obj = _exports_TSelector_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_TSelector_obj = _exports_TSelector_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: SSelector (_exports_SSelector) */
SWIGV8_FUNCTION_TEMPLATE _exports_SSelector_class_0 = SWIGV8_CreateClassTemplate("SSelector");
_exports_SSelector_class_0->SetCallHandler(_wrap_new_SSelector);
_exports_SSelector_class_0->Inherit(_exports_SSelector_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_SSelector_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_SSelector_obj = _exports_SSelector_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_SSelector_obj = _exports_SSelector_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: PSelector (_exports_PSelector) */
SWIGV8_FUNCTION_TEMPLATE _exports_PSelector_class_0 = SWIGV8_CreateClassTemplate("PSelector");
_exports_PSelector_class_0->SetCallHandler(_wrap_new_PSelector);
_exports_PSelector_class_0->Inherit(_exports_PSelector_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_PSelector_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_PSelector_obj = _exports_PSelector_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_PSelector_obj = _exports_PSelector_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: sIsoConnectionParameters (_exports_sIsoConnectionParameters) */
SWIGV8_FUNCTION_TEMPLATE _exports_sIsoConnectionParameters_class_0 = SWIGV8_CreateClassTemplate("sIsoConnectionParameters");
_exports_sIsoConnectionParameters_class_0->SetCallHandler(_wrap_new_sIsoConnectionParameters);
_exports_sIsoConnectionParameters_class_0->Inherit(_exports_sIsoConnectionParameters_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_sIsoConnectionParameters_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_sIsoConnectionParameters_obj = _exports_sIsoConnectionParameters_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_sIsoConnectionParameters_obj = _exports_sIsoConnectionParameters_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: MmsConnectionParameters (_exports_MmsConnectionParameters) */
SWIGV8_FUNCTION_TEMPLATE _exports_MmsConnectionParameters_class_0 = SWIGV8_CreateClassTemplate("MmsConnectionParameters");
_exports_MmsConnectionParameters_class_0->SetCallHandler(_wrap_new_MmsConnectionParameters);
_exports_MmsConnectionParameters_class_0->Inherit(_exports_MmsConnectionParameters_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_MmsConnectionParameters_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_MmsConnectionParameters_obj = _exports_MmsConnectionParameters_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_MmsConnectionParameters_obj = _exports_MmsConnectionParameters_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: MmsServerIdentity (_exports_MmsServerIdentity) */
SWIGV8_FUNCTION_TEMPLATE _exports_MmsServerIdentity_class_0 = SWIGV8_CreateClassTemplate("MmsServerIdentity");
_exports_MmsServerIdentity_class_0->SetCallHandler(_wrap_new_MmsServerIdentity);
_exports_MmsServerIdentity_class_0->Inherit(_exports_MmsServerIdentity_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_MmsServerIdentity_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_MmsServerIdentity_obj = _exports_MmsServerIdentity_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_MmsServerIdentity_obj = _exports_MmsServerIdentity_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: sMmsJournalEntry (_exports_sMmsJournalEntry) */
SWIGV8_FUNCTION_TEMPLATE _exports_sMmsJournalEntry_class_0 = SWIGV8_CreateClassTemplate("sMmsJournalEntry");
_exports_sMmsJournalEntry_class_0->SetCallHandler(_wrap_new_sMmsJournalEntry);
_exports_sMmsJournalEntry_class_0->Inherit(_exports_sMmsJournalEntry_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_sMmsJournalEntry_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_sMmsJournalEntry_obj = _exports_sMmsJournalEntry_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_sMmsJournalEntry_obj = _exports_sMmsJournalEntry_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: sMmsJournalVariable (_exports_sMmsJournalVariable) */
SWIGV8_FUNCTION_TEMPLATE _exports_sMmsJournalVariable_class_0 = SWIGV8_CreateClassTemplate("sMmsJournalVariable");
_exports_sMmsJournalVariable_class_0->SetCallHandler(_wrap_new_sMmsJournalVariable);
_exports_sMmsJournalVariable_class_0->Inherit(_exports_sMmsJournalVariable_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_sMmsJournalVariable_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_sMmsJournalVariable_obj = _exports_sMmsJournalVariable_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_sMmsJournalVariable_obj = _exports_sMmsJournalVariable_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: PhyComAddress (_exports_PhyComAddress) */
SWIGV8_FUNCTION_TEMPLATE _exports_PhyComAddress_class_0 = SWIGV8_CreateClassTemplate("PhyComAddress");
_exports_PhyComAddress_class_0->SetCallHandler(_wrap_new_PhyComAddress);
_exports_PhyComAddress_class_0->Inherit(_exports_PhyComAddress_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_PhyComAddress_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_PhyComAddress_obj = _exports_PhyComAddress_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_PhyComAddress_obj = _exports_PhyComAddress_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: Timestamp (_exports_Timestamp) */
SWIGV8_FUNCTION_TEMPLATE _exports_Timestamp_class_0 = SWIGV8_CreateClassTemplate("Timestamp");
_exports_Timestamp_class_0->SetCallHandler(_wrap_new_Timestamp);
_exports_Timestamp_class_0->Inherit(_exports_Timestamp_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_Timestamp_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_Timestamp_obj = _exports_Timestamp_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_Timestamp_obj = _exports_Timestamp_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: MmsAccessSpecifier (_exports_MmsAccessSpecifier) */
SWIGV8_FUNCTION_TEMPLATE _exports_MmsAccessSpecifier_class_0 = SWIGV8_CreateClassTemplate("MmsAccessSpecifier");
_exports_MmsAccessSpecifier_class_0->SetCallHandler(_wrap_new_MmsAccessSpecifier);
_exports_MmsAccessSpecifier_class_0->Inherit(_exports_MmsAccessSpecifier_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_MmsAccessSpecifier_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_MmsAccessSpecifier_obj = _exports_MmsAccessSpecifier_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_MmsAccessSpecifier_obj = _exports_MmsAccessSpecifier_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: MmsVariableAccessSpecification (_exports_MmsVariableAccessSpecification) */
SWIGV8_FUNCTION_TEMPLATE _exports_MmsVariableAccessSpecification_class_0 = SWIGV8_CreateClassTemplate("MmsVariableAccessSpecification");
_exports_MmsVariableAccessSpecification_class_0->SetCallHandler(_wrap_new_MmsVariableAccessSpecification);
_exports_MmsVariableAccessSpecification_class_0->Inherit(_exports_MmsVariableAccessSpecification_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_MmsVariableAccessSpecification_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_MmsVariableAccessSpecification_obj = _exports_MmsVariableAccessSpecification_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_MmsVariableAccessSpecification_obj = _exports_MmsVariableAccessSpecification_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: ItuObjectIdentifier (_exports_ItuObjectIdentifier) */
SWIGV8_FUNCTION_TEMPLATE _exports_ItuObjectIdentifier_class_0 = SWIGV8_CreateClassTemplate("ItuObjectIdentifier");
_exports_ItuObjectIdentifier_class_0->SetCallHandler(_wrap_new_ItuObjectIdentifier);
_exports_ItuObjectIdentifier_class_0->Inherit(_exports_ItuObjectIdentifier_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_ItuObjectIdentifier_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_ItuObjectIdentifier_obj = _exports_ItuObjectIdentifier_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_ItuObjectIdentifier_obj = _exports_ItuObjectIdentifier_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: IsoApplicationReference (_exports_IsoApplicationReference) */
SWIGV8_FUNCTION_TEMPLATE _exports_IsoApplicationReference_class_0 = SWIGV8_CreateClassTemplate("IsoApplicationReference");
_exports_IsoApplicationReference_class_0->SetCallHandler(_wrap_new_IsoApplicationReference);
_exports_IsoApplicationReference_class_0->Inherit(_exports_IsoApplicationReference_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_IsoApplicationReference_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_IsoApplicationReference_obj = _exports_IsoApplicationReference_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_IsoApplicationReference_obj = _exports_IsoApplicationReference_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: sIedModel (_exports_sIedModel) */
SWIGV8_FUNCTION_TEMPLATE _exports_sIedModel_class_0 = SWIGV8_CreateClassTemplate("sIedModel");
_exports_sIedModel_class_0->SetCallHandler(_wrap_new_sIedModel);
_exports_sIedModel_class_0->Inherit(_exports_sIedModel_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_sIedModel_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_sIedModel_obj = _exports_sIedModel_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_sIedModel_obj = _exports_sIedModel_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: sLogicalDevice (_exports_sLogicalDevice) */
SWIGV8_FUNCTION_TEMPLATE _exports_sLogicalDevice_class_0 = SWIGV8_CreateClassTemplate("sLogicalDevice");
_exports_sLogicalDevice_class_0->SetCallHandler(_wrap_new_sLogicalDevice);
_exports_sLogicalDevice_class_0->Inherit(_exports_sLogicalDevice_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_sLogicalDevice_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_sLogicalDevice_obj = _exports_sLogicalDevice_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_sLogicalDevice_obj = _exports_sLogicalDevice_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: sModelNode (_exports_sModelNode) */
SWIGV8_FUNCTION_TEMPLATE _exports_sModelNode_class_0 = SWIGV8_CreateClassTemplate("sModelNode");
_exports_sModelNode_class_0->SetCallHandler(_wrap_new_sModelNode);
_exports_sModelNode_class_0->Inherit(_exports_sModelNode_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_sModelNode_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_sModelNode_obj = _exports_sModelNode_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_sModelNode_obj = _exports_sModelNode_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: sLogicalNode (_exports_sLogicalNode) */
SWIGV8_FUNCTION_TEMPLATE _exports_sLogicalNode_class_0 = SWIGV8_CreateClassTemplate("sLogicalNode");
_exports_sLogicalNode_class_0->SetCallHandler(_wrap_new_sLogicalNode);
_exports_sLogicalNode_class_0->Inherit(_exports_sLogicalNode_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_sLogicalNode_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_sLogicalNode_obj = _exports_sLogicalNode_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_sLogicalNode_obj = _exports_sLogicalNode_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: sDataObject (_exports_sDataObject) */
SWIGV8_FUNCTION_TEMPLATE _exports_sDataObject_class_0 = SWIGV8_CreateClassTemplate("sDataObject");
_exports_sDataObject_class_0->SetCallHandler(_wrap_new_sDataObject);
_exports_sDataObject_class_0->Inherit(_exports_sDataObject_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_sDataObject_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_sDataObject_obj = _exports_sDataObject_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_sDataObject_obj = _exports_sDataObject_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: sDataAttribute (_exports_sDataAttribute) */
SWIGV8_FUNCTION_TEMPLATE _exports_sDataAttribute_class_0 = SWIGV8_CreateClassTemplate("sDataAttribute");
_exports_sDataAttribute_class_0->SetCallHandler(_wrap_new_sDataAttribute);
_exports_sDataAttribute_class_0->Inherit(_exports_sDataAttribute_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_sDataAttribute_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_sDataAttribute_obj = _exports_sDataAttribute_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_sDataAttribute_obj = _exports_sDataAttribute_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: DataSetEntry (_exports_DataSetEntry) */
SWIGV8_FUNCTION_TEMPLATE _exports_DataSetEntry_class_0 = SWIGV8_CreateClassTemplate("DataSetEntry");
_exports_DataSetEntry_class_0->SetCallHandler(_wrap_new_DataSetEntry);
_exports_DataSetEntry_class_0->Inherit(_exports_DataSetEntry_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_DataSetEntry_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_DataSetEntry_obj = _exports_DataSetEntry_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_DataSetEntry_obj = _exports_DataSetEntry_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: sDataSet (_exports_sDataSet) */
SWIGV8_FUNCTION_TEMPLATE _exports_sDataSet_class_0 = SWIGV8_CreateClassTemplate("sDataSet");
_exports_sDataSet_class_0->SetCallHandler(_wrap_new_sDataSet);
_exports_sDataSet_class_0->Inherit(_exports_sDataSet_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_sDataSet_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_sDataSet_obj = _exports_sDataSet_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_sDataSet_obj = _exports_sDataSet_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: sReportControlBlock (_exports_sReportControlBlock) */
SWIGV8_FUNCTION_TEMPLATE _exports_sReportControlBlock_class_0 = SWIGV8_CreateClassTemplate("sReportControlBlock");
_exports_sReportControlBlock_class_0->SetCallHandler(_wrap_new_sReportControlBlock);
_exports_sReportControlBlock_class_0->Inherit(_exports_sReportControlBlock_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_sReportControlBlock_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_sReportControlBlock_obj = _exports_sReportControlBlock_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_sReportControlBlock_obj = _exports_sReportControlBlock_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: sLogControlBlock (_exports_sLogControlBlock) */
SWIGV8_FUNCTION_TEMPLATE _exports_sLogControlBlock_class_0 = SWIGV8_CreateClassTemplate("sLogControlBlock");
_exports_sLogControlBlock_class_0->SetCallHandler(_wrap_new_sLogControlBlock);
_exports_sLogControlBlock_class_0->Inherit(_exports_sLogControlBlock_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_sLogControlBlock_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_sLogControlBlock_obj = _exports_sLogControlBlock_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_sLogControlBlock_obj = _exports_sLogControlBlock_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: sLog (_exports_sLog) */
SWIGV8_FUNCTION_TEMPLATE _exports_sLog_class_0 = SWIGV8_CreateClassTemplate("sLog");
_exports_sLog_class_0->SetCallHandler(_wrap_new_sLog);
_exports_sLog_class_0->Inherit(_exports_sLog_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_sLog_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_sLog_obj = _exports_sLog_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_sLog_obj = _exports_sLog_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: sSettingGroupControlBlock (_exports_sSettingGroupControlBlock) */
SWIGV8_FUNCTION_TEMPLATE _exports_sSettingGroupControlBlock_class_0 = SWIGV8_CreateClassTemplate("sSettingGroupControlBlock");
_exports_sSettingGroupControlBlock_class_0->SetCallHandler(_wrap_new_sSettingGroupControlBlock);
_exports_sSettingGroupControlBlock_class_0->Inherit(_exports_sSettingGroupControlBlock_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_sSettingGroupControlBlock_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_sSettingGroupControlBlock_obj = _exports_sSettingGroupControlBlock_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_sSettingGroupControlBlock_obj = _exports_sSettingGroupControlBlock_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: sGSEControlBlock (_exports_sGSEControlBlock) */
SWIGV8_FUNCTION_TEMPLATE _exports_sGSEControlBlock_class_0 = SWIGV8_CreateClassTemplate("sGSEControlBlock");
_exports_sGSEControlBlock_class_0->SetCallHandler(_wrap_new_sGSEControlBlock);
_exports_sGSEControlBlock_class_0->Inherit(_exports_sGSEControlBlock_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_sGSEControlBlock_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_sGSEControlBlock_obj = _exports_sGSEControlBlock_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_sGSEControlBlock_obj = _exports_sGSEControlBlock_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: sSVControlBlock (_exports_sSVControlBlock) */
SWIGV8_FUNCTION_TEMPLATE _exports_sSVControlBlock_class_0 = SWIGV8_CreateClassTemplate("sSVControlBlock");
_exports_sSVControlBlock_class_0->SetCallHandler(_wrap_new_sSVControlBlock);
_exports_sSVControlBlock_class_0->Inherit(_exports_sSVControlBlock_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_sSVControlBlock_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_sSVControlBlock_obj = _exports_sSVControlBlock_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_sSVControlBlock_obj = _exports_sSVControlBlock_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: sIedServerConfig (_exports_sIedServerConfig) */
SWIGV8_FUNCTION_TEMPLATE _exports_sIedServerConfig_class_0 = SWIGV8_CreateClassTemplate("sIedServerConfig");
_exports_sIedServerConfig_class_0->SetCallHandler(_wrap_new_sIedServerConfig);
_exports_sIedServerConfig_class_0->Inherit(_exports_sIedServerConfig_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_sIedServerConfig_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_sIedServerConfig_obj = _exports_sIedServerConfig_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_sIedServerConfig_obj = _exports_sIedServerConfig_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: sLinkedList (_exports_sLinkedList) */
SWIGV8_FUNCTION_TEMPLATE _exports_sLinkedList_class_0 = SWIGV8_CreateClassTemplate("sLinkedList");
_exports_sLinkedList_class_0->SetCallHandler(_wrap_new_sLinkedList);
_exports_sLinkedList_class_0->Inherit(_exports_sLinkedList_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_sLinkedList_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_sLinkedList_obj = _exports_sLinkedList_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_sLinkedList_obj = _exports_sLinkedList_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: CommParameters (_exports_CommParameters) */
SWIGV8_FUNCTION_TEMPLATE _exports_CommParameters_class_0 = SWIGV8_CreateClassTemplate("CommParameters");
_exports_CommParameters_class_0->SetCallHandler(_wrap_new_CommParameters);
_exports_CommParameters_class_0->Inherit(_exports_CommParameters_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_CommParameters_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_CommParameters_obj = _exports_CommParameters_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_CommParameters_obj = _exports_CommParameters_class_0->GetFunction(context).ToLocalChecked();
#endif


  /* add static class functions and variables */
  SWIGV8_AddStaticFunction(exports_obj, "IedConnection_create", _wrap_IedConnection_create, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_createEx", _wrap_IedConnection_createEx, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_createWithTlsSupport", _wrap_IedConnection_createWithTlsSupport, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_destroy", _wrap_IedConnection_destroy, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_setConnectTimeout", _wrap_IedConnection_setConnectTimeout, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_setRequestTimeout", _wrap_IedConnection_setRequestTimeout, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getRequestTimeout", _wrap_IedConnection_getRequestTimeout, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_setTimeQuality", _wrap_IedConnection_setTimeQuality, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_tick", _wrap_IedConnection_tick, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_connect", _wrap_IedConnection_connect, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_connectAsync", _wrap_IedConnection_connectAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_abort", _wrap_IedConnection_abort, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_abortAsync", _wrap_IedConnection_abortAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_release", _wrap_IedConnection_release, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_releaseAsync", _wrap_IedConnection_releaseAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_close", _wrap_IedConnection_close, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getState", _wrap_IedConnection_getState, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getLastApplError", _wrap_IedConnection_getLastApplError, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_installConnectionClosedHandler", _wrap_IedConnection_installConnectionClosedHandler, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_installStateChangedHandler", _wrap_IedConnection_installStateChangedHandler, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getMmsConnection", _wrap_IedConnection_getMmsConnection, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientSVControlBlock_create", _wrap_ClientSVControlBlock_create, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientSVControlBlock_destroy", _wrap_ClientSVControlBlock_destroy, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientSVControlBlock_isMulticast", _wrap_ClientSVControlBlock_isMulticast, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientSVControlBlock_getLastComError", _wrap_ClientSVControlBlock_getLastComError, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientSVControlBlock_setSvEna", _wrap_ClientSVControlBlock_setSvEna, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientSVControlBlock_getSvEna", _wrap_ClientSVControlBlock_getSvEna, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientSVControlBlock_setResv", _wrap_ClientSVControlBlock_setResv, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientSVControlBlock_getResv", _wrap_ClientSVControlBlock_getResv, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientSVControlBlock_getMsvID", _wrap_ClientSVControlBlock_getMsvID, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientSVControlBlock_getDatSet", _wrap_ClientSVControlBlock_getDatSet, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientSVControlBlock_getConfRev", _wrap_ClientSVControlBlock_getConfRev, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientSVControlBlock_getSmpRate", _wrap_ClientSVControlBlock_getSmpRate, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientSVControlBlock_getDstAddress", _wrap_ClientSVControlBlock_getDstAddress, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientSVControlBlock_getOptFlds", _wrap_ClientSVControlBlock_getOptFlds, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientSVControlBlock_getSmpMod", _wrap_ClientSVControlBlock_getSmpMod, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientSVControlBlock_getNoASDU", _wrap_ClientSVControlBlock_getNoASDU, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientGooseControlBlock_create", _wrap_ClientGooseControlBlock_create, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientGooseControlBlock_destroy", _wrap_ClientGooseControlBlock_destroy, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientGooseControlBlock_getGoEna", _wrap_ClientGooseControlBlock_getGoEna, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientGooseControlBlock_setGoEna", _wrap_ClientGooseControlBlock_setGoEna, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientGooseControlBlock_getGoID", _wrap_ClientGooseControlBlock_getGoID, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientGooseControlBlock_setGoID", _wrap_ClientGooseControlBlock_setGoID, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientGooseControlBlock_getDatSet", _wrap_ClientGooseControlBlock_getDatSet, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientGooseControlBlock_setDatSet", _wrap_ClientGooseControlBlock_setDatSet, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientGooseControlBlock_getConfRev", _wrap_ClientGooseControlBlock_getConfRev, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientGooseControlBlock_getNdsComm", _wrap_ClientGooseControlBlock_getNdsComm, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientGooseControlBlock_getMinTime", _wrap_ClientGooseControlBlock_getMinTime, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientGooseControlBlock_getMaxTime", _wrap_ClientGooseControlBlock_getMaxTime, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientGooseControlBlock_getFixedOffs", _wrap_ClientGooseControlBlock_getFixedOffs, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientGooseControlBlock_getDstAddress", _wrap_ClientGooseControlBlock_getDstAddress, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientGooseControlBlock_setDstAddress", _wrap_ClientGooseControlBlock_setDstAddress, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientGooseControlBlock_getDstAddress_addr", _wrap_ClientGooseControlBlock_getDstAddress_addr, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientGooseControlBlock_setDstAddress_addr", _wrap_ClientGooseControlBlock_setDstAddress_addr, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientGooseControlBlock_getDstAddress_priority", _wrap_ClientGooseControlBlock_getDstAddress_priority, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientGooseControlBlock_setDstAddress_priority", _wrap_ClientGooseControlBlock_setDstAddress_priority, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientGooseControlBlock_getDstAddress_vid", _wrap_ClientGooseControlBlock_getDstAddress_vid, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientGooseControlBlock_setDstAddress_vid", _wrap_ClientGooseControlBlock_setDstAddress_vid, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientGooseControlBlock_getDstAddress_appid", _wrap_ClientGooseControlBlock_getDstAddress_appid, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientGooseControlBlock_setDstAddress_appid", _wrap_ClientGooseControlBlock_setDstAddress_appid, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getGoCBValues", _wrap_IedConnection_getGoCBValues, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_setGoCBValues", _wrap_IedConnection_setGoCBValues, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_readObject", _wrap_IedConnection_readObject, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_readObjectAsync", _wrap_IedConnection_readObjectAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_writeObject", _wrap_IedConnection_writeObject, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_writeObjectAsync", _wrap_IedConnection_writeObjectAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_readBooleanValue", _wrap_IedConnection_readBooleanValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_readFloatValue", _wrap_IedConnection_readFloatValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_readStringValue", _wrap_IedConnection_readStringValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_readInt32Value", _wrap_IedConnection_readInt32Value, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_readInt64Value", _wrap_IedConnection_readInt64Value, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_readUnsigned32Value", _wrap_IedConnection_readUnsigned32Value, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_readTimestampValue", _wrap_IedConnection_readTimestampValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_readQualityValue", _wrap_IedConnection_readQualityValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_writeBooleanValue", _wrap_IedConnection_writeBooleanValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_writeInt32Value", _wrap_IedConnection_writeInt32Value, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_writeUnsigned32Value", _wrap_IedConnection_writeUnsigned32Value, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_writeFloatValue", _wrap_IedConnection_writeFloatValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_writeVisibleStringValue", _wrap_IedConnection_writeVisibleStringValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_writeOctetString", _wrap_IedConnection_writeOctetString, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getRCBValues", _wrap_IedConnection_getRCBValues, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getRCBValuesAsync", _wrap_IedConnection_getRCBValuesAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_setRCBValues", _wrap_IedConnection_setRCBValues, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_setRCBValuesAsync", _wrap_IedConnection_setRCBValuesAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_installReportHandler", _wrap_IedConnection_installReportHandler, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_uninstallReportHandler", _wrap_IedConnection_uninstallReportHandler, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_triggerGIReport", _wrap_IedConnection_triggerGIReport, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReport_getDataSetName", _wrap_ClientReport_getDataSetName, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReport_getDataSetValues", _wrap_ClientReport_getDataSetValues, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReport_getRcbReference", _wrap_ClientReport_getRcbReference, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReport_getRptId", _wrap_ClientReport_getRptId, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReport_getReasonForInclusion", _wrap_ClientReport_getReasonForInclusion, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReport_getEntryId", _wrap_ClientReport_getEntryId, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReport_hasTimestamp", _wrap_ClientReport_hasTimestamp, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReport_hasSeqNum", _wrap_ClientReport_hasSeqNum, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReport_getSeqNum", _wrap_ClientReport_getSeqNum, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReport_hasDataSetName", _wrap_ClientReport_hasDataSetName, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReport_hasReasonForInclusion", _wrap_ClientReport_hasReasonForInclusion, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReport_hasConfRev", _wrap_ClientReport_hasConfRev, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReport_getConfRev", _wrap_ClientReport_getConfRev, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReport_hasBufOvfl", _wrap_ClientReport_hasBufOvfl, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReport_getBufOvfl", _wrap_ClientReport_getBufOvfl, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReport_hasDataReference", _wrap_ClientReport_hasDataReference, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReport_getDataReference", _wrap_ClientReport_getDataReference, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReport_getTimestamp", _wrap_ClientReport_getTimestamp, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReport_hasSubSeqNum", _wrap_ClientReport_hasSubSeqNum, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReport_getSubSeqNum", _wrap_ClientReport_getSubSeqNum, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReport_getMoreSeqmentsFollow", _wrap_ClientReport_getMoreSeqmentsFollow, context);
SWIGV8_AddStaticFunction(exports_obj, "ReasonForInclusion_getValueAsString", _wrap_ReasonForInclusion_getValueAsString, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_create", _wrap_ClientReportControlBlock_create, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_destroy", _wrap_ClientReportControlBlock_destroy, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_getObjectReference", _wrap_ClientReportControlBlock_getObjectReference, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_isBuffered", _wrap_ClientReportControlBlock_isBuffered, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_getRptId", _wrap_ClientReportControlBlock_getRptId, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_setRptId", _wrap_ClientReportControlBlock_setRptId, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_getRptEna", _wrap_ClientReportControlBlock_getRptEna, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_setRptEna", _wrap_ClientReportControlBlock_setRptEna, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_getResv", _wrap_ClientReportControlBlock_getResv, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_setResv", _wrap_ClientReportControlBlock_setResv, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_getDataSetReference", _wrap_ClientReportControlBlock_getDataSetReference, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_setDataSetReference", _wrap_ClientReportControlBlock_setDataSetReference, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_getConfRev", _wrap_ClientReportControlBlock_getConfRev, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_getOptFlds", _wrap_ClientReportControlBlock_getOptFlds, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_setOptFlds", _wrap_ClientReportControlBlock_setOptFlds, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_getBufTm", _wrap_ClientReportControlBlock_getBufTm, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_setBufTm", _wrap_ClientReportControlBlock_setBufTm, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_getSqNum", _wrap_ClientReportControlBlock_getSqNum, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_getTrgOps", _wrap_ClientReportControlBlock_getTrgOps, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_setTrgOps", _wrap_ClientReportControlBlock_setTrgOps, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_getIntgPd", _wrap_ClientReportControlBlock_getIntgPd, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_setIntgPd", _wrap_ClientReportControlBlock_setIntgPd, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_getGI", _wrap_ClientReportControlBlock_getGI, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_setGI", _wrap_ClientReportControlBlock_setGI, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_getPurgeBuf", _wrap_ClientReportControlBlock_getPurgeBuf, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_setPurgeBuf", _wrap_ClientReportControlBlock_setPurgeBuf, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_hasResvTms", _wrap_ClientReportControlBlock_hasResvTms, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_getResvTms", _wrap_ClientReportControlBlock_getResvTms, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_setResvTms", _wrap_ClientReportControlBlock_setResvTms, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_getEntryId", _wrap_ClientReportControlBlock_getEntryId, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_setEntryId", _wrap_ClientReportControlBlock_setEntryId, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_getEntryTime", _wrap_ClientReportControlBlock_getEntryTime, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientReportControlBlock_getOwner", _wrap_ClientReportControlBlock_getOwner, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_readDataSetValues", _wrap_IedConnection_readDataSetValues, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_readDataSetValuesAsync", _wrap_IedConnection_readDataSetValuesAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_createDataSet", _wrap_IedConnection_createDataSet, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_createDataSetAsync", _wrap_IedConnection_createDataSetAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_deleteDataSet", _wrap_IedConnection_deleteDataSet, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_deleteDataSetAsync", _wrap_IedConnection_deleteDataSetAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getDataSetDirectory", _wrap_IedConnection_getDataSetDirectory, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getDataSetDirectoryAsync", _wrap_IedConnection_getDataSetDirectoryAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_writeDataSetValues", _wrap_IedConnection_writeDataSetValues, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_writeDataSetValuesAsync", _wrap_IedConnection_writeDataSetValuesAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientDataSet_destroy", _wrap_ClientDataSet_destroy, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientDataSet_getValues", _wrap_ClientDataSet_getValues, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientDataSet_getReference", _wrap_ClientDataSet_getReference, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientDataSet_getDataSetSize", _wrap_ClientDataSet_getDataSetSize, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_create", _wrap_ControlObjectClient_create, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_createEx", _wrap_ControlObjectClient_createEx, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_destroy", _wrap_ControlObjectClient_destroy, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_getObjectReference", _wrap_ControlObjectClient_getObjectReference, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_getControlModel", _wrap_ControlObjectClient_getControlModel, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_setControlModel", _wrap_ControlObjectClient_setControlModel, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_changeServerControlModel", _wrap_ControlObjectClient_changeServerControlModel, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_getCtlValType", _wrap_ControlObjectClient_getCtlValType, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_getLastError", _wrap_ControlObjectClient_getLastError, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_operate", _wrap_ControlObjectClient_operate, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_select", _wrap_ControlObjectClient_select, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_selectWithValue", _wrap_ControlObjectClient_selectWithValue, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_cancel", _wrap_ControlObjectClient_cancel, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_operateAsync", _wrap_ControlObjectClient_operateAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_selectAsync", _wrap_ControlObjectClient_selectAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_selectWithValueAsync", _wrap_ControlObjectClient_selectWithValueAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_cancelAsync", _wrap_ControlObjectClient_cancelAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_getLastApplError", _wrap_ControlObjectClient_getLastApplError, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_setTestMode", _wrap_ControlObjectClient_setTestMode, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_setOrigin", _wrap_ControlObjectClient_setOrigin, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_useConstantT", _wrap_ControlObjectClient_useConstantT, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_enableInterlockCheck", _wrap_ControlObjectClient_enableInterlockCheck, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_enableSynchroCheck", _wrap_ControlObjectClient_enableSynchroCheck, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_setCtlNum", _wrap_ControlObjectClient_setCtlNum, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_setInterlockCheck", _wrap_ControlObjectClient_setInterlockCheck, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_setSynchroCheck", _wrap_ControlObjectClient_setSynchroCheck, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlObjectClient_setCommandTerminationHandler", _wrap_ControlObjectClient_setCommandTerminationHandler, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getDeviceModelFromServer", _wrap_IedConnection_getDeviceModelFromServer, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getLogicalDeviceList", _wrap_IedConnection_getLogicalDeviceList, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getServerDirectory", _wrap_IedConnection_getServerDirectory, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getLogicalDeviceDirectory", _wrap_IedConnection_getLogicalDeviceDirectory, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getLogicalNodeVariables", _wrap_IedConnection_getLogicalNodeVariables, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getLogicalNodeDirectory", _wrap_IedConnection_getLogicalNodeDirectory, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getDataDirectory", _wrap_IedConnection_getDataDirectory, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getDataDirectoryFC", _wrap_IedConnection_getDataDirectoryFC, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getDataDirectoryByFC", _wrap_IedConnection_getDataDirectoryByFC, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getVariableSpecification", _wrap_IedConnection_getVariableSpecification, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getLogicalDeviceVariables", _wrap_IedConnection_getLogicalDeviceVariables, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getLogicalDeviceDataSets", _wrap_IedConnection_getLogicalDeviceDataSets, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getServerDirectoryAsync", _wrap_IedConnection_getServerDirectoryAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getLogicalDeviceVariablesAsync", _wrap_IedConnection_getLogicalDeviceVariablesAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getLogicalDeviceDataSetsAsync", _wrap_IedConnection_getLogicalDeviceDataSetsAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getVariableSpecificationAsync", _wrap_IedConnection_getVariableSpecificationAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_queryLogByTime", _wrap_IedConnection_queryLogByTime, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_queryLogAfter", _wrap_IedConnection_queryLogAfter, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_queryLogByTimeAsync", _wrap_IedConnection_queryLogByTimeAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_queryLogAfterAsync", _wrap_IedConnection_queryLogAfterAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "FileDirectoryEntry_create", _wrap_FileDirectoryEntry_create, context);
SWIGV8_AddStaticFunction(exports_obj, "FileDirectoryEntry_destroy", _wrap_FileDirectoryEntry_destroy, context);
SWIGV8_AddStaticFunction(exports_obj, "FileDirectoryEntry_getFileName", _wrap_FileDirectoryEntry_getFileName, context);
SWIGV8_AddStaticFunction(exports_obj, "FileDirectoryEntry_getFileSize", _wrap_FileDirectoryEntry_getFileSize, context);
SWIGV8_AddStaticFunction(exports_obj, "FileDirectoryEntry_getLastModified", _wrap_FileDirectoryEntry_getLastModified, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getFileDirectory", _wrap_IedConnection_getFileDirectory, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getFileDirectoryEx", _wrap_IedConnection_getFileDirectoryEx, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getFileDirectoryAsyncEx", _wrap_IedConnection_getFileDirectoryAsyncEx, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getFile", _wrap_IedConnection_getFile, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_getFileAsync", _wrap_IedConnection_getFileAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_setFilestoreBasepath", _wrap_IedConnection_setFilestoreBasepath, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_setFile", _wrap_IedConnection_setFile, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_setFileAsync", _wrap_IedConnection_setFileAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_deleteFile", _wrap_IedConnection_deleteFile, context);
SWIGV8_AddStaticFunction(exports_obj, "IedConnection_deleteFileAsync", _wrap_IedConnection_deleteFileAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "AcseAuthenticationParameter_create", _wrap_AcseAuthenticationParameter_create, context);
SWIGV8_AddStaticFunction(exports_obj, "AcseAuthenticationParameter_destroy", _wrap_AcseAuthenticationParameter_destroy, context);
SWIGV8_AddStaticFunction(exports_obj, "AcseAuthenticationParameter_setAuthMechanism", _wrap_AcseAuthenticationParameter_setAuthMechanism, context);
SWIGV8_AddStaticFunction(exports_obj, "AcseAuthenticationParameter_setPassword", _wrap_AcseAuthenticationParameter_setPassword, context);
SWIGV8_AddStaticFunction(exports_obj, "IsoConnectionParameters_create", _wrap_IsoConnectionParameters_create, context);
SWIGV8_AddStaticFunction(exports_obj, "IsoConnectionParameters_destroy", _wrap_IsoConnectionParameters_destroy, context);
SWIGV8_AddStaticFunction(exports_obj, "IsoConnectionParameters_setTlsConfiguration", _wrap_IsoConnectionParameters_setTlsConfiguration, context);
SWIGV8_AddStaticFunction(exports_obj, "IsoConnectionParameters_setAcseAuthenticationParameter", _wrap_IsoConnectionParameters_setAcseAuthenticationParameter, context);
SWIGV8_AddStaticFunction(exports_obj, "IsoConnectionParameters_setTcpParameters", _wrap_IsoConnectionParameters_setTcpParameters, context);
SWIGV8_AddStaticFunction(exports_obj, "IsoConnectionParameters_setRemoteApTitle", _wrap_IsoConnectionParameters_setRemoteApTitle, context);
SWIGV8_AddStaticFunction(exports_obj, "IsoConnectionParameters_setRemoteAddresses", _wrap_IsoConnectionParameters_setRemoteAddresses, context);
SWIGV8_AddStaticFunction(exports_obj, "IsoConnectionParameters_setLocalApTitle", _wrap_IsoConnectionParameters_setLocalApTitle, context);
SWIGV8_AddStaticFunction(exports_obj, "IsoConnectionParameters_setLocalAddresses", _wrap_IsoConnectionParameters_setLocalAddresses, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_create", _wrap_MmsConnection_create, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_createSecure", _wrap_MmsConnection_createSecure, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_createNonThreaded", _wrap_MmsConnection_createNonThreaded, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_setRawMessageHandler", _wrap_MmsConnection_setRawMessageHandler, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_setFilestoreBasepath", _wrap_MmsConnection_setFilestoreBasepath, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_setRequestTimeout", _wrap_MmsConnection_setRequestTimeout, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_getRequestTimeout", _wrap_MmsConnection_getRequestTimeout, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_setConnectTimeout", _wrap_MmsConnection_setConnectTimeout, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_setInformationReportHandler", _wrap_MmsConnection_setInformationReportHandler, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_getIsoConnectionParameters", _wrap_MmsConnection_getIsoConnectionParameters, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_getMmsConnectionParameters", _wrap_MmsConnection_getMmsConnectionParameters, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_setConnectionStateChangedHandler", _wrap_MmsConnection_setConnectionStateChangedHandler, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_setConnectionLostHandler", _wrap_MmsConnection_setConnectionLostHandler, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_destroy", _wrap_MmsConnection_destroy, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_connect", _wrap_MmsConnection_connect, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_connectAsync", _wrap_MmsConnection_connectAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_tick", _wrap_MmsConnection_tick, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_close", _wrap_MmsConnection_close, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_abort", _wrap_MmsConnection_abort, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_abortAsync", _wrap_MmsConnection_abortAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_conclude", _wrap_MmsConnection_conclude, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_concludeAsync", _wrap_MmsConnection_concludeAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_getVMDVariableNames", _wrap_MmsConnection_getVMDVariableNames, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_getVMDVariableNamesAsync", _wrap_MmsConnection_getVMDVariableNamesAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_getDomainNames", _wrap_MmsConnection_getDomainNames, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_getDomainNamesAsync", _wrap_MmsConnection_getDomainNamesAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_getDomainVariableNames", _wrap_MmsConnection_getDomainVariableNames, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_getDomainVariableNamesAsync", _wrap_MmsConnection_getDomainVariableNamesAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_getDomainVariableListNames", _wrap_MmsConnection_getDomainVariableListNames, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_getDomainVariableListNamesAsync", _wrap_MmsConnection_getDomainVariableListNamesAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_getDomainJournals", _wrap_MmsConnection_getDomainJournals, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_getDomainJournalsAsync", _wrap_MmsConnection_getDomainJournalsAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_getVariableListNamesAssociationSpecific", _wrap_MmsConnection_getVariableListNamesAssociationSpecific, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_getVariableListNamesAssociationSpecificAsync", _wrap_MmsConnection_getVariableListNamesAssociationSpecificAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_readVariable", _wrap_MmsConnection_readVariable, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_readVariableAsync", _wrap_MmsConnection_readVariableAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_readVariableComponent", _wrap_MmsConnection_readVariableComponent, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_readVariableComponentAsync", _wrap_MmsConnection_readVariableComponentAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_readArrayElements", _wrap_MmsConnection_readArrayElements, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_readArrayElementsAsync", _wrap_MmsConnection_readArrayElementsAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_readSingleArrayElementWithComponent", _wrap_MmsConnection_readSingleArrayElementWithComponent, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_readSingleArrayElementWithComponentAsync", _wrap_MmsConnection_readSingleArrayElementWithComponentAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_readMultipleVariables", _wrap_MmsConnection_readMultipleVariables, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_readMultipleVariablesAsync", _wrap_MmsConnection_readMultipleVariablesAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_writeVariable", _wrap_MmsConnection_writeVariable, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_writeVariableAsync", _wrap_MmsConnection_writeVariableAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_writeSingleArrayElementWithComponent", _wrap_MmsConnection_writeSingleArrayElementWithComponent, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_writeSingleArrayElementWithComponentAsync", _wrap_MmsConnection_writeSingleArrayElementWithComponentAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_writeArrayElements", _wrap_MmsConnection_writeArrayElements, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_writeArrayElementsAsync", _wrap_MmsConnection_writeArrayElementsAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_writeMultipleVariables", _wrap_MmsConnection_writeMultipleVariables, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_writeMultipleVariablesAsync", _wrap_MmsConnection_writeMultipleVariablesAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_writeNamedVariableList", _wrap_MmsConnection_writeNamedVariableList, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_writeNamedVariableListAsync", _wrap_MmsConnection_writeNamedVariableListAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_getVariableAccessAttributes", _wrap_MmsConnection_getVariableAccessAttributes, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_getVariableAccessAttributesAsync", _wrap_MmsConnection_getVariableAccessAttributesAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_readNamedVariableListValues", _wrap_MmsConnection_readNamedVariableListValues, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_readNamedVariableListValuesAsync", _wrap_MmsConnection_readNamedVariableListValuesAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_readNamedVariableListValuesAssociationSpecific", _wrap_MmsConnection_readNamedVariableListValuesAssociationSpecific, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_readNamedVariableListValuesAssociationSpecificAsync", _wrap_MmsConnection_readNamedVariableListValuesAssociationSpecificAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_defineNamedVariableList", _wrap_MmsConnection_defineNamedVariableList, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_defineNamedVariableListAsync", _wrap_MmsConnection_defineNamedVariableListAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_defineNamedVariableListAssociationSpecific", _wrap_MmsConnection_defineNamedVariableListAssociationSpecific, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_defineNamedVariableListAssociationSpecificAsync", _wrap_MmsConnection_defineNamedVariableListAssociationSpecificAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_readNamedVariableListDirectory", _wrap_MmsConnection_readNamedVariableListDirectory, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_readNamedVariableListDirectoryAsync", _wrap_MmsConnection_readNamedVariableListDirectoryAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_readNamedVariableListDirectoryAssociationSpecific", _wrap_MmsConnection_readNamedVariableListDirectoryAssociationSpecific, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_readNamedVariableListDirectoryAssociationSpecificAsync", _wrap_MmsConnection_readNamedVariableListDirectoryAssociationSpecificAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_deleteNamedVariableList", _wrap_MmsConnection_deleteNamedVariableList, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_deleteNamedVariableListAsync", _wrap_MmsConnection_deleteNamedVariableListAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_deleteAssociationSpecificNamedVariableList", _wrap_MmsConnection_deleteAssociationSpecificNamedVariableList, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_deleteAssociationSpecificNamedVariableListAsync", _wrap_MmsConnection_deleteAssociationSpecificNamedVariableListAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsVariableAccessSpecification_create", _wrap_MmsVariableAccessSpecification_create, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsVariableAccessSpecification_createAlternateAccess", _wrap_MmsVariableAccessSpecification_createAlternateAccess, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsVariableAccessSpecification_destroy", _wrap_MmsVariableAccessSpecification_destroy, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_setLocalDetail", _wrap_MmsConnection_setLocalDetail, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_getLocalDetail", _wrap_MmsConnection_getLocalDetail, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_identify", _wrap_MmsConnection_identify, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_identifyAsync", _wrap_MmsConnection_identifyAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsServerIdentity_destroy", _wrap_MmsServerIdentity_destroy, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_getServerStatus", _wrap_MmsConnection_getServerStatus, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_getServerStatusAsync", _wrap_MmsConnection_getServerStatusAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_fileOpen", _wrap_MmsConnection_fileOpen, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_fileOpenAsync", _wrap_MmsConnection_fileOpenAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_fileRead", _wrap_MmsConnection_fileRead, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_fileReadAsync", _wrap_MmsConnection_fileReadAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_fileClose", _wrap_MmsConnection_fileClose, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_fileCloseAsync", _wrap_MmsConnection_fileCloseAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_fileDelete", _wrap_MmsConnection_fileDelete, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_fileDeleteAsync", _wrap_MmsConnection_fileDeleteAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_fileRename", _wrap_MmsConnection_fileRename, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_fileRenameAsync", _wrap_MmsConnection_fileRenameAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_obtainFile", _wrap_MmsConnection_obtainFile, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_obtainFileAsync", _wrap_MmsConnection_obtainFileAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_getFileDirectory", _wrap_MmsConnection_getFileDirectory, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_getFileDirectoryAsync", _wrap_MmsConnection_getFileDirectoryAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsJournalEntry_destroy", _wrap_MmsJournalEntry_destroy, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsJournalEntry_getEntryID", _wrap_MmsJournalEntry_getEntryID, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsJournalEntry_getOccurenceTime", _wrap_MmsJournalEntry_getOccurenceTime, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsJournalEntry_getJournalVariables", _wrap_MmsJournalEntry_getJournalVariables, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsJournalVariable_getTag", _wrap_MmsJournalVariable_getTag, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsJournalVariable_getValue", _wrap_MmsJournalVariable_getValue, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_readJournalTimeRange", _wrap_MmsConnection_readJournalTimeRange, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_readJournalTimeRangeAsync", _wrap_MmsConnection_readJournalTimeRangeAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_readJournalStartAfter", _wrap_MmsConnection_readJournalStartAfter, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsConnection_readJournalStartAfterAsync", _wrap_MmsConnection_readJournalStartAfterAsync, context);
SWIGV8_AddStaticFunction(exports_obj, "FunctionalConstraint_toString", _wrap_FunctionalConstraint_toString, context);
SWIGV8_AddStaticFunction(exports_obj, "FunctionalConstraint_fromString", _wrap_FunctionalConstraint_fromString, context);
SWIGV8_AddStaticFunction(exports_obj, "Quality_getValidity", _wrap_Quality_getValidity, context);
SWIGV8_AddStaticFunction(exports_obj, "Quality_setValidity", _wrap_Quality_setValidity, context);
SWIGV8_AddStaticFunction(exports_obj, "Quality_setFlag", _wrap_Quality_setFlag, context);
SWIGV8_AddStaticFunction(exports_obj, "Quality_unsetFlag", _wrap_Quality_unsetFlag, context);
SWIGV8_AddStaticFunction(exports_obj, "Quality_isFlagSet", _wrap_Quality_isFlagSet, context);
SWIGV8_AddStaticFunction(exports_obj, "Quality_fromMmsValue", _wrap_Quality_fromMmsValue, context);
SWIGV8_AddStaticFunction(exports_obj, "Quality_toMmsValue", _wrap_Quality_toMmsValue, context);
SWIGV8_AddStaticFunction(exports_obj, "Dbpos_fromMmsValue", _wrap_Dbpos_fromMmsValue, context);
SWIGV8_AddStaticFunction(exports_obj, "Dbpos_toMmsValue", _wrap_Dbpos_toMmsValue, context);
SWIGV8_AddStaticFunction(exports_obj, "Timestamp_create", _wrap_Timestamp_create, context);
SWIGV8_AddStaticFunction(exports_obj, "Timestamp_createFromByteArray", _wrap_Timestamp_createFromByteArray, context);
SWIGV8_AddStaticFunction(exports_obj, "Timestamp_destroy", _wrap_Timestamp_destroy, context);
SWIGV8_AddStaticFunction(exports_obj, "Timestamp_clearFlags", _wrap_Timestamp_clearFlags, context);
SWIGV8_AddStaticFunction(exports_obj, "Timestamp_getTimeInSeconds", _wrap_Timestamp_getTimeInSeconds, context);
SWIGV8_AddStaticFunction(exports_obj, "Timestamp_getTimeInMs", _wrap_Timestamp_getTimeInMs, context);
SWIGV8_AddStaticFunction(exports_obj, "Timestamp_getTimeInNs", _wrap_Timestamp_getTimeInNs, context);
SWIGV8_AddStaticFunction(exports_obj, "Timestamp_isLeapSecondKnown", _wrap_Timestamp_isLeapSecondKnown, context);
SWIGV8_AddStaticFunction(exports_obj, "Timestamp_setLeapSecondKnown", _wrap_Timestamp_setLeapSecondKnown, context);
SWIGV8_AddStaticFunction(exports_obj, "Timestamp_hasClockFailure", _wrap_Timestamp_hasClockFailure, context);
SWIGV8_AddStaticFunction(exports_obj, "Timestamp_setClockFailure", _wrap_Timestamp_setClockFailure, context);
SWIGV8_AddStaticFunction(exports_obj, "Timestamp_isClockNotSynchronized", _wrap_Timestamp_isClockNotSynchronized, context);
SWIGV8_AddStaticFunction(exports_obj, "Timestamp_setClockNotSynchronized", _wrap_Timestamp_setClockNotSynchronized, context);
SWIGV8_AddStaticFunction(exports_obj, "Timestamp_getSubsecondPrecision", _wrap_Timestamp_getSubsecondPrecision, context);
SWIGV8_AddStaticFunction(exports_obj, "Timestamp_setSubsecondPrecision", _wrap_Timestamp_setSubsecondPrecision, context);
SWIGV8_AddStaticFunction(exports_obj, "Timestamp_setTimeInSeconds", _wrap_Timestamp_setTimeInSeconds, context);
SWIGV8_AddStaticFunction(exports_obj, "Timestamp_setTimeInMilliseconds", _wrap_Timestamp_setTimeInMilliseconds, context);
SWIGV8_AddStaticFunction(exports_obj, "Timestamp_setTimeInNanoseconds", _wrap_Timestamp_setTimeInNanoseconds, context);
SWIGV8_AddStaticFunction(exports_obj, "Timestamp_setByMmsUtcTime", _wrap_Timestamp_setByMmsUtcTime, context);
SWIGV8_AddStaticFunction(exports_obj, "Timestamp_toMmsValue", _wrap_Timestamp_toMmsValue, context);
SWIGV8_AddStaticFunction(exports_obj, "Timestamp_fromMmsValue", _wrap_Timestamp_fromMmsValue, context);
SWIGV8_AddStaticFunction(exports_obj, "LibIEC61850_getVersionString", _wrap_LibIEC61850_getVersionString, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_createArray", _wrap_MmsValue_createArray, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_getArraySize", _wrap_MmsValue_getArraySize, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_getElement", _wrap_MmsValue_getElement, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_createEmptyArray", _wrap_MmsValue_createEmptyArray, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_setElement", _wrap_MmsValue_setElement, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_getDataAccessError", _wrap_MmsValue_getDataAccessError, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_toInt64", _wrap_MmsValue_toInt64, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_toInt32", _wrap_MmsValue_toInt32, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_toUint32", _wrap_MmsValue_toUint32, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_toDouble", _wrap_MmsValue_toDouble, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_toFloat", _wrap_MmsValue_toFloat, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_toUnixTimestamp", _wrap_MmsValue_toUnixTimestamp, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_setFloat", _wrap_MmsValue_setFloat, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_setDouble", _wrap_MmsValue_setDouble, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_setInt8", _wrap_MmsValue_setInt8, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_setInt16", _wrap_MmsValue_setInt16, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_setInt32", _wrap_MmsValue_setInt32, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_setInt64", _wrap_MmsValue_setInt64, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_setUint8", _wrap_MmsValue_setUint8, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_setUint16", _wrap_MmsValue_setUint16, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_setUint32", _wrap_MmsValue_setUint32, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_setBoolean", _wrap_MmsValue_setBoolean, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_getBoolean", _wrap_MmsValue_getBoolean, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_toString", _wrap_MmsValue_toString, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_getStringSize", _wrap_MmsValue_getStringSize, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_setVisibleString", _wrap_MmsValue_setVisibleString, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_setBitStringBit", _wrap_MmsValue_setBitStringBit, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_getBitStringBit", _wrap_MmsValue_getBitStringBit, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_deleteAllBitStringBits", _wrap_MmsValue_deleteAllBitStringBits, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_getBitStringSize", _wrap_MmsValue_getBitStringSize, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_getBitStringByteSize", _wrap_MmsValue_getBitStringByteSize, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_getNumberOfSetBits", _wrap_MmsValue_getNumberOfSetBits, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_setAllBitStringBits", _wrap_MmsValue_setAllBitStringBits, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_getBitStringAsInteger", _wrap_MmsValue_getBitStringAsInteger, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_setBitStringFromInteger", _wrap_MmsValue_setBitStringFromInteger, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_getBitStringAsIntegerBigEndian", _wrap_MmsValue_getBitStringAsIntegerBigEndian, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_setBitStringFromIntegerBigEndian", _wrap_MmsValue_setBitStringFromIntegerBigEndian, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_setUtcTime", _wrap_MmsValue_setUtcTime, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_setUtcTimeMs", _wrap_MmsValue_setUtcTimeMs, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_setUtcTimeByBuffer", _wrap_MmsValue_setUtcTimeByBuffer, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_getUtcTimeBuffer", _wrap_MmsValue_getUtcTimeBuffer, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_getUtcTimeInMs", _wrap_MmsValue_getUtcTimeInMs, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_getUtcTimeInMsWithUs", _wrap_MmsValue_getUtcTimeInMsWithUs, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_setUtcTimeQuality", _wrap_MmsValue_setUtcTimeQuality, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_getUtcTimeQuality", _wrap_MmsValue_getUtcTimeQuality, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_setBinaryTime", _wrap_MmsValue_setBinaryTime, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_getBinaryTimeAsUtcMs", _wrap_MmsValue_getBinaryTimeAsUtcMs, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_setOctetString", _wrap_MmsValue_setOctetString, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_setOctetStringOctet", _wrap_MmsValue_setOctetStringOctet, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_getOctetStringSize", _wrap_MmsValue_getOctetStringSize, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_getOctetStringMaxSize", _wrap_MmsValue_getOctetStringMaxSize, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_getOctetStringBuffer", _wrap_MmsValue_getOctetStringBuffer, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_getOctetStringOctet", _wrap_MmsValue_getOctetStringOctet, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_update", _wrap_MmsValue_update, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_equals", _wrap_MmsValue_equals, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_equalTypes", _wrap_MmsValue_equalTypes, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_newDataAccessError", _wrap_MmsValue_newDataAccessError, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_newInteger", _wrap_MmsValue_newInteger, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_newUnsigned", _wrap_MmsValue_newUnsigned, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_newBoolean", _wrap_MmsValue_newBoolean, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_newBitString", _wrap_MmsValue_newBitString, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_newOctetString", _wrap_MmsValue_newOctetString, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_newStructure", _wrap_MmsValue_newStructure, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_createEmptyStructure", _wrap_MmsValue_createEmptyStructure, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_newDefaultValue", _wrap_MmsValue_newDefaultValue, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_newIntegerFromInt8", _wrap_MmsValue_newIntegerFromInt8, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_newIntegerFromInt16", _wrap_MmsValue_newIntegerFromInt16, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_newIntegerFromInt32", _wrap_MmsValue_newIntegerFromInt32, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_newIntegerFromInt64", _wrap_MmsValue_newIntegerFromInt64, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_newUnsignedFromUint32", _wrap_MmsValue_newUnsignedFromUint32, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_newFloat", _wrap_MmsValue_newFloat, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_newDouble", _wrap_MmsValue_newDouble, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_clone", _wrap_MmsValue_clone, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_cloneToBuffer", _wrap_MmsValue_cloneToBuffer, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_getSizeInMemory", _wrap_MmsValue_getSizeInMemory, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_delete", _wrap_MmsValue_delete, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_deleteConditional", _wrap_MmsValue_deleteConditional, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_newVisibleString", _wrap_MmsValue_newVisibleString, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_newVisibleStringWithSize", _wrap_MmsValue_newVisibleStringWithSize, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_newMmsStringWithSize", _wrap_MmsValue_newMmsStringWithSize, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_newBinaryTime", _wrap_MmsValue_newBinaryTime, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_newVisibleStringFromByteArray", _wrap_MmsValue_newVisibleStringFromByteArray, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_newMmsStringFromByteArray", _wrap_MmsValue_newMmsStringFromByteArray, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_newMmsString", _wrap_MmsValue_newMmsString, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_setMmsString", _wrap_MmsValue_setMmsString, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_newUtcTime", _wrap_MmsValue_newUtcTime, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_newUtcTimeByMsTime", _wrap_MmsValue_newUtcTimeByMsTime, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_setDeletable", _wrap_MmsValue_setDeletable, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_setDeletableRecursive", _wrap_MmsValue_setDeletableRecursive, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_isDeletable", _wrap_MmsValue_isDeletable, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_getType", _wrap_MmsValue_getType, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_getSubElement", _wrap_MmsValue_getSubElement, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_getTypeString", _wrap_MmsValue_getTypeString, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_printToBuffer", _wrap_MmsValue_printToBuffer, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_decodeMmsData", _wrap_MmsValue_decodeMmsData, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_encodeMmsData", _wrap_MmsValue_encodeMmsData, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsValue_getMaxEncodedSize", _wrap_MmsValue_getMaxEncodedSize, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsVariableSpecification_getMaxEncodedSize", _wrap_MmsVariableSpecification_getMaxEncodedSize, context);
SWIGV8_AddStaticFunction(exports_obj, "ModelNode_getChildCount", _wrap_ModelNode_getChildCount, context);
SWIGV8_AddStaticFunction(exports_obj, "ModelNode_getChild", _wrap_ModelNode_getChild, context);
SWIGV8_AddStaticFunction(exports_obj, "ModelNode_getChildWithFc", _wrap_ModelNode_getChildWithFc, context);
SWIGV8_AddStaticFunction(exports_obj, "ModelNode_getObjectReference", _wrap_ModelNode_getObjectReference, context);
SWIGV8_AddStaticFunction(exports_obj, "ModelNode_getObjectReferenceEx", _wrap_ModelNode_getObjectReferenceEx, context);
SWIGV8_AddStaticFunction(exports_obj, "ModelNode_getType", _wrap_ModelNode_getType, context);
SWIGV8_AddStaticFunction(exports_obj, "ModelNode_getName", _wrap_ModelNode_getName, context);
SWIGV8_AddStaticFunction(exports_obj, "ModelNode_getParent", _wrap_ModelNode_getParent, context);
SWIGV8_AddStaticFunction(exports_obj, "ModelNode_getChildren", _wrap_ModelNode_getChildren, context);
SWIGV8_AddStaticFunction(exports_obj, "IedModel_setIedName", _wrap_IedModel_setIedName, context);
SWIGV8_AddStaticFunction(exports_obj, "IedModel_getModelNodeByObjectReference", _wrap_IedModel_getModelNodeByObjectReference, context);
SWIGV8_AddStaticFunction(exports_obj, "IedModel_getSVControlBlock", _wrap_IedModel_getSVControlBlock, context);
SWIGV8_AddStaticFunction(exports_obj, "IedModel_getModelNodeByShortObjectReference", _wrap_IedModel_getModelNodeByShortObjectReference, context);
SWIGV8_AddStaticFunction(exports_obj, "IedModel_getModelNodeByShortAddress", _wrap_IedModel_getModelNodeByShortAddress, context);
SWIGV8_AddStaticFunction(exports_obj, "IedModel_getDeviceByInst", _wrap_IedModel_getDeviceByInst, context);
SWIGV8_AddStaticFunction(exports_obj, "IedModel_getDeviceByIndex", _wrap_IedModel_getDeviceByIndex, context);
SWIGV8_AddStaticFunction(exports_obj, "LogicalDevice_getLogicalNode", _wrap_LogicalDevice_getLogicalNode, context);
SWIGV8_AddStaticFunction(exports_obj, "LogicalDevice_getSettingGroupControlBlock", _wrap_LogicalDevice_getSettingGroupControlBlock, context);
SWIGV8_AddStaticFunction(exports_obj, "IedModel_setAttributeValuesToNull", _wrap_IedModel_setAttributeValuesToNull, context);
SWIGV8_AddStaticFunction(exports_obj, "IedModel_getDevice", _wrap_IedModel_getDevice, context);
SWIGV8_AddStaticFunction(exports_obj, "IedModel_lookupDataSet", _wrap_IedModel_lookupDataSet, context);
SWIGV8_AddStaticFunction(exports_obj, "IedModel_lookupDataAttributeByMmsValue", _wrap_IedModel_lookupDataAttributeByMmsValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedModel_getLogicalDeviceCount", _wrap_IedModel_getLogicalDeviceCount, context);
SWIGV8_AddStaticFunction(exports_obj, "LogicalDevice_getLogicalNodeCount", _wrap_LogicalDevice_getLogicalNodeCount, context);
SWIGV8_AddStaticFunction(exports_obj, "LogicalDevice_getChildByMmsVariableName", _wrap_LogicalDevice_getChildByMmsVariableName, context);
SWIGV8_AddStaticFunction(exports_obj, "LogicalNode_hasFCData", _wrap_LogicalNode_hasFCData, context);
SWIGV8_AddStaticFunction(exports_obj, "LogicalNode_getDataSet", _wrap_LogicalNode_getDataSet, context);
SWIGV8_AddStaticFunction(exports_obj, "DataObject_hasFCData", _wrap_DataObject_hasFCData, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_create", _wrap_IedServerConfig_create, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_destroy", _wrap_IedServerConfig_destroy, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_setEdition", _wrap_IedServerConfig_setEdition, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_getEdition", _wrap_IedServerConfig_getEdition, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_setReportBufferSize", _wrap_IedServerConfig_setReportBufferSize, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_getReportBufferSize", _wrap_IedServerConfig_getReportBufferSize, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_setReportBufferSizeForURCBs", _wrap_IedServerConfig_setReportBufferSizeForURCBs, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_getReportBufferSizeForURCBs", _wrap_IedServerConfig_getReportBufferSizeForURCBs, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_setMaxMmsConnections", _wrap_IedServerConfig_setMaxMmsConnections, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_getMaxMmsConnections", _wrap_IedServerConfig_getMaxMmsConnections, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_setFileServiceBasePath", _wrap_IedServerConfig_setFileServiceBasePath, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_getFileServiceBasePath", _wrap_IedServerConfig_getFileServiceBasePath, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_enableFileService", _wrap_IedServerConfig_enableFileService, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_isFileServiceEnabled", _wrap_IedServerConfig_isFileServiceEnabled, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_enableDynamicDataSetService", _wrap_IedServerConfig_enableDynamicDataSetService, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_isDynamicDataSetServiceEnabled", _wrap_IedServerConfig_isDynamicDataSetServiceEnabled, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_setMaxAssociationSpecificDataSets", _wrap_IedServerConfig_setMaxAssociationSpecificDataSets, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_getMaxAssociationSpecificDataSets", _wrap_IedServerConfig_getMaxAssociationSpecificDataSets, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_setMaxDomainSpecificDataSets", _wrap_IedServerConfig_setMaxDomainSpecificDataSets, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_getMaxDomainSpecificDataSets", _wrap_IedServerConfig_getMaxDomainSpecificDataSets, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_setMaxDataSetEntries", _wrap_IedServerConfig_setMaxDataSetEntries, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_getMaxDatasSetEntries", _wrap_IedServerConfig_getMaxDatasSetEntries, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_enableLogService", _wrap_IedServerConfig_enableLogService, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_enableEditSG", _wrap_IedServerConfig_enableEditSG, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_enableResvTmsForSGCB", _wrap_IedServerConfig_enableResvTmsForSGCB, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_enableResvTmsForBRCB", _wrap_IedServerConfig_enableResvTmsForBRCB, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_isResvTmsForBRCBEnabled", _wrap_IedServerConfig_isResvTmsForBRCBEnabled, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_enableOwnerForRCB", _wrap_IedServerConfig_enableOwnerForRCB, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_isOwnerForRCBEnabled", _wrap_IedServerConfig_isOwnerForRCBEnabled, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_useIntegratedGoosePublisher", _wrap_IedServerConfig_useIntegratedGoosePublisher, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServerConfig_isLogServiceEnabled", _wrap_IedServerConfig_isLogServiceEnabled, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_create", _wrap_IedServer_create, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_createWithTlsSupport", _wrap_IedServer_createWithTlsSupport, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_createWithConfig", _wrap_IedServer_createWithConfig, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_destroy", _wrap_IedServer_destroy, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_addAccessPoint", _wrap_IedServer_addAccessPoint, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_setLocalIpAddress", _wrap_IedServer_setLocalIpAddress, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_setServerIdentity", _wrap_IedServer_setServerIdentity, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_setFilestoreBasepath", _wrap_IedServer_setFilestoreBasepath, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_start", _wrap_IedServer_start, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_stop", _wrap_IedServer_stop, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_startThreadless", _wrap_IedServer_startThreadless, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_waitReady", _wrap_IedServer_waitReady, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_processIncomingData", _wrap_IedServer_processIncomingData, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_performPeriodicTasks", _wrap_IedServer_performPeriodicTasks, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_stopThreadless", _wrap_IedServer_stopThreadless, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_getDataModel", _wrap_IedServer_getDataModel, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_isRunning", _wrap_IedServer_isRunning, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_getNumberOfOpenConnections", _wrap_IedServer_getNumberOfOpenConnections, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_getMmsServer", _wrap_IedServer_getMmsServer, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_enableGoosePublishing", _wrap_IedServer_enableGoosePublishing, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_disableGoosePublishing", _wrap_IedServer_disableGoosePublishing, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_setGooseInterfaceId", _wrap_IedServer_setGooseInterfaceId, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_setGooseInterfaceIdEx", _wrap_IedServer_setGooseInterfaceIdEx, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_useGooseVlanTag", _wrap_IedServer_useGooseVlanTag, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_setAuthenticator", _wrap_IedServer_setAuthenticator, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientConnection_getPeerAddress", _wrap_ClientConnection_getPeerAddress, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientConnection_getLocalAddress", _wrap_ClientConnection_getLocalAddress, context);
SWIGV8_AddStaticFunction(exports_obj, "ClientConnection_getSecurityToken", _wrap_ClientConnection_getSecurityToken, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_setConnectionIndicationHandler", _wrap_IedServer_setConnectionIndicationHandler, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_lockDataModel", _wrap_IedServer_lockDataModel, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_unlockDataModel", _wrap_IedServer_unlockDataModel, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_getAttributeValue", _wrap_IedServer_getAttributeValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_getBooleanAttributeValue", _wrap_IedServer_getBooleanAttributeValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_getInt32AttributeValue", _wrap_IedServer_getInt32AttributeValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_getInt64AttributeValue", _wrap_IedServer_getInt64AttributeValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_getUInt32AttributeValue", _wrap_IedServer_getUInt32AttributeValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_getFloatAttributeValue", _wrap_IedServer_getFloatAttributeValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_getUTCTimeAttributeValue", _wrap_IedServer_getUTCTimeAttributeValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_getBitStringAttributeValue", _wrap_IedServer_getBitStringAttributeValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_getStringAttributeValue", _wrap_IedServer_getStringAttributeValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_getFunctionalConstrainedData", _wrap_IedServer_getFunctionalConstrainedData, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_updateAttributeValue", _wrap_IedServer_updateAttributeValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_updateFloatAttributeValue", _wrap_IedServer_updateFloatAttributeValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_updateInt32AttributeValue", _wrap_IedServer_updateInt32AttributeValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_updateDbposValue", _wrap_IedServer_updateDbposValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_updateInt64AttributeValue", _wrap_IedServer_updateInt64AttributeValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_updateUnsignedAttributeValue", _wrap_IedServer_updateUnsignedAttributeValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_updateBitStringAttributeValue", _wrap_IedServer_updateBitStringAttributeValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_updateBooleanAttributeValue", _wrap_IedServer_updateBooleanAttributeValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_updateVisibleStringAttributeValue", _wrap_IedServer_updateVisibleStringAttributeValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_updateUTCTimeAttributeValue", _wrap_IedServer_updateUTCTimeAttributeValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_updateTimestampAttributeValue", _wrap_IedServer_updateTimestampAttributeValue, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_updateQuality", _wrap_IedServer_updateQuality, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_setLogStorage", _wrap_IedServer_setLogStorage, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_changeActiveSettingGroup", _wrap_IedServer_changeActiveSettingGroup, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_getActiveSettingGroup", _wrap_IedServer_getActiveSettingGroup, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_setActiveSettingGroupChangedHandler", _wrap_IedServer_setActiveSettingGroupChangedHandler, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_setEditSettingGroupChangedHandler", _wrap_IedServer_setEditSettingGroupChangedHandler, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_setEditSettingGroupConfirmationHandler", _wrap_IedServer_setEditSettingGroupConfirmationHandler, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlAction_setError", _wrap_ControlAction_setError, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlAction_setAddCause", _wrap_ControlAction_setAddCause, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlAction_getOrCat", _wrap_ControlAction_getOrCat, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlAction_getOrIdent", _wrap_ControlAction_getOrIdent, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlAction_getCtlNum", _wrap_ControlAction_getCtlNum, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlAction_isSelect", _wrap_ControlAction_isSelect, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlAction_getClientConnection", _wrap_ControlAction_getClientConnection, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlAction_getControlObject", _wrap_ControlAction_getControlObject, context);
SWIGV8_AddStaticFunction(exports_obj, "ControlAction_getControlTime", _wrap_ControlAction_getControlTime, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_setControlHandler", _wrap_IedServer_setControlHandler, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_setPerformCheckHandler", _wrap_IedServer_setPerformCheckHandler, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_setWaitForExecutionHandler", _wrap_IedServer_setWaitForExecutionHandler, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_setSelectStateChangedHandler", _wrap_IedServer_setSelectStateChangedHandler, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_updateCtlModel", _wrap_IedServer_updateCtlModel, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_setRCBEventHandler", _wrap_IedServer_setRCBEventHandler, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_setSVCBHandler", _wrap_IedServer_setSVCBHandler, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_setGoCBHandler", _wrap_IedServer_setGoCBHandler, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsGooseControlBlock_getName", _wrap_MmsGooseControlBlock_getName, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsGooseControlBlock_getLogicalNode", _wrap_MmsGooseControlBlock_getLogicalNode, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsGooseControlBlock_getDataSet", _wrap_MmsGooseControlBlock_getDataSet, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsGooseControlBlock_getGoEna", _wrap_MmsGooseControlBlock_getGoEna, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsGooseControlBlock_getMinTime", _wrap_MmsGooseControlBlock_getMinTime, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsGooseControlBlock_getMaxTime", _wrap_MmsGooseControlBlock_getMaxTime, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsGooseControlBlock_getFixedOffs", _wrap_MmsGooseControlBlock_getFixedOffs, context);
SWIGV8_AddStaticFunction(exports_obj, "MmsGooseControlBlock_getNdsCom", _wrap_MmsGooseControlBlock_getNdsCom, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_handleWriteAccess", _wrap_IedServer_handleWriteAccess, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_handleWriteAccessForComplexAttribute", _wrap_IedServer_handleWriteAccessForComplexAttribute, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_setWriteAccessPolicy", _wrap_IedServer_setWriteAccessPolicy, context);
SWIGV8_AddStaticFunction(exports_obj, "IedServer_setReadAccessHandler", _wrap_IedServer_setReadAccessHandler, context);
SWIGV8_AddStaticFunction(exports_obj, "IedModel_create", _wrap_IedModel_create, context);
SWIGV8_AddStaticFunction(exports_obj, "IedModel_setIedNameForDynamicModel", _wrap_IedModel_setIedNameForDynamicModel, context);
SWIGV8_AddStaticFunction(exports_obj, "IedModel_destroy", _wrap_IedModel_destroy, context);
SWIGV8_AddStaticFunction(exports_obj, "LogicalDevice_create", _wrap_LogicalDevice_create, context);
SWIGV8_AddStaticFunction(exports_obj, "LogicalNode_create", _wrap_LogicalNode_create, context);
SWIGV8_AddStaticFunction(exports_obj, "DataObject_create", _wrap_DataObject_create, context);
SWIGV8_AddStaticFunction(exports_obj, "DataAttribute_create", _wrap_DataAttribute_create, context);
SWIGV8_AddStaticFunction(exports_obj, "DataAttribute_getType", _wrap_DataAttribute_getType, context);
SWIGV8_AddStaticFunction(exports_obj, "DataAttribute_getFC", _wrap_DataAttribute_getFC, context);
SWIGV8_AddStaticFunction(exports_obj, "DataAttribute_getTrgOps", _wrap_DataAttribute_getTrgOps, context);
SWIGV8_AddStaticFunction(exports_obj, "DataAttribute_setValue", _wrap_DataAttribute_setValue, context);
SWIGV8_AddStaticFunction(exports_obj, "ReportControlBlock_create", _wrap_ReportControlBlock_create, context);
SWIGV8_AddStaticFunction(exports_obj, "ReportControlBlock_setPreconfiguredClient", _wrap_ReportControlBlock_setPreconfiguredClient, context);
SWIGV8_AddStaticFunction(exports_obj, "ReportControlBlock_getName", _wrap_ReportControlBlock_getName, context);
SWIGV8_AddStaticFunction(exports_obj, "ReportControlBlock_isBuffered", _wrap_ReportControlBlock_isBuffered, context);
SWIGV8_AddStaticFunction(exports_obj, "ReportControlBlock_getParent", _wrap_ReportControlBlock_getParent, context);
SWIGV8_AddStaticFunction(exports_obj, "ReportControlBlock_getRptID", _wrap_ReportControlBlock_getRptID, context);
SWIGV8_AddStaticFunction(exports_obj, "ReportControlBlock_getRptEna", _wrap_ReportControlBlock_getRptEna, context);
SWIGV8_AddStaticFunction(exports_obj, "ReportControlBlock_getDataSet", _wrap_ReportControlBlock_getDataSet, context);
SWIGV8_AddStaticFunction(exports_obj, "ReportControlBlock_getConfRev", _wrap_ReportControlBlock_getConfRev, context);
SWIGV8_AddStaticFunction(exports_obj, "ReportControlBlock_getOptFlds", _wrap_ReportControlBlock_getOptFlds, context);
SWIGV8_AddStaticFunction(exports_obj, "ReportControlBlock_getBufTm", _wrap_ReportControlBlock_getBufTm, context);
SWIGV8_AddStaticFunction(exports_obj, "ReportControlBlock_getSqNum", _wrap_ReportControlBlock_getSqNum, context);
SWIGV8_AddStaticFunction(exports_obj, "ReportControlBlock_getTrgOps", _wrap_ReportControlBlock_getTrgOps, context);
SWIGV8_AddStaticFunction(exports_obj, "ReportControlBlock_getIntgPd", _wrap_ReportControlBlock_getIntgPd, context);
SWIGV8_AddStaticFunction(exports_obj, "ReportControlBlock_getGI", _wrap_ReportControlBlock_getGI, context);
SWIGV8_AddStaticFunction(exports_obj, "ReportControlBlock_getPurgeBuf", _wrap_ReportControlBlock_getPurgeBuf, context);
SWIGV8_AddStaticFunction(exports_obj, "ReportControlBlock_getEntryId", _wrap_ReportControlBlock_getEntryId, context);
SWIGV8_AddStaticFunction(exports_obj, "ReportControlBlock_getTimeofEntry", _wrap_ReportControlBlock_getTimeofEntry, context);
SWIGV8_AddStaticFunction(exports_obj, "ReportControlBlock_getResvTms", _wrap_ReportControlBlock_getResvTms, context);
SWIGV8_AddStaticFunction(exports_obj, "ReportControlBlock_getOwner", _wrap_ReportControlBlock_getOwner, context);
SWIGV8_AddStaticFunction(exports_obj, "LogControlBlock_create", _wrap_LogControlBlock_create, context);
SWIGV8_AddStaticFunction(exports_obj, "Log_create", _wrap_Log_create, context);
SWIGV8_AddStaticFunction(exports_obj, "SettingGroupControlBlock_create", _wrap_SettingGroupControlBlock_create, context);
SWIGV8_AddStaticFunction(exports_obj, "GSEControlBlock_create", _wrap_GSEControlBlock_create, context);
SWIGV8_AddStaticFunction(exports_obj, "SVControlBlock_create", _wrap_SVControlBlock_create, context);
SWIGV8_AddStaticFunction(exports_obj, "SVControlBlock_addPhyComAddress", _wrap_SVControlBlock_addPhyComAddress, context);
SWIGV8_AddStaticFunction(exports_obj, "GSEControlBlock_addPhyComAddress", _wrap_GSEControlBlock_addPhyComAddress, context);
SWIGV8_AddStaticFunction(exports_obj, "PhyComAddress_create", _wrap_PhyComAddress_create, context);
SWIGV8_AddStaticFunction(exports_obj, "DataSet_create", _wrap_DataSet_create, context);
SWIGV8_AddStaticFunction(exports_obj, "DataSet_getName", _wrap_DataSet_getName, context);
SWIGV8_AddStaticFunction(exports_obj, "DataSet_getSize", _wrap_DataSet_getSize, context);
SWIGV8_AddStaticFunction(exports_obj, "DataSet_getFirstEntry", _wrap_DataSet_getFirstEntry, context);
SWIGV8_AddStaticFunction(exports_obj, "DataSetEntry_getNext", _wrap_DataSetEntry_getNext, context);
SWIGV8_AddStaticFunction(exports_obj, "DataSetEntry_create", _wrap_DataSetEntry_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CAC_AnalogueValue_create", _wrap_CAC_AnalogueValue_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CAC_ValWithTrans_create", _wrap_CAC_ValWithTrans_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CAC_Vector_create", _wrap_CAC_Vector_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CAC_Point_create", _wrap_CAC_Point_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CAC_ScaledValueConfig_create", _wrap_CAC_ScaledValueConfig_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CAC_Unit_create", _wrap_CAC_Unit_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_SPS_create", _wrap_CDC_SPS_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_DPS_create", _wrap_CDC_DPS_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_INS_create", _wrap_CDC_INS_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_ENS_create", _wrap_CDC_ENS_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_BCR_create", _wrap_CDC_BCR_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_VSS_create", _wrap_CDC_VSS_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_SEC_create", _wrap_CDC_SEC_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_MV_create", _wrap_CDC_MV_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_CMV_create", _wrap_CDC_CMV_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_SAV_create", _wrap_CDC_SAV_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_LPL_create", _wrap_CDC_LPL_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_DPL_create", _wrap_CDC_DPL_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_HST_create", _wrap_CDC_HST_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_ACD_create", _wrap_CDC_ACD_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_ACT_create", _wrap_CDC_ACT_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_SPG_create", _wrap_CDC_SPG_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_VSG_create", _wrap_CDC_VSG_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_ENG_create", _wrap_CDC_ENG_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_ING_create", _wrap_CDC_ING_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_ASG_create", _wrap_CDC_ASG_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_WYE_create", _wrap_CDC_WYE_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_DEL_create", _wrap_CDC_DEL_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_SPC_create", _wrap_CDC_SPC_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_DPC_create", _wrap_CDC_DPC_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_INC_create", _wrap_CDC_INC_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_ENC_create", _wrap_CDC_ENC_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_BSC_create", _wrap_CDC_BSC_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_ISC_create", _wrap_CDC_ISC_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_APC_create", _wrap_CDC_APC_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_BAC_create", _wrap_CDC_BAC_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_SPV_create", _wrap_CDC_SPV_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_STV_create", _wrap_CDC_STV_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_CMD_create", _wrap_CDC_CMD_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_ALM_create", _wrap_CDC_ALM_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_CTE_create", _wrap_CDC_CTE_create, context);
SWIGV8_AddStaticFunction(exports_obj, "CDC_TMS_create", _wrap_CDC_TMS_create, context);
SWIGV8_AddStaticFunction(exports_obj, "LinkedList_create", _wrap_LinkedList_create, context);
SWIGV8_AddStaticFunction(exports_obj, "LinkedList_destroy", _wrap_LinkedList_destroy, context);
SWIGV8_AddStaticFunction(exports_obj, "LinkedList_destroyDeep", _wrap_LinkedList_destroyDeep, context);
SWIGV8_AddStaticFunction(exports_obj, "LinkedList_destroyStatic", _wrap_LinkedList_destroyStatic, context);
SWIGV8_AddStaticFunction(exports_obj, "LinkedList_add", _wrap_LinkedList_add, context);
SWIGV8_AddStaticFunction(exports_obj, "LinkedList_contains", _wrap_LinkedList_contains, context);
SWIGV8_AddStaticFunction(exports_obj, "LinkedList_remove", _wrap_LinkedList_remove, context);
SWIGV8_AddStaticFunction(exports_obj, "LinkedList_get", _wrap_LinkedList_get, context);
SWIGV8_AddStaticFunction(exports_obj, "LinkedList_getNext", _wrap_LinkedList_getNext, context);
SWIGV8_AddStaticFunction(exports_obj, "LinkedList_getLastElement", _wrap_LinkedList_getLastElement, context);
SWIGV8_AddStaticFunction(exports_obj, "LinkedList_insertAfter", _wrap_LinkedList_insertAfter, context);
SWIGV8_AddStaticFunction(exports_obj, "LinkedList_size", _wrap_LinkedList_size, context);
SWIGV8_AddStaticFunction(exports_obj, "LinkedList_getData", _wrap_LinkedList_getData, context);
SWIGV8_AddStaticFunction(exports_obj, "LinkedList_printStringList", _wrap_LinkedList_printStringList, context);
SWIGV8_AddStaticFunction(exports_obj, "ConfigFileParser_createModelFromConfigFileEx", _wrap_ConfigFileParser_createModelFromConfigFileEx, context);
SWIGV8_AddStaticFunction(exports_obj, "ConfigFileParser_createModelFromConfigFile", _wrap_ConfigFileParser_createModelFromConfigFile, context);
SWIGV8_AddStaticFunction(exports_obj, "toModelNode", _wrap___wrap_toModelNode, context);
SWIGV8_AddStaticFunction(exports_obj, "toDataAttribute", _wrap___wrap_toDataAttribute, context);
SWIGV8_AddStaticFunction(exports_obj, "toCharP", _wrap_toCharP, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseSubscriber_create", _wrap_GooseSubscriber_create, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseSubscriber_getGoId", _wrap_GooseSubscriber_getGoId, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseSubscriber_getGoCbRef", _wrap_GooseSubscriber_getGoCbRef, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseSubscriber_getDataSet", _wrap_GooseSubscriber_getDataSet, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseSubscriber_setAppId", _wrap_GooseSubscriber_setAppId, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseSubscriber_isValid", _wrap_GooseSubscriber_isValid, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseSubscriber_getParseError", _wrap_GooseSubscriber_getParseError, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseSubscriber_destroy", _wrap_GooseSubscriber_destroy, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseSubscriber_setListener", _wrap_GooseSubscriber_setListener, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseSubscriber_getAppId", _wrap_GooseSubscriber_getAppId, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseSubscriber_getSrcMac", _wrap_GooseSubscriber_getSrcMac, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseSubscriber_getDstMac", _wrap_GooseSubscriber_getDstMac, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseSubscriber_getStNum", _wrap_GooseSubscriber_getStNum, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseSubscriber_getSqNum", _wrap_GooseSubscriber_getSqNum, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseSubscriber_isTest", _wrap_GooseSubscriber_isTest, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseSubscriber_getConfRev", _wrap_GooseSubscriber_getConfRev, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseSubscriber_needsCommission", _wrap_GooseSubscriber_needsCommission, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseSubscriber_getTimeAllowedToLive", _wrap_GooseSubscriber_getTimeAllowedToLive, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseSubscriber_getTimestamp", _wrap_GooseSubscriber_getTimestamp, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseSubscriber_getDataSetValues", _wrap_GooseSubscriber_getDataSetValues, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseSubscriber_isVlanSet", _wrap_GooseSubscriber_isVlanSet, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseSubscriber_getVlanId", _wrap_GooseSubscriber_getVlanId, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseSubscriber_getVlanPrio", _wrap_GooseSubscriber_getVlanPrio, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseSubscriber_setObserver", _wrap_GooseSubscriber_setObserver, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseReceiver_create", _wrap_GooseReceiver_create, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseReceiver_createEx", _wrap_GooseReceiver_createEx, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseReceiver_setInterfaceId", _wrap_GooseReceiver_setInterfaceId, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseReceiver_getInterfaceId", _wrap_GooseReceiver_getInterfaceId, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseReceiver_addSubscriber", _wrap_GooseReceiver_addSubscriber, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseReceiver_removeSubscriber", _wrap_GooseReceiver_removeSubscriber, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseReceiver_start", _wrap_GooseReceiver_start, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseReceiver_stop", _wrap_GooseReceiver_stop, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseReceiver_isRunning", _wrap_GooseReceiver_isRunning, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseReceiver_destroy", _wrap_GooseReceiver_destroy, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseReceiver_startThreadless", _wrap_GooseReceiver_startThreadless, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseReceiver_stopThreadless", _wrap_GooseReceiver_stopThreadless, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseReceiver_tick", _wrap_GooseReceiver_tick, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseReceiver_handleMessage", _wrap_GooseReceiver_handleMessage, context);
SWIGV8_AddStaticFunction(exports_obj, "GooseSubscriber_setDstMac", _wrap___wrap_GooseSubscriber_setDstMac, context);
SWIGV8_AddStaticFunction(exports_obj, "GoosePublisher_create", _wrap_GoosePublisher_create, context);
SWIGV8_AddStaticFunction(exports_obj, "GoosePublisher_createEx", _wrap_GoosePublisher_createEx, context);
SWIGV8_AddStaticFunction(exports_obj, "GoosePublisher_destroy", _wrap_GoosePublisher_destroy, context);
SWIGV8_AddStaticFunction(exports_obj, "GoosePublisher_publish", _wrap_GoosePublisher_publish, context);
SWIGV8_AddStaticFunction(exports_obj, "GoosePublisher_publishAndDump", _wrap_GoosePublisher_publishAndDump, context);
SWIGV8_AddStaticFunction(exports_obj, "GoosePublisher_setGoID", _wrap_GoosePublisher_setGoID, context);
SWIGV8_AddStaticFunction(exports_obj, "GoosePublisher_setGoCbRef", _wrap_GoosePublisher_setGoCbRef, context);
SWIGV8_AddStaticFunction(exports_obj, "GoosePublisher_setTimeAllowedToLive", _wrap_GoosePublisher_setTimeAllowedToLive, context);
SWIGV8_AddStaticFunction(exports_obj, "GoosePublisher_setDataSetRef", _wrap_GoosePublisher_setDataSetRef, context);
SWIGV8_AddStaticFunction(exports_obj, "GoosePublisher_setConfRev", _wrap_GoosePublisher_setConfRev, context);
SWIGV8_AddStaticFunction(exports_obj, "GoosePublisher_setSimulation", _wrap_GoosePublisher_setSimulation, context);
SWIGV8_AddStaticFunction(exports_obj, "GoosePublisher_setStNum", _wrap_GoosePublisher_setStNum, context);
SWIGV8_AddStaticFunction(exports_obj, "GoosePublisher_setSqNum", _wrap_GoosePublisher_setSqNum, context);
SWIGV8_AddStaticFunction(exports_obj, "GoosePublisher_setNeedsCommission", _wrap_GoosePublisher_setNeedsCommission, context);
SWIGV8_AddStaticFunction(exports_obj, "GoosePublisher_increaseStNum", _wrap_GoosePublisher_increaseStNum, context);
SWIGV8_AddStaticFunction(exports_obj, "GoosePublisher_reset", _wrap_GoosePublisher_reset, context);
SWIGV8_AddStaticFunction(exports_obj, "LinkedList_destroyDeep_MmsValueDelete", _wrap_LinkedList_destroyDeep_MmsValueDelete, context);
SWIGV8_AddStaticFunction(exports_obj, "CommParameters_setDstAddress", _wrap_CommParameters_setDstAddress, context);


  /* register classes */
  SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("LastApplError"), _exports_LastApplError_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("sAcseAuthenticationParameter"), _exports_sAcseAuthenticationParameter_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("TSelector"), _exports_TSelector_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("SSelector"), _exports_SSelector_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("PSelector"), _exports_PSelector_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("sIsoConnectionParameters"), _exports_sIsoConnectionParameters_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("MmsConnectionParameters"), _exports_MmsConnectionParameters_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("MmsServerIdentity"), _exports_MmsServerIdentity_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("sMmsJournalEntry"), _exports_sMmsJournalEntry_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("sMmsJournalVariable"), _exports_sMmsJournalVariable_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("PhyComAddress"), _exports_PhyComAddress_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("Timestamp"), _exports_Timestamp_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("MmsAccessSpecifier"), _exports_MmsAccessSpecifier_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("MmsVariableAccessSpecification"), _exports_MmsVariableAccessSpecification_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("ItuObjectIdentifier"), _exports_ItuObjectIdentifier_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("IsoApplicationReference"), _exports_IsoApplicationReference_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("sIedModel"), _exports_sIedModel_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("sLogicalDevice"), _exports_sLogicalDevice_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("sModelNode"), _exports_sModelNode_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("sLogicalNode"), _exports_sLogicalNode_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("sDataObject"), _exports_sDataObject_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("sDataAttribute"), _exports_sDataAttribute_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("DataSetEntry"), _exports_DataSetEntry_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("sDataSet"), _exports_sDataSet_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("sReportControlBlock"), _exports_sReportControlBlock_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("sLogControlBlock"), _exports_sLogControlBlock_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("sLog"), _exports_sLog_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("sSettingGroupControlBlock"), _exports_sSettingGroupControlBlock_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("sGSEControlBlock"), _exports_sGSEControlBlock_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("sSVControlBlock"), _exports_sSVControlBlock_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("sIedServerConfig"), _exports_sIedServerConfig_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("sLinkedList"), _exports_sLinkedList_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("CommParameters"), _exports_CommParameters_obj));


  /* create and register namespace objects */
  
}

#if defined(BUILDING_NODE_EXTENSION)
#if (NODE_MODULE_VERSION < 64)
NODE_MODULE(iec61850, iec61850_initialize)
#else
NODE_MODULE_CONTEXT_AWARE(iec61850, iec61850_initialize)
#endif
#endif
